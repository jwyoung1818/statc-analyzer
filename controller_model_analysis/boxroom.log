dir = ../applications/boxroom/
read schema: class groups_users (GroupsUser) cannot be found!
ADD INDEX: User, signup_token
Finish reading files


=================================
=================================
Handling AdminsController, create
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 642, viewstack =  getViewShow = false
Qnode: 644, viewstack =  getViewShow = false
Qnode: 699, viewstack =  getViewShow = false
Qnode: 782, viewstack =  getViewShow = false
Qnode: 794, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 851, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 1038, viewstack = 930  getViewShow = false
Compute_field_order: qchain size = 31
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
505:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
626:[User.before_validation] (1.) %self[1.0]  self . new_record?
629:[User.before_validation] (1.) %self[1.0]  self . new_record?
642:[User.before_validation] (1.) %self[1.0]  name . where
644:[User.before_validation] (1.) %self[1.0]  email . where
699:[Folder.before_validation] (1.) %self[1.0]  name . where
721:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
731:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
745:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
775:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
782:[Group.before_validation] (1.) %self[1.0]  name . where
794:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
806:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
851:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
863:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
880:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
1026:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
columns (is_admin) from table User take sources: 
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,user_input,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/AdminsController_create/qgraph_vis.gv -o ../applications/boxroom//results/AdminsController_create/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling AdminsController, new
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 635, viewstack = 527  getViewShow = false
Compute_field_order: qchain size = 16
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
505:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
623:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/AdminsController_new/qgraph_vis.gv -o ../applications/boxroom//results/AdminsController_new/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling ClipboardController, copy
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 575, viewstack =  getViewShow = false
Qnode: 650, viewstack =  getViewShow = false
Compute_field_order: qchain size = 19
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
506:[ClipboardController.require_existing_item] (5.4) %v_10[5.1] %v_12[5.3]  %v_10 -> find
514:[ClipboardController.require_existing_item] (6.4) %v_14[6.1] %v_16[6.3]  %v_14 -> find
575:[ApplicationController.get_folder_or_redirect] (4.3) %v_6[4.2] id[2.5]  %v_6 -> find
604:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
647:[User.can_create] (2.10) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (Permission.can_create, sz=1) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/ClipboardController_copy/qgraph_vis.gv -o ../applications/boxroom//results/ClipboardController_copy/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling ClipboardController, create
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Compute_field_order: qchain size = 16
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
506:[ClipboardController.require_existing_item] (5.4) %v_10[5.1] %v_12[5.3]  %v_10 -> find
514:[ClipboardController.require_existing_item] (6.4) %v_14[6.1] %v_16[6.3]  %v_14 -> find
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/ClipboardController_create/qgraph_vis.gv -o ../applications/boxroom//results/ClipboardController_create/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling ClipboardController, destroy
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Compute_field_order: qchain size = 16
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
506:[ClipboardController.require_existing_item] (5.4) %v_10[5.1] %v_12[5.3]  %v_10 -> find
514:[ClipboardController.require_existing_item] (6.4) %v_14[6.1] %v_16[6.3]  %v_14 -> find
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/ClipboardController_destroy/qgraph_vis.gv -o ../applications/boxroom//results/ClipboardController_destroy/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling ClipboardController, move
in ApplicationController Reject FoldersController . require_delete_permission
in ClipboardController Reject FoldersController . require_delete_permission
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 575, viewstack =  getViewShow = false
Qnode: 721, viewstack =  getViewShow = false
Compute_field_order: qchain size = 19
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
506:[ClipboardController.require_existing_item] (5.4) %v_10[5.1] %v_12[5.3]  %v_10 -> find
514:[ClipboardController.require_existing_item] (6.4) %v_14[6.1] %v_16[6.3]  %v_14 -> find
575:[ApplicationController.get_folder_or_redirect] (4.3) %v_6[4.2] id[2.5]  %v_6 -> find
604:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
718:[User.can_create] (2.10) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (Permission.can_create, sz=1) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/ClipboardController_move/qgraph_vis.gv -o ../applications/boxroom//results/ClipboardController_move/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling ClipboardController, reset
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Compute_field_order: qchain size = 16
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
506:[ClipboardController.require_existing_item] (5.4) %v_10[5.1] %v_12[5.3]  %v_10 -> find
514:[ClipboardController.require_existing_item] (6.4) %v_14[6.1] %v_16[6.3]  %v_14 -> find
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/ClipboardController_reset/qgraph_vis.gv -o ../applications/boxroom//results/ClipboardController_reset/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling FilesController, create
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 509, viewstack =  getViewShow = false
Qnode: 584, viewstack =  getViewShow = false
Compute_field_order: qchain size = 17
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
509:[ApplicationController.get_folder_or_redirect] (4.3) %v_6[4.2] id[2.5]  %v_6 -> find
538:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
581:[User.can_create] (2.10) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (Permission.can_create, sz=1) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/FilesController_create/qgraph_vis.gv -o ../applications/boxroom//results/FilesController_create/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling FilesController, destroy
in ApplicationController Reject FoldersController . require_delete_permission
in FilesController Reject FoldersController . require_delete_permission
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Compute_field_order: qchain size = 16
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
500:[FilesController.require_existing_file] (4.5) %v_6[4.2] %v_8[4.4]  %v_6 -> find
534:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/FilesController_destroy/qgraph_vis.gv -o ../applications/boxroom//results/FilesController_destroy/qgraph.pdf
+++ Take time: 00:00:00 +++


=================================
=================================
Handling FilesController, edit
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 669, viewstack = 561  getViewShow = false
Compute_field_order: qchain size = 17
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
500:[FilesController.require_existing_file] (4.5) %v_6[4.2] %v_8[4.4]  %v_6 -> find
534:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
657:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/FilesController_edit/qgraph_vis.gv -o ../applications/boxroom//results/FilesController_edit/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling FilesController, exists
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Compute_field_order: qchain size = 14
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
columns (folder_id) from table UserFile take sources: user_input
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/FilesController_exists/qgraph_vis.gv -o ../applications/boxroom//results/FilesController_exists/qgraph.pdf
+++ Take time: 00:00:00 +++


=================================
=================================
Handling FilesController, new
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 509, viewstack =  getViewShow = false
Qnode: 584, viewstack =  getViewShow = false
Qnode: 743, viewstack = 635  getViewShow = false
Compute_field_order: qchain size = 18
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
509:[ApplicationController.get_folder_or_redirect] (4.3) %v_6[4.2] id[2.5]  %v_6 -> find
538:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
581:[User.can_create] (2.10) %self[2.0]  %self -> groups
731:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (Permission.can_create, sz=1) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/FilesController_new/qgraph_vis.gv -o ../applications/boxroom//results/FilesController_new/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling FilesController, show
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 500, viewstack =  getViewShow = false
Compute_field_order: qchain size = 16
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
500:[FilesController.require_existing_file] (4.5) %v_6[4.2] %v_8[4.4]  %v_6 -> find
534:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (UserFile.attachment_file_name, sz=64) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/FilesController_show/qgraph_vis.gv -o ../applications/boxroom//results/FilesController_show/qgraph.pdf
+++ Take time: 00:00:00 +++


=================================
=================================
Handling FilesController, update
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 500, viewstack =  getViewShow = false
Qnode: 590, viewstack =  getViewShow = false
Qnode: 711, viewstack = 603  getViewShow = false
Compute_field_order: qchain size = 17
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
500:[FilesController.require_existing_file] (4.5) %v_6[4.2] %v_8[4.4]  %v_6 -> find
534:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
699:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (UserFile.folder_id, sz=4) has 0 orders: []
Field (UserFile.attachment_file_name, sz=64) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
columns (id, attachment_file_name, attachment_content_type, attachment_file_size, attachment_updated_at, folder_id, created_at, updated_at) from table UserFile take sources: user_input,query
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/FilesController_update/qgraph_vis.gv -o ../applications/boxroom//results/FilesController_update/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling FoldersController, create
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 509, viewstack =  getViewShow = false
Qnode: 584, viewstack =  getViewShow = false
Qnode: 682, viewstack =  getViewShow = false
Qnode: 872, viewstack = 764  getViewShow = false
Compute_field_order: qchain size = 22
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
509:[ApplicationController.get_folder_or_redirect] (4.3) %v_6[4.2] id[2.5]  %v_6 -> find
538:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
581:[User.can_create] (2.10) %self[2.0]  %self -> groups
682:[Folder.before_validation] (1.) %self[1.0]  name . where
704:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
714:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
728:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
860:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (Permission.can_create, sz=1) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,user_input
columns (can_read) from table Permission take sources: query,user_input
columns (can_update) from table Permission take sources: query,user_input
columns (can_delete) from table Permission take sources: query,user_input
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, parent_id, created_at, updated_at) from table Folder take sources: user_input
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/FoldersController_create/qgraph_vis.gv -o ../applications/boxroom//results/FoldersController_create/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling FoldersController, destroy
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 509, viewstack =  getViewShow = false
Qnode: 656, viewstack =  getViewShow = false
Qnode: 719, viewstack =  getViewShow = false
Compute_field_order: qchain size = 20
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
509:[ApplicationController.get_folder_or_redirect] (4.3) %v_6[4.2] id[2.5]  %v_6 -> find
538:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
579:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
602:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
633:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
716:[User.can_delete] (2.10) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (Permission.can_delete, sz=1) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/FoldersController_destroy/qgraph_vis.gv -o ../applications/boxroom//results/FoldersController_destroy/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling FoldersController, edit
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 509, viewstack =  getViewShow = false
Qnode: 730, viewstack = 622  getViewShow = false
Compute_field_order: qchain size = 19
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
509:[ApplicationController.get_folder_or_redirect] (4.3) %v_6[4.2] id[2.5]  %v_6 -> find
538:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
579:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
602:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
718:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/FoldersController_edit/qgraph_vis.gv -o ../applications/boxroom//results/FoldersController_edit/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling FoldersController, index
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Compute_field_order: qchain size = 15
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
510:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/FoldersController_index/qgraph_vis.gv -o ../applications/boxroom//results/FoldersController_index/qgraph.pdf
+++ Take time: 00:00:00 +++


=================================
=================================
Handling FoldersController, new
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 509, viewstack =  getViewShow = false
Qnode: 584, viewstack =  getViewShow = false
Qnode: 743, viewstack = 635  getViewShow = false
Compute_field_order: qchain size = 18
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
509:[ApplicationController.get_folder_or_redirect] (4.3) %v_6[4.2] id[2.5]  %v_6 -> find
538:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
581:[User.can_create] (2.10) %self[2.0]  %self -> groups
731:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (Permission.can_create, sz=1) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/FoldersController_new/qgraph_vis.gv -o ../applications/boxroom//results/FoldersController_new/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling FoldersController, show
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 509, viewstack =  getViewShow = false
Qnode: 676, viewstack = 568  getViewShow = false
Qnode: 751, viewstack = 568  getViewShow = false
Qnode: 821, viewstack = 568  getViewShow = false
Qnode: 923, viewstack = 568  getViewShow = false
Qnode: 980, viewstack = 568  getViewShow = false
Qnode: 1034, viewstack = 568  getViewShow = false
Qnode: 1120, viewstack = 568  getViewShow = false
Qnode: 1206, viewstack = 568  getViewShow = false
Qnode: 1261, viewstack = 568  getViewShow = false
Qnode: 1351, viewstack = 568  getViewShow = false
Qnode: 1521, viewstack = 568  getViewShow = false
Qnode: 1550, viewstack = 568  getViewShow = false
Qnode: 1570, viewstack = 568  getViewShow = false
Qnode: 1590, viewstack = 568  getViewShow = false
Qnode: 1615, viewstack = 568  getViewShow = false
Qnode: 1635, viewstack = 568  getViewShow = false
Qnode: 1659, viewstack = 568  getViewShow = false
Qnode: 1684, viewstack = 568  getViewShow = false
Qnode: 1713, viewstack = 568  getViewShow = false
Qnode: 1733, viewstack = 568  getViewShow = false
Qnode: 1753, viewstack = 568  getViewShow = false
Qnode: 1778, viewstack = 568  getViewShow = false
Qnode: 1798, viewstack = 568  getViewShow = false
Qnode: 1844, viewstack = 568  getViewShow = false
Qnode: 1864, viewstack = 568  getViewShow = false
Qnode: 1884, viewstack = 568  getViewShow = false
Qnode: 1909, viewstack = 568  getViewShow = false
Qnode: 1929, viewstack = 568  getViewShow = false
Qnode: 1953, viewstack = 568  getViewShow = false
Qnode: 1973, viewstack = 568  getViewShow = false
Qnode: 2007, viewstack = 568  getViewShow = false
Qnode: 2027, viewstack = 568  getViewShow = false
Qnode: 2047, viewstack = 568  getViewShow = false
Qnode: 2072, viewstack = 568  getViewShow = false
Qnode: 2092, viewstack = 568  getViewShow = false
Qnode: 2116, viewstack = 568  getViewShow = false
Qnode: 2159, viewstack = 568  getViewShow = false
Qnode: 2196, viewstack = 568  getViewShow = false
Qnode: 2255, viewstack = 568  getViewShow = false
Qnode: 2297, viewstack = 568  getViewShow = false
Qnode: 2372, viewstack = 568  getViewShow = false
Qnode: 2410, viewstack = 568  getViewShow = false
Qnode: 2469, viewstack = 568  getViewShow = false
Qnode: 2512, viewstack = 568  getViewShow = false
Compute_field_order: qchain size = 62
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
509:[ApplicationController.get_folder_or_redirect] (4.3) %v_6[4.2] id[2.5]  %v_6 -> find
538:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
664:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
718:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
748:[User.can_create] (2.10) %self[2.0]  %self -> groups
809:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
871:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
920:[User.can_read] (2.10) %self[2.0]  %self -> groups
977:[User.can_update] (2.10) %self[2.0]  %self -> groups
1031:[User.can_delete] (2.10) %self[2.0]  %self -> groups
1117:[User.can_read] (2.10) %self[2.0]  %self -> groups
1203:[User.can_update] (2.10) %self[2.0]  %self -> groups
1258:[User.can_delete] (2.10) %self[2.0]  %self -> groups
1339:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
1521:[Clipboard.folders] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1550:[Clipboard.folders] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1570:[Clipboard.files] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1590:[Clipboard.files] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1615:[Clipboard.folders] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1635:[Clipboard.files] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1659:[Clipboard.folders] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1684:[Clipboard.folders] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1713:[Clipboard.folders] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1733:[Clipboard.files] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1753:[Clipboard.files] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1778:[Clipboard.folders] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1798:[Clipboard.files] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1844:[Clipboard.folders] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1864:[Clipboard.files] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1884:[Clipboard.folders] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1909:[Clipboard.folders] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1929:[Clipboard.files] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1953:[Clipboard.files] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
1973:[Clipboard.files] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
2007:[Clipboard.folders] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
2027:[Clipboard.files] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
2047:[Clipboard.folders] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
2072:[Clipboard.folders] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
2092:[Clipboard.files] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
2116:[Clipboard.files] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
2159:[Clipboard.folders] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
2193:[User.can_create] (2.10) %self[2.0]  %self -> groups
2252:[User.can_create] (2.10) %self[2.0]  %self -> groups
2294:[User.can_delete] (2.10) %self[2.0]  %self -> groups
2372:[Clipboard.files] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> where
2407:[User.can_create] (2.10) %self[2.0]  %self -> groups
2466:[User.can_create] (2.10) %self[2.0]  %self -> groups
2509:[User.can_delete] (2.10) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (Permission.can_create, sz=1) has 0 orders: []
Field (Permission.can_read, sz=1) has 0 orders: []
Field (Permission.can_update, sz=1) has 0 orders: []
Field (Permission.can_delete, sz=1) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
the number of loop in query is : 3
1 query
[FoldersController.show] (3.5) permission[-1.-1]  permission -> group
2 query
[FoldersController.show] (4.4) permission[-1.-1]  permission -> group
3 query
[FoldersController.show] (5.4) permission[-1.-1]  permission -> group
CLOSURE BEGIN
BB 1
  outgoing:9 2 
  instructions:
    0: [FoldersController.show] (1.0) 
BB 2
  outgoing:3 
  instructions:
    0: [FoldersController.show] (2.0) 
    1: [FoldersController.show] (2.1) 
    2: RECEIVEARG [FoldersController.show] (2.2) 
    3: COPY [FoldersController.show] (2.3) 
    4: COPY [FoldersController.show] (2.4) 
BB 3
  outgoing:4 5 7 
  instructions:
    0: [FoldersController.show] (3.0) 
    1: COPY <even>[FoldersController.show] (3.1) 
    2: COPY <odd>[FoldersController.show] (3.2) 
    3: [FoldersController.show] (3.3) %self[-1.-1] %self[2.0] %cl_6_3[3.1] %cl_6_4[3.2]  %self -> cycle
    4: [FoldersController.show] (3.4) 
    5: [FoldersController.show] (3.5) permission[-1.-1]  permission -> group
    6: [FoldersController.show] (3.6) %cl_6_6[3.5]  %cl_6_6 -> admins_group?
    7: BRANCH [FoldersController.show] (3.7) %cl_6_7[3.6] 
BB 4
  outgoing:6 7 
  instructions:
    0: [FoldersController.show] (4.0) 
    1: COPY <group_grey.png>[FoldersController.show] (4.1) 
    2: [FoldersController.show] (4.2) %self[-1.-1] %self[2.0] %cl_6_8[4.1]  %self -> image_tag
    3: [FoldersController.show] (4.3) 
    4: [FoldersController.show] (4.4) permission[-1.-1]  permission -> group
    5: [FoldersController.show] (4.5) %cl_6_10[4.4]  %cl_6_10 -> name
    6: [FoldersController.show] (4.6) 
BB 5
  outgoing:7 9 
  instructions:
    0: [FoldersController.show] (5.0) 
    1: COPY <group.png>[FoldersController.show] (5.1) 
    2: [FoldersController.show] (5.2) %self[-1.-1] %self[2.0] %cl_6_12[5.1]  %self -> image_tag
    3: [FoldersController.show] (5.3) 
    4: [FoldersController.show] (5.4) permission[-1.-1]  permission -> group
    5: [FoldersController.show] (5.5) %cl_6_14[5.4]  %cl_6_14 -> name
    6: [FoldersController.show] (5.6) 
    7: [FoldersController.show] (5.7) f[2.2]  f -> check_box
    8: [FoldersController.show] (5.8) 
    9: [FoldersController.show] (5.9) f[5.7] f[2.2]  f -> check_box
    10: [FoldersController.show] (5.10) 
    11: [FoldersController.show] (5.11) f[5.7] f[5.9] f[2.2]  f -> check_box
    12: [FoldersController.show] (5.12) 
    13: [FoldersController.show] (5.13) f[5.7] f[5.9] f[5.11] f[2.2]  f -> check_box
    14: RETURN [FoldersController.show] (5.14) %cl_6_19[5.13] %self[-1.-1] %self[5.2] %self[2.0] 
BB 6
  outgoing:9 
  instructions:
    0: RETURN [FoldersController.show] (6.0) %cl_6_11[4.5] %self[-1.-1] %self[2.0] 
BB 7
  outgoing:9 
  instructions:
    0: [FoldersController.show] (7.0) 
    1: [FoldersController.show] (7.1) %cl_6_20[7.0] 
    2: RETURN [FoldersController.show] (7.2) %cl_6_21[7.1] %self[-1.-1] %self[2.0] 
BB 9
  outgoing:
  instructions:
    0: [FoldersController.show] (9.0) 
CLOSURE END
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/FoldersController_show/qgraph_vis.gv -o ../applications/boxroom//results/FoldersController_show/qgraph.pdf
+++ Take time: 00:00:02 +++


=================================
=================================
Handling FoldersController, update
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 509, viewstack =  getViewShow = false
Qnode: 669, viewstack =  getViewShow = false
Qnode: 790, viewstack = 682  getViewShow = false
Compute_field_order: qchain size = 19
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
509:[ApplicationController.get_folder_or_redirect] (4.3) %v_6[4.2] id[2.5]  %v_6 -> find
538:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
579:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
602:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
778:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
columns (id, name, parent_id, created_at, updated_at) from table Folder take sources: user_input,user_input,query
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/FoldersController_update/qgraph_vis.gv -o ../applications/boxroom//results/FoldersController_update/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling GroupsController, create
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 516, viewstack =  getViewShow = false
Qnode: 566, viewstack =  getViewShow = false
Qnode: 578, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 635, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 815, viewstack = 707  getViewShow = false
Compute_field_order: qchain size = 22
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
504:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
566:[Group.before_validation] (1.) %self[1.0]  name . where
578:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
590:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
635:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
647:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
664:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
803:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
columns (group) from table Permission take sources: user_input
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: user_input
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, created_at, updated_at) from table Group take sources: user_input
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/GroupsController_create/qgraph_vis.gv -o ../applications/boxroom//results/GroupsController_create/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling GroupsController, destroy
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 516, viewstack =  getViewShow = false
Qnode: 541, viewstack =  getViewShow = false
Compute_field_order: qchain size = 16
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
504:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
541:[GroupsController.require_existing_group] (4.5) %v_6[4.2] %v_8[4.4]  %v_6 -> find
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (Group.name, sz=64) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/GroupsController_destroy/qgraph_vis.gv -o ../applications/boxroom//results/GroupsController_destroy/qgraph.pdf
+++ Take time: 00:00:00 +++


=================================
=================================
Handling GroupsController, edit
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 516, viewstack =  getViewShow = false
Qnode: 541, viewstack =  getViewShow = false
Qnode: 714, viewstack = 606  getViewShow = false
Compute_field_order: qchain size = 17
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
504:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
541:[GroupsController.require_existing_group] (4.5) %v_6[4.2] %v_8[4.4]  %v_6 -> find
702:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (Group.name, sz=64) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/GroupsController_edit/qgraph_vis.gv -o ../applications/boxroom//results/GroupsController_edit/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling GroupsController, index
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 516, viewstack =  getViewShow = false
Qnode: 536, viewstack =  getViewShow = false
Qnode: 648, viewstack = 540  getViewShow = false
Compute_field_order: qchain size = 17
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
504:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
536:[GroupsController.index] (2.7) %v_3[2.6]  %v_3 -> order
636:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (Group.name, sz=64) has 1 orders: [Group.name, ]
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/GroupsController_index/qgraph_vis.gv -o ../applications/boxroom//results/GroupsController_index/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling GroupsController, new
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 516, viewstack =  getViewShow = false
Qnode: 648, viewstack = 540  getViewShow = false
Compute_field_order: qchain size = 16
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
504:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
636:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/GroupsController_new/qgraph_vis.gv -o ../applications/boxroom//results/GroupsController_new/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling GroupsController, update
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 516, viewstack =  getViewShow = false
Qnode: 541, viewstack =  getViewShow = false
Qnode: 632, viewstack =  getViewShow = false
Qnode: 753, viewstack = 645  getViewShow = false
Compute_field_order: qchain size = 17
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
504:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
541:[GroupsController.require_existing_group] (4.5) %v_6[4.2] %v_8[4.4]  %v_6 -> find
741:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (Group.name, sz=64) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
columns (id, name, created_at, updated_at) from table Group take sources: user_input,query
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/GroupsController_update/qgraph_vis.gv -o ../applications/boxroom//results/GroupsController_update/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling PermissionsController, update_multiple
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 516, viewstack =  getViewShow = false
Compute_field_order: qchain size = 17
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
504:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
603:[Folder.copy_permissions_to_children] (3.12) %cl_1_8[3.8] %cl_1_11[3.11]  %cl_1_8 -> where
668:[Folder.root] (5.1) %self[2.0] %v_6[5.0]  %self -> find_by_name_and_parent_id
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/PermissionsController_update_multiple/qgraph_vis.gv -o ../applications/boxroom//results/PermissionsController_update_multiple/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling ResetPasswordController, create
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 610, viewstack =  getViewShow = false
Qnode: 612, viewstack =  getViewShow = false
Qnode: 667, viewstack =  getViewShow = false
Qnode: 750, viewstack =  getViewShow = false
Qnode: 762, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 819, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Compute_field_order: qchain size = 26
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
497:[ResetPasswordController.create] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> find_by_email
667:[Folder.before_validation] (1.) %self[1.0]  name . where
689:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
699:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
713:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
743:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
750:[Group.before_validation] (1.) %self[1.0]  name . where
762:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
774:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
819:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
831:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
848:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
columns (reset_password_token) from table User take sources: util_func
columns (reset_password_token_expires_at) from table User take sources: const
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/ResetPasswordController_create/qgraph_vis.gv -o ../applications/boxroom//results/ResetPasswordController_create/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling ResetPasswordController, edit
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 635, viewstack = 527  getViewShow = false
Compute_field_order: qchain size = 16
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
498:[ResetPasswordController.require_valid_token] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> find_by_reset_password_token
623:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/ResetPasswordController_edit/qgraph_vis.gv -o ../applications/boxroom//results/ResetPasswordController_edit/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling ResetPasswordController, new
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 603, viewstack = 495  getViewShow = false
Compute_field_order: qchain size = 15
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
591:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/ResetPasswordController_new/qgraph_vis.gv -o ../applications/boxroom//results/ResetPasswordController_new/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling ResetPasswordController, update
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 638, viewstack =  getViewShow = false
Qnode: 640, viewstack =  getViewShow = false
Qnode: 760, viewstack = 652  getViewShow = false
Compute_field_order: qchain size = 16
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
498:[ResetPasswordController.require_valid_token] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> find_by_reset_password_token
748:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,user_input,query
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/ResetPasswordController_update/qgraph_vis.gv -o ../applications/boxroom//results/ResetPasswordController_update/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling SessionsController, create
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 695, viewstack =  getViewShow = false
Qnode: 697, viewstack =  getViewShow = false
Qnode: 752, viewstack =  getViewShow = false
Qnode: 835, viewstack =  getViewShow = false
Qnode: 847, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 904, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Compute_field_order: qchain size = 26
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
517:[User.authenticate] (6.2) %self[2.0] name[2.5]  %self -> find_by_name
752:[Folder.before_validation] (1.) %self[1.0]  name . where
774:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
784:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
798:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
828:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
835:[Group.before_validation] (1.) %self[1.0]  name . where
847:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
859:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
904:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
916:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
933:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,user_input,user_input,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/SessionsController_create/qgraph_vis.gv -o ../applications/boxroom//results/SessionsController_create/qgraph.pdf
+++ Take time: 00:00:02 +++


=================================
=================================
Handling SessionsController, destroy
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 592, viewstack =  getViewShow = false
Qnode: 594, viewstack =  getViewShow = false
Qnode: 649, viewstack =  getViewShow = false
Qnode: 732, viewstack =  getViewShow = false
Qnode: 744, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 801, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Compute_field_order: qchain size = 29
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
576:[User.before_validation] (1.) %self[1.0]  self . new_record?
579:[User.before_validation] (1.) %self[1.0]  self . new_record?
592:[User.before_validation] (1.) %self[1.0]  name . where
594:[User.before_validation] (1.) %self[1.0]  email . where
649:[Folder.before_validation] (1.) %self[1.0]  name . where
671:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
681:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
695:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
725:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
732:[Group.before_validation] (1.) %self[1.0]  name . where
744:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
756:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
801:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
813:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
830:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
columns (remember_token) from table User take sources: 
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/SessionsController_destroy/qgraph_vis.gv -o ../applications/boxroom//results/SessionsController_destroy/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling SessionsController, new
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 603, viewstack = 495  getViewShow = false
Compute_field_order: qchain size = 15
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
591:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/SessionsController_new/qgraph_vis.gv -o ../applications/boxroom//results/SessionsController_new/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling ShareLinksController, create
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 532, viewstack =  getViewShow = false
Qnode: 724, viewstack = 616  getViewShow = false
Compute_field_order: qchain size = 17
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
512:[ShareLink.file_for_token] (2.7) %self[2.0] token[2.5]  %self -> find_by_link_token
532:[ShareLinksController.require_existing_file] (4.3) %v_10[4.0] %v_12[4.2]  %v_10 -> find
712:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (UserFile.attachment_file_name, sz=64) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
columns (user) from table ShareLink take sources: user_input
columns (link_token) from table ShareLink take sources: util_func
columns (id, emails, link_token, link_expires_at, user_file_id, created_at, updated_at, message, user_id) from table ShareLink take sources: query,user_input,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/ShareLinksController_create/qgraph_vis.gv -o ../applications/boxroom//results/ShareLinksController_create/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling ShareLinksController, destroy
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 516, viewstack =  getViewShow = false
Compute_field_order: qchain size = 18
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
504:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
553:[ShareLink.file_for_token] (2.7) %self[2.0] token[2.5]  %self -> find_by_link_token
573:[ShareLinksController.require_existing_file] (4.3) %v_10[4.0] %v_12[4.2]  %v_10 -> find
595:[ShareLinksController.require_existing_share_link] (4.5) %v_6[4.2] %v_8[4.4]  %v_6 -> find
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/ShareLinksController_destroy/qgraph_vis.gv -o ../applications/boxroom//results/ShareLinksController_destroy/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling ShareLinksController, index
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 516, viewstack =  getViewShow = false
Qnode: 602, viewstack =  getViewShow = false
Qnode: 716, viewstack = 608  getViewShow = false
Compute_field_order: qchain size = 20
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
504:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
553:[ShareLink.file_for_token] (2.7) %self[2.0] token[2.5]  %self -> find_by_link_token
573:[ShareLinksController.require_existing_file] (4.3) %v_10[4.0] %v_12[4.2]  %v_10 -> find
602:[ShareLink.active_share_links] (2.10) %v_6[2.9]  %v_6 -> order
704:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
769:[ShareLinksController.index] (3.5) share_link[2.2]  share_link -> user_file
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (ShareLink.user_id, sz=4) has 1 orders: [ShareLink.link_expires_at, ]
Field (ShareLink.emails, sz=64) has 1 orders: [ShareLink.link_expires_at, ]
Field (ShareLink.link_expires_at, sz=8) has 1 orders: [ShareLink.link_expires_at, ]
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/ShareLinksController_index/qgraph_vis.gv -o ../applications/boxroom//results/ShareLinksController_index/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling ShareLinksController, new
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 532, viewstack =  getViewShow = false
Qnode: 663, viewstack = 555  getViewShow = false
Compute_field_order: qchain size = 17
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
512:[ShareLink.file_for_token] (2.7) %self[2.0] token[2.5]  %self -> find_by_link_token
532:[ShareLinksController.require_existing_file] (4.3) %v_10[4.0] %v_12[4.2]  %v_10 -> find
651:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (UserFile.attachment_file_name, sz=64) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/ShareLinksController_new/qgraph_vis.gv -o ../applications/boxroom//results/ShareLinksController_new/qgraph.pdf
+++ Take time: 00:00:02 +++


=================================
=================================
Handling ShareLinksController, show
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 532, viewstack =  getViewShow = false
Compute_field_order: qchain size = 16
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
512:[ShareLink.file_for_token] (2.7) %self[2.0] token[2.5]  %self -> find_by_link_token
532:[ShareLinksController.require_existing_file] (4.3) %v_10[4.0] %v_12[4.2]  %v_10 -> find
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (UserFile.attachment_file_name, sz=64) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/ShareLinksController_show/qgraph_vis.gv -o ../applications/boxroom//results/ShareLinksController_show/qgraph.pdf
+++ Take time: 00:00:02 +++


=================================
=================================
Handling SignupController, edit
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 635, viewstack = 527  getViewShow = false
Compute_field_order: qchain size = 16
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
498:[SignupController.require_valid_token] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> find_by_signup_token
623:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/SignupController_edit/qgraph_vis.gv -o ../applications/boxroom//results/SignupController_edit/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling SignupController, update
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 638, viewstack =  getViewShow = false
Qnode: 640, viewstack =  getViewShow = false
Qnode: 760, viewstack = 652  getViewShow = false
Compute_field_order: qchain size = 16
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
498:[SignupController.require_valid_token] (2.9) %v_3[2.6] %v_5[2.8]  %v_3 -> find_by_signup_token
748:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,user_input,query
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/SignupController_update/qgraph_vis.gv -o ../applications/boxroom//results/SignupController_update/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling UsersController, create
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 516, viewstack =  getViewShow = false
Qnode: 649, viewstack =  getViewShow = false
Qnode: 651, viewstack =  getViewShow = false
Qnode: 706, viewstack =  getViewShow = false
Qnode: 789, viewstack =  getViewShow = false
Qnode: 801, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 858, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 1048, viewstack = 940  getViewShow = false
Qnode: 1150, viewstack = 940 1078  getViewShow = true
	<Group totalFieldSize="84">84</Group>
Qnode: 1178, viewstack = 940 1078  getViewShow = true
	<Group totalFieldSize="84">84</Group>
Qnode: 1193, viewstack = 940 1078  getViewShow = true
	<Group totalFieldSize="84">84</Group>
Qnode: 1203, viewstack = 940 1078  getViewShow = true
	<Group totalFieldSize="84">84</Group>
Compute_field_order: qchain size = 37
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
504:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
633:[User.before_validation] (1.) %self[1.0]  self . new_record?
636:[User.before_validation] (1.) %self[1.0]  self . new_record?
649:[User.before_validation] (1.) %self[1.0]  name . where
651:[User.before_validation] (1.) %self[1.0]  email . where
706:[Folder.before_validation] (1.) %self[1.0]  name . where
728:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
738:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
752:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
782:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
789:[Group.before_validation] (1.) %self[1.0]  name . where
801:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
813:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
858:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
870:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
887:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
1036:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
1089:[UsersController.create] (3.4) %cl_2_4[3.3]  %cl_2_4 -> new_record?
1108:[UsersController.create] (6.8) %cl_2_15[6.7]  %cl_2_15 -> new_record?
1138:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
1178:[Group.admins_group] (2.9) %v_5[2.8]  %v_5 -> first
1193:[Group.all_except_admins] (2.6) %self[2.0]  %self -> where
1203:[UsersController.create] (14.2) %cl_2_41[14.1]  %cl_2_41 -> all
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (Group.id, sz=4) has 0 orders: []
Field (Group.name, sz=64) has 0 orders: []
Field (Group.created_at, sz=8) has 0 orders: []
Field (Group.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,user_input,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/UsersController_create/qgraph_vis.gv -o ../applications/boxroom//results/UsersController_create/qgraph.pdf
+++ Take time: 00:00:02 +++


=================================
=================================
Handling UsersController, destroy
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 516, viewstack =  getViewShow = false
Qnode: 559, viewstack =  getViewShow = false
Qnode: 581, viewstack =  getViewShow = false
Compute_field_order: qchain size = 17
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
504:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
547:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
581:[UsersController.require_existing_user] (7.7) %v_15[7.4] %v_17[7.6]  %v_15 -> find
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (User.is_admin, sz=1) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/UsersController_destroy/qgraph_vis.gv -o ../applications/boxroom//results/UsersController_destroy/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling UsersController, edit
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 516, viewstack =  getViewShow = false
Qnode: 559, viewstack =  getViewShow = false
Qnode: 581, viewstack =  getViewShow = false
Qnode: 731, viewstack = 623  getViewShow = false
Qnode: 833, viewstack = 623 761  getViewShow = true
	<Group totalFieldSize="84">84</Group>
Qnode: 861, viewstack = 623 761  getViewShow = true
	<Group totalFieldSize="84">84</Group>
Qnode: 876, viewstack = 623 761  getViewShow = true
	<Group totalFieldSize="84">84</Group>
Qnode: 886, viewstack = 623 761  getViewShow = true
	<Group totalFieldSize="84">84</Group>
Compute_field_order: qchain size = 22
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
504:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
547:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
581:[UsersController.require_existing_user] (7.7) %v_15[7.4] %v_17[7.6]  %v_15 -> find
719:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
821:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
861:[Group.admins_group] (2.9) %v_5[2.8]  %v_5 -> first
876:[Group.all_except_admins] (2.6) %self[2.0]  %self -> where
886:[UsersController.edit] (14.2) %cl_2_41[14.1]  %cl_2_41 -> all
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (User.is_admin, sz=1) has 0 orders: []
Field (Group.id, sz=4) has 0 orders: []
Field (Group.name, sz=64) has 0 orders: []
Field (Group.created_at, sz=8) has 0 orders: []
Field (Group.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/UsersController_edit/qgraph_vis.gv -o ../applications/boxroom//results/UsersController_edit/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling UsersController, extend
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 516, viewstack =  getViewShow = false
Qnode: 559, viewstack =  getViewShow = false
Qnode: 581, viewstack =  getViewShow = false
Qnode: 717, viewstack =  getViewShow = false
Qnode: 719, viewstack =  getViewShow = false
Qnode: 774, viewstack =  getViewShow = false
Qnode: 857, viewstack =  getViewShow = false
Qnode: 869, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 926, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Compute_field_order: qchain size = 28
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
504:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
547:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
581:[UsersController.require_existing_user] (7.7) %v_15[7.4] %v_17[7.6]  %v_15 -> find
774:[Folder.before_validation] (1.) %self[1.0]  name . where
796:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
806:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
820:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
850:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
857:[Group.before_validation] (1.) %self[1.0]  name . where
869:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
881:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
926:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
938:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
955:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (User.is_admin, sz=1) has 0 orders: []
Field (User.name, sz=64) has 0 orders: []
Field (User.email, sz=64) has 0 orders: []
Field (User.signup_token_expires_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
columns (signup_token_expires_at) from table User take sources: const,query
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/UsersController_extend/qgraph_vis.gv -o ../applications/boxroom//results/UsersController_extend/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling UsersController, index
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 516, viewstack =  getViewShow = false
Qnode: 536, viewstack =  getViewShow = false
Qnode: 547, viewstack =  getViewShow = false
Qnode: 659, viewstack = 551  getViewShow = false
Compute_field_order: qchain size = 19
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
504:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
536:[UsersController.index] (2.7) %v_3[2.6]  %v_3 -> where
547:[UsersController.index] (2.18) %v_11[2.16] %v_12[2.17]  %v_11 -> order
647:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
754:[UsersController.index] (21.25) %cl_1_66[21.24]  %cl_1_66 -> blank?
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (User.name, sz=64) has 0 orders: []
Field (User.email, sz=64) has 1 orders: [User.email, ]
Field (User.is_admin, sz=1) has 1 orders: [User.email, ]
Field (User.signup_token_expires_at, sz=8) has 1 orders: [User.email, ]
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/UsersController_index/qgraph_vis.gv -o ../applications/boxroom//results/UsersController_index/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling UsersController, new
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 516, viewstack =  getViewShow = false
Qnode: 648, viewstack = 540  getViewShow = false
Qnode: 750, viewstack = 540 678  getViewShow = true
	<Group totalFieldSize="84">84</Group>
Qnode: 778, viewstack = 540 678  getViewShow = true
	<Group totalFieldSize="84">84</Group>
Qnode: 793, viewstack = 540 678  getViewShow = true
	<Group totalFieldSize="84">84</Group>
Qnode: 803, viewstack = 540 678  getViewShow = true
	<Group totalFieldSize="84">84</Group>
Compute_field_order: qchain size = 22
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
504:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
636:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
689:[UsersController.new] (3.4) %cl_2_4[3.3]  %cl_2_4 -> new_record?
708:[UsersController.new] (6.8) %cl_2_15[6.7]  %cl_2_15 -> new_record?
738:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
778:[Group.admins_group] (2.9) %v_5[2.8]  %v_5 -> first
793:[Group.all_except_admins] (2.6) %self[2.0]  %self -> where
803:[UsersController.new] (14.2) %cl_2_41[14.1]  %cl_2_41 -> all
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (Group.id, sz=4) has 0 orders: []
Field (Group.name, sz=64) has 0 orders: []
Field (Group.created_at, sz=8) has 0 orders: []
Field (Group.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/UsersController_new/qgraph_vis.gv -o ../applications/boxroom//results/UsersController_new/qgraph.pdf
+++ Take time: 00:00:01 +++


=================================
=================================
Handling UsersController, update
Qnode: 164, viewstack =  getViewShow = false
Qnode: 166, viewstack =  getViewShow = false
Qnode: 222, viewstack =  getViewShow = false
Qnode: 307, viewstack =  getViewShow = false
Qnode: 319, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 376, viewstack =  getViewShow = false
	<Folder totalFieldSize="88">88</Folder>
Qnode: 516, viewstack =  getViewShow = false
Qnode: 559, viewstack =  getViewShow = false
Qnode: 581, viewstack =  getViewShow = false
Qnode: 734, viewstack =  getViewShow = false
Qnode: 736, viewstack =  getViewShow = false
Qnode: 857, viewstack = 749  getViewShow = false
Qnode: 959, viewstack = 749 887  getViewShow = true
	<Group totalFieldSize="84">84</Group>
Qnode: 987, viewstack = 749 887  getViewShow = true
	<Group totalFieldSize="84">84</Group>
Qnode: 1002, viewstack = 749 887  getViewShow = true
	<Group totalFieldSize="84">84</Group>
Qnode: 1012, viewstack = 749 887  getViewShow = true
	<Group totalFieldSize="84">84</Group>
Compute_field_order: qchain size = 22
26:[ApplicationController.current_user] (5.3) %v_6[5.0] %v_8[5.2]  %v_6 -> find_by_id
43:[ApplicationController.require_login] (5.3) %v_9[5.0] %v_11[5.2]  %v_9 -> find_by_remember_token
222:[Folder.before_validation] (1.) %self[1.0]  name . where
244:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
254:[Folder.create_permissions] (4.2) %v_5[4.1]  %v_5 -> permissions
268:ATTRASSIGN [Folder.create_permissions] (3.6) %cl_1_5[3.5]  p -> group
299:[User.create_root_folder_and_admins_group] (2.11) %self[2.0]  %self -> groups
307:[Group.before_validation] (1.) %self[1.0]  name . where
319:[Group.create_admin_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
331:ATTRASSIGN [Group.create_admin_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
376:[Group.create_permissions] (2.7) %v_3[2.6] %self[2.0]  %v_3 -> find_each
388:ATTRASSIGN [Group.create_permissions] (3.5) %self[-1.-1] %self[2.0]  %cl_1_4 -> group
405:[Folder.is_root?] (3.0) %self[2.0]  %self -> new_record?
478:[User.no_admin_yet?] (2.7) %v_3[2.6]  %v_3 -> blank?
504:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
547:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
581:[UsersController.require_existing_user] (7.7) %v_15[7.4] %v_17[7.6]  %v_15 -> find
845:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
947:[User.member_of_admins?] (2.6) %self[2.0]  %self -> groups
987:[Group.admins_group] (2.9) %v_5[2.8]  %v_5 -> first
1002:[Group.all_except_admins] (2.6) %self[2.0]  %self -> where
1012:[UsersController.update] (14.2) %cl_2_41[14.1]  %cl_2_41 -> all
Field (Folder.id, sz=4) has 0 orders: []
Field (Folder.name, sz=64) has 0 orders: []
Field (Folder.parent_id, sz=4) has 0 orders: []
Field (Folder.created_at, sz=8) has 0 orders: []
Field (Folder.updated_at, sz=8) has 0 orders: []
Field (User.is_admin, sz=1) has 0 orders: []
Field (User.name, sz=64) has 0 orders: []
Field (User.email, sz=64) has 0 orders: []
Field (Group.id, sz=4) has 0 orders: []
Field (Group.name, sz=64) has 0 orders: []
Field (Group.created_at, sz=8) has 0 orders: []
Field (Group.updated_at, sz=8) has 0 orders: []
columns (remember_token) from table User take sources: util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: util_func
columns (signup_token_expires_at) from table User take sources: const
columns (group) from table Permission take sources: query
columns (can_create) from table Permission take sources: query,const
columns (can_read) from table Permission take sources: query,const
columns (can_update) from table Permission take sources: query,const
columns (can_delete) from table Permission take sources: query,const
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: 
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (group) from table Permission take sources: const
columns (can_create) from table Permission take sources: 
columns (can_read) from table Permission take sources: query
columns (can_update) from table Permission take sources: 
columns (can_delete) from table Permission take sources: 
columns (id, folder_id, group_id, can_create, can_read, can_update, can_delete) from table Permission take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,query,util_func
columns (reset_password_token) from table User take sources: 
columns (reset_password_token_expires_at) from table User take sources: 
columns (signup_token) from table User take sources: 
columns (signup_token_expires_at) from table User take sources: 
columns (id, name, email, hashed_password, password_salt, is_admin, remember_token, reset_password_token, reset_password_token_expires_at, created_at, updated_at, signup_token, signup_token_expires_at) from table User take sources: const,user_input,query
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~~~~~~~~~~~~~Handling loop invariant~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~Finish handling loop invariant~~~~~~~~~~~
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
command : dot -Tpdf ../applications/boxroom//results/UsersController_update/qgraph_vis.gv -o ../applications/boxroom//results/UsersController_update/qgraph.pdf
+++ Take time: 00:00:02 +++
