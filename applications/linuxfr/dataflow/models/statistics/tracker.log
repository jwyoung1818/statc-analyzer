SET IRMethod, name = states
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->states def_%v_3 %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: GETFIELD %self->states def_%v_4 %self[2.0,] 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: COPY TYPE_StringLiteral def_%v_6 
		 3: COPY TYPE_StringLiteral def_%v_7 
		 4: COPY TYPE_StringLiteral def_%v_8 
		 5: COPY TYPE_StringLiteral def_%v_9 
		 6: HASH- def_%v_10 %v_6[4.2,] %v_7[4.3,] %v_8[4.4,] %v_9[4.5,] 
		 7: ATTRASSIGN %self->states %v_10[4.6,] 
		 8: 
		 9: COPY TYPE_StringLiteral def_%v_11 
		 10: %self->select_all def_%v_12 %self[4.7,2.0,] %v_11[4.9,] 	 ARGS:%v_11,
		 11: COPY TYPE_PASS def_by_state %v_12[4.10,] 
		 12: 
		 13: %v_12->each def_%v_13 %v_12[4.10,] %self[4.7,4.10,2.0,] 	 ARGS:%v_12,
CLOSURE BEGIN: %self[4.7,4.10,2.0,] state[4.13,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_state 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->states def_%cl_1_3 %self[2.0,] 
		 2: COPY TYPE_StringLiteral def_%cl_1_4 
		 3: state->[] def_%cl_1_5 state[2.2,] %cl_1_4[3.2,] 	 ARGS:%cl_1_4,
		 4: COPY TYPE_StringLiteral def_%cl_1_6 
		 5: state->[] def_%cl_1_7 state[3.3,2.2,] %cl_1_6[3.4,] 	 ARGS:%cl_1_6,
		 6: ATTRASSIGN %cl_1_3->[] %cl_1_5[3.3,] %cl_1_7[3.5,] 
		 7: RETURN %cl_1_7[3.5,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[4.0,] 
		 2: RETURN %cl_1_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 14: 
		 15: GETFIELD %self->states def_%v_14 %self[4.7,4.10,2.0,] 
		 16: COPY TYPE_StringLiteral def_%v_15 
		 17: GETFIELD %self->states def_%v_16 %self[4.7,4.10,2.0,] 
		 18: %v_16->values def_%v_17 %v_16[4.17,] 	 ARGS:
		 19: %v_17->sum def_%v_18 %v_17[4.18,] 	 ARGS:
		 20: ATTRASSIGN %v_14->[] %v_15[4.16,] %v_18[4.19,] 
		 21: 
		 22: GETFIELD %self->states def_%v_19 %self[4.7,4.10,2.0,] 
		 23: RETURN %v_19[4.22,] %self[4.7,4.10,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = median_time
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->states def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: %v_3->[] def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: %v_5->/ def_%v_6 %v_5[2.8,] 	 ARGS:Fixnum,
		 10: COPY TYPE_PASS def_median %v_6[2.9,] 
		 11: 
		 12: COPY TYPE_StringLiteral def_%v_7 
		 13: COPY TYPE_StringLiteral def_%v_8 
		 14: BUILDSTRING def_%v_9 %v_7[2.12,] %v_6[2.9,] %v_8[2.13,] 
		 15: COPY TYPE_StringLiteral def_%v_10 
		 16: %self->count def_%v_11 %self[2.0,2.6,] %v_9[2.14,] %v_10[2.15,] 	 ARGS:%v_9,%v_10,
		 17: %v_11->to_i def_%v_12 %v_11[2.16,] 	 ARGS:
		 18: %v_12->/ def_%v_13 %v_12[2.17,] 	 ARGS:Fixnum,
		 19: RETURN %v_13[2.18,] %self[2.0,2.6,2.16,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = average_time
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: %self->count def_%v_5 %self[2.0,] %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_3,%v_4,
		 9: %v_5->to_i def_%v_6 %v_5[2.8,] 	 ARGS:
		 10: %v_6->/ def_%v_7 %v_6[2.9,] 	 ARGS:Fixnum,
		 11: RETURN %v_7[2.10,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = distinct_users
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: %self->count def_%v_4 %self[2.0,] %v_3[2.6,] 	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = top_reporters
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: %self->select_all def_%v_4 %self[2.0,] %v_3[2.6,] 	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = good_workers
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: %self->select_all def_%v_4 %self[2.0,] %v_3[2.6,] 	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = by_year
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->by_year def_%v_3 %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: GETFIELD %self->by_year def_%v_4 %self[2.0,] 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: HASH- def_%v_6 
		 3: ATTRASSIGN %self->by_year %v_6[4.2,] 
		 4: 
		 5: COPY TYPE_StringLiteral def_%v_7 
		 6: %self->select_all def_%v_8 %self[4.3,2.0,] %v_7[4.5,] 	 ARGS:%v_7,
		 7: COPY TYPE_PASS def_entries %v_8[4.6,] 
		 8: 
		 9: %v_8->each def_%v_9 %v_8[4.6,] %self[4.3,4.6,2.0,] 	 ARGS:%v_8,
CLOSURE BEGIN: %self[4.3,4.6,2.0,] entry[4.9,] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_entry 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->by_year def_%cl_1_3 %self[2.0,] 
		 2: COPY TYPE_StringLiteral def_%cl_1_5 
		 3: entry->[] def_%cl_1_6 entry[2.2,] %cl_1_5[3.2,] 	 ARGS:%cl_1_5,
		 4: %cl_1_3->[] def_%cl_1_4 %cl_1_3[3.1,] %cl_1_6[3.3,] 	 ARGS:%cl_1_6,
		 5: BRANCH %cl_1_4[3.4,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%cl_1_7 
		 1: COPY TYPE_StringLiteral def_%cl_1_8 
		 2: COPY TYPE_StringLiteral def_%cl_1_9 
		 3: HASH- def_%cl_1_10 %cl_1_7[4.0,] %cl_1_8[4.1,] %cl_1_9[4.2,] 
		 4: %cl_1_3->[]= def_%cl_1_4 %cl_1_3[3.1,] %cl_1_6[3.3,] %cl_1_10[4.3,] 	 ARGS:%cl_1_6,%cl_1_10,
		 5: COPY TYPE_PASS def_%cl_1_4 %cl_1_10[4.3,] 
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->by_year def_%cl_1_11 %self[2.0,] 
		 2: COPY TYPE_StringLiteral def_%cl_1_12 
		 3: entry->[] def_%cl_1_13 entry[2.2,] %cl_1_12[5.2,] 	 ARGS:%cl_1_12,
		 4: %cl_1_11->[] def_%cl_1_14 %cl_1_11[5.1,] %cl_1_13[5.3,] 	 ARGS:%cl_1_13,
		 5: COPY TYPE_StringLiteral def_%cl_1_15 
		 6: entry->[] def_%cl_1_16 entry[5.3,2.2,] %cl_1_15[5.5,] 	 ARGS:%cl_1_15,
		 7: COPY TYPE_StringLiteral def_%cl_1_17 
		 8: entry->[] def_%cl_1_18 entry[5.3,5.6,2.2,] %cl_1_17[5.7,] 	 ARGS:%cl_1_17,
		 9: ATTRASSIGN %cl_1_14->[] %cl_1_16[5.6,] %cl_1_18[5.8,] 
		 10: RETURN %cl_1_18[5.8,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_19 
		 1: def_%cl_1_20 %cl_1_19[6.0,] 
		 2: RETURN %cl_1_20[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: 
		 11: GETFIELD %self->by_year def_%v_10 %self[4.3,4.6,2.0,] 
		 12: RETURN %v_10[4.11,] %self[4.3,4.6,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = by_month
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->by_month def_%v_3 %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: GETFIELD %self->by_month def_%v_4 %self[2.0,] 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: HASH- def_%v_6 
		 3: ATTRASSIGN %self->by_month %v_6[4.2,] 
		 4: 
		 5: COPY TYPE_StringLiteral def_%v_7 
		 6: %self->select_all def_%v_8 %self[4.3,2.0,] %v_7[4.5,] 	 ARGS:%v_7,
		 7: COPY TYPE_PASS def_entries %v_8[4.6,] 
		 8: 
		 9: %v_8->each def_%v_9 %v_8[4.6,] %self[4.3,4.6,2.0,] 	 ARGS:%v_8,
CLOSURE BEGIN: %self[4.3,4.6,2.0,] entry[4.9,] 
BB 1
	outgoing: 17 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_entry 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 15 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->by_month def_%cl_1_3 %self[2.0,] 
		 2: COPY TYPE_StringLiteral def_%cl_1_5 
		 3: entry->[] def_%cl_1_6 entry[2.2,] %cl_1_5[3.2,] 	 ARGS:%cl_1_5,
		 4: %cl_1_3->[] def_%cl_1_4 %cl_1_3[3.1,] %cl_1_6[3.3,] 	 ARGS:%cl_1_6,
		 5: BRANCH %cl_1_4[3.4,] 
BB 4
	outgoing: 5 15 
	datadep: 
	instructions:
		 0: HASH- def_%cl_1_7 
		 1: %cl_1_3->[]= def_%cl_1_4 %cl_1_3[3.1,] %cl_1_6[3.3,] %cl_1_7[4.0,] 	 ARGS:%cl_1_6,%cl_1_7,
		 2: COPY TYPE_PASS def_%cl_1_4 %cl_1_7[4.0,] 
BB 5
	outgoing: 6 7 15 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->by_month def_%cl_1_8 %self[2.0,] 
		 2: COPY TYPE_StringLiteral def_%cl_1_9 
		 3: entry->[] def_%cl_1_10 entry[2.2,] %cl_1_9[5.2,] 	 ARGS:%cl_1_9,
		 4: %cl_1_8->[] def_%cl_1_11 %cl_1_8[5.1,] %cl_1_10[5.3,] 	 ARGS:%cl_1_10,
		 5: COPY TYPE_StringLiteral def_%cl_1_13 
		 6: %cl_1_11->[] def_%cl_1_12 %cl_1_11[5.4,] %cl_1_13[5.5,] 	 ARGS:%cl_1_13,
		 7: BRANCH %cl_1_12[5.6,] 
BB 6
	outgoing: 7 15 
	datadep: 
	instructions:
		 0: %cl_1_11->[]= def_%cl_1_12 %cl_1_11[5.4,] %cl_1_13[5.5,] 	 ARGS:%cl_1_13,Fixnum,
		 1: COPY TYPE_Fixnum def_%cl_1_12 
BB 7
	outgoing: 8 13 15 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->by_month def_%cl_1_14 %self[2.0,] 
		 2: COPY TYPE_StringLiteral def_%cl_1_15 
		 3: entry->[] def_%cl_1_16 entry[2.2,] %cl_1_15[7.2,] 	 ARGS:%cl_1_15,
		 4: %cl_1_14->[] def_%cl_1_17 %cl_1_14[7.1,] %cl_1_16[7.3,] 	 ARGS:%cl_1_16,
		 5: COPY TYPE_StringLiteral def_%cl_1_18 
		 6: %cl_1_17->[] def_%cl_1_19 %cl_1_17[7.4,] %cl_1_18[7.5,] 	 ARGS:%cl_1_18,
		 7: %cl_1_19->+ def_%cl_1_19 %cl_1_19[7.6,] 	 ARGS:Fixnum,
		 8: %cl_1_17->[]= def_%cl_1_20 %cl_1_17[7.4,7.6,] %cl_1_18[7.5,] %cl_1_19[7.6,7.7,] 	 ARGS:%cl_1_18,%cl_1_19,
		 9: 
		 10: COPY TYPE_StringLiteral def_%cl_1_21 
		 11: entry->[] def_%cl_1_22 entry[7.3,2.2,] %cl_1_21[7.10,] 	 ARGS:%cl_1_21,
		 12: COPY TYPE_StringLiteral def_%cl_1_23 
		 13: %cl_1_22->!= def_%cl_1_24 %cl_1_22[7.11,] %cl_1_23[7.12,] 	 ARGS:%cl_1_23,
		 14: BRANCH %cl_1_24[7.13,] 
BB 8
	outgoing: 9 10 15 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->by_month def_%cl_1_25 %self[2.0,] 
		 2: COPY TYPE_StringLiteral def_%cl_1_27 
		 3: entry->[] def_%cl_1_28 entry[2.2,] %cl_1_27[8.2,] 	 ARGS:%cl_1_27,
		 4: %cl_1_25->[] def_%cl_1_26 %cl_1_25[8.1,] %cl_1_28[8.3,] 	 ARGS:%cl_1_28,
		 5: BRANCH %cl_1_26[8.4,] 
BB 9
	outgoing: 10 15 
	datadep: 
	instructions:
		 0: HASH- def_%cl_1_29 
		 1: %cl_1_25->[]= def_%cl_1_26 %cl_1_25[8.1,] %cl_1_28[8.3,] %cl_1_29[9.0,] 	 ARGS:%cl_1_28,%cl_1_29,
		 2: COPY TYPE_PASS def_%cl_1_26 %cl_1_29[9.0,] 
BB 10
	outgoing: 11 12 15 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->by_month def_%cl_1_30 %self[2.0,] 
		 2: COPY TYPE_StringLiteral def_%cl_1_31 
		 3: entry->[] def_%cl_1_32 entry[2.2,] %cl_1_31[10.2,] 	 ARGS:%cl_1_31,
		 4: %cl_1_30->[] def_%cl_1_33 %cl_1_30[10.1,] %cl_1_32[10.3,] 	 ARGS:%cl_1_32,
		 5: COPY TYPE_StringLiteral def_%cl_1_35 
		 6: entry->[] def_%cl_1_36 entry[10.3,2.2,] %cl_1_35[10.5,] 	 ARGS:%cl_1_35,
		 7: %cl_1_33->[] def_%cl_1_34 %cl_1_33[10.4,] %cl_1_36[10.6,] 	 ARGS:%cl_1_36,
		 8: BRANCH %cl_1_34[10.7,] 
BB 11
	outgoing: 12 15 
	datadep: 
	instructions:
		 0: %cl_1_33->[]= def_%cl_1_34 %cl_1_33[10.4,] %cl_1_36[10.6,] 	 ARGS:%cl_1_36,Fixnum,
		 1: COPY TYPE_Fixnum def_%cl_1_34 
BB 12
	outgoing: 14 15 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->by_month def_%cl_1_37 %self[2.0,] 
		 2: COPY TYPE_StringLiteral def_%cl_1_38 
		 3: entry->[] def_%cl_1_39 entry[2.2,] %cl_1_38[12.2,] 	 ARGS:%cl_1_38,
		 4: %cl_1_37->[] def_%cl_1_40 %cl_1_37[12.1,] %cl_1_39[12.3,] 	 ARGS:%cl_1_39,
		 5: COPY TYPE_StringLiteral def_%cl_1_41 
		 6: entry->[] def_%cl_1_42 entry[12.3,2.2,] %cl_1_41[12.5,] 	 ARGS:%cl_1_41,
		 7: %cl_1_40->[] def_%cl_1_43 %cl_1_40[12.4,] %cl_1_42[12.6,] 	 ARGS:%cl_1_42,
		 8: %cl_1_43->+ def_%cl_1_43 %cl_1_43[12.7,] 	 ARGS:Fixnum,
		 9: %cl_1_40->[]= def_%cl_1_44 %cl_1_40[12.4,12.7,] %cl_1_42[12.6,] %cl_1_43[12.7,12.8,] 	 ARGS:%cl_1_42,%cl_1_43,
		 10: 
BB 13
	outgoing: 17 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 14
	outgoing: 17 
	datadep: 
	instructions:
		 0: RETURN %cl_1_43[12.7,12.8,] %self[2.0,] 
BB 15
	outgoing: 17 
	datadep: 
	instructions:
		 0: def_%cl_1_45 
		 1: def_%cl_1_46 %cl_1_45[15.0,] 
		 2: RETURN %cl_1_46[15.1,] %self[2.0,] 
BB 17
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: 
		 11: GETFIELD %self->by_month def_%v_10 %self[4.3,4.6,2.0,] 
		 12: RETURN %v_10[4.11,] %self[4.3,4.6,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = by_category
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: %self->select_all def_%v_4 %self[2.0,] %v_3[2.6,] 	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

