SET IRMethod, name = initialize
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_range 
		 6: range[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%v_3 	 ARGS:
		 1: COPY TYPE_PASS def_range %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: def_checked_in 
		 1: checked_in[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Boolean def_checked_in 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: def_by_hour 
		 1: by_hour[6.0,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Boolean def_by_hour 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->range range[3.1,2.5,] 
		 2: 
		 3: ATTRASSIGN %self->checked_in checked_in[5.0,4.0,] 
		 4: 
		 5: ATTRASSIGN %self->by_hour by_hour[7.0,6.0,] 
		 6: RETURN by_hour[7.0,6.0,] %self[8.1,8.3,8.5,2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = as_json
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def__args 
		 6: 
		 7: %self->data def_%v_3 %self[2.0,] 	 ARGS:
		 8: %self->times def_%v_4 %self[2.0,2.7,] 	 ARGS:
		 9: HASH-data-times- def_%v_5 %v_3[2.7,] %v_4[2.8,] 
		 10: RETURN %v_5[2.9,] %self[2.0,2.7,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = data
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->range_count def_%v_4 %self[2.0,] 	 ARGS:
		 7: def_%v_3 %v_4[2.6,] 
		 8: HASH- def_%v_5 
		 9: %v_3->each_with_object def_%v_6 %v_3[2.7,] %v_5[2.8,] %self[2.0,2.6,] 	 ARGS:%v_5,%v_3,
CLOSURE BEGIN: %self[2.0,2.6,] increment[] group[] hash[] 
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_increment 
		 3: RECEIVEARG def_hash 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
		 6: 
		 7: GETFIELD %self->by_hour def_%cl_1_3 %self[2.0,] 
		 8: BRANCH %cl_1_3[2.7,] 
BB 4
	outgoing: 6 9 
	datadep: 
	instructions:
		 0: increment->hours def_%cl_1_4 increment[2.2,] 	 ARGS:
		 1: %cl_1_4->ago def_%cl_1_5 %cl_1_4[4.0,] 	 ARGS:
		 2: 
BB 5
	outgoing: 6 9 
	datadep: 
	instructions:
		 0: increment->days def_%cl_1_6 increment[2.2,] 	 ARGS:
		 1: %cl_1_6->ago def_%cl_1_7 %cl_1_6[5.0,] 	 ARGS:
		 2: COPY TYPE_PASS def_%cl_1_5 %cl_1_7[5.1,] 
BB 6
	outgoing: 7 8 9 
	datadep: 
	instructions:
		 0: %self->format def_%cl_1_8 %self[2.0,] 	 ARGS:
		 1: %cl_1_5->strftime def_%cl_1_9 %cl_1_5[5.2,4.1,] %cl_1_8[6.0,] 	 ARGS:%cl_1_8,
		 2: COPY TYPE_PASS def_group %cl_1_9[6.1,] 
		 3: 
		 4: %self->grouped def_%cl_1_10 %self[6.0,2.0,] 	 ARGS:
		 5: %cl_1_10->[] def_%cl_1_11 %cl_1_10[6.4,] group[6.2,] 	 ARGS:group,
		 6: BRANCH %cl_1_11[6.5,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Fixnum def_%cl_1_11 
BB 8
	outgoing: 9 11 
	datadep: 
	instructions:
		 0: ATTRASSIGN hash->[] group[6.2,] %cl_1_11[7.0,6.5,] 
		 1: RETURN %cl_1_11[7.0,6.5,] %self[2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: def_%cl_1_12 
		 1: def_%cl_1_13 %cl_1_12[9.0,] 
		 2: RETURN %cl_1_13[9.1,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 10: %v_6->values def_%v_7 %v_6[2.9,] 	 ARGS:
		 11: %v_7->reverse def_%v_8 %v_7[2.10,] 	 ARGS:
		 12: RETURN %v_8[2.11,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = times
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->range_count def_%v_4 %self[2.0,] 	 ARGS:
		 7: def_%v_3 %v_4[2.6,] 
		 8: %v_3->map def_%v_5 %v_3[2.7,] %self[2.0,2.6,] 	 ARGS:%v_3,
CLOSURE BEGIN: %self[2.0,2.6,] increment[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_increment 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
		 5: 
		 6: GETFIELD %self->by_hour def_%cl_1_3 %self[2.0,] 
		 7: BRANCH %cl_1_3[2.6,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: increment->hours def_%cl_1_4 increment[2.2,] 	 ARGS:
		 1: %cl_1_4->ago def_%cl_1_5 %cl_1_4[4.0,] 	 ARGS:
		 2: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: increment->days def_%cl_1_6 increment[2.2,] 	 ARGS:
		 1: %cl_1_6->ago def_%cl_1_7 %cl_1_6[5.0,] 	 ARGS:
		 2: COPY TYPE_PASS def_%cl_1_5 %cl_1_7[5.1,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: %self->format def_%cl_1_8 %self[2.0,] 	 ARGS:
		 1: %cl_1_5->strftime def_%cl_1_9 %cl_1_5[5.2,4.1,] %cl_1_8[6.0,] 	 ARGS:%cl_1_8,
		 2: RETURN %cl_1_9[6.1,] %self[6.0,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_10 
		 1: def_%cl_1_11 %cl_1_10[7.0,] 
		 2: RETURN %cl_1_11[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 9: %v_5->reverse def_%v_6 %v_5[2.8,] 	 ARGS:
		 10: RETURN %v_6[2.9,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = range_count
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->range def_%v_3 %self[2.0,] 
		 7: %v_3->to_i def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->/ def_%v_5 %v_4[2.7,] 	 ARGS:Fixnum,
		 9: %v_5->/ def_%v_6 %v_5[2.8,] 	 ARGS:Fixnum,
		 10: COPY TYPE_PASS def_count %v_6[2.9,] 
		 11: 
		 12: GETFIELD %self->by_hour def_%v_7 %self[2.0,] 
		 13: BRANCH %v_7[2.12,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_8 count[2.10,] 
		 1: RETURN %v_8[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: count->/ def_%v_9 count[2.10,] 	 ARGS:Fixnum,
		 1: RETURN %v_9[4.0,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = grouped
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->grouped def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->records def_%v_6 %self[2.0,] 	 ARGS:
		 1: HASH- def_%v_7 
		 2: %v_6->each_with_object def_%v_8 %v_6[5.0,] %v_7[5.1,] %self[5.0,2.0,] 	 ARGS:%v_7,%v_6,
CLOSURE BEGIN: record[] attended_at[] %self[5.0,2.0,] hash[] group[] 
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_record 
		 3: RECEIVEARG def_hash 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%cl_1_3 
		 2: record->[] def_%cl_1_4 record[2.2,] %cl_1_3[3.1,] 	 ARGS:%cl_1_3,
		 3: COPY TYPE_PASS def_attended_at %cl_1_4[3.2,] 
		 4: 
		 5: (String) def_%cl_1_5 
		 6: %cl_1_4->is_a? def_%cl_1_6 %cl_1_4[3.2,] %cl_1_5[3.5,] 	 ARGS:%cl_1_5,
		 7: BRANCH %cl_1_6[3.6,] 
BB 4
	outgoing: 6 9 
	datadep: 
	instructions:
		 0: (Time) def_%cl_1_7 
		 1: %cl_1_7->parse def_%cl_1_8 %cl_1_7[4.0,] attended_at[3.3,] 	 ARGS:attended_at,
		 2: COPY TYPE_PASS def_attended_at %cl_1_8[4.1,] 
		 3: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_8 
BB 6
	outgoing: 7 8 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->format def_%cl_1_9 %self[2.0,] 	 ARGS:
		 2: attended_at->strftime def_%cl_1_10 attended_at[4.2,3.3,] %cl_1_9[6.1,] 	 ARGS:%cl_1_9,
		 3: COPY TYPE_PASS def_group %cl_1_10[6.2,] 
		 4: 
		 5: hash->[] def_%cl_1_11 hash[2.3,] %cl_1_10[6.2,] 	 ARGS:group,
		 6: BRANCH %cl_1_11[6.5,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: hash->[]= def_%cl_1_11 hash[2.3,] group[6.3,] 	 ARGS:group,Fixnum,
		 1: COPY TYPE_Fixnum def_%cl_1_11 
BB 8
	outgoing: 9 11 
	datadep: 
	instructions:
		 0: 
		 1: hash->[] def_%cl_1_12 hash[7.0,2.3,] group[6.3,] 	 ARGS:group,
		 2: %cl_1_12->+ def_%cl_1_12 %cl_1_12[8.1,] 	 ARGS:Fixnum,
		 3: hash->[]= def_%cl_1_13 hash[8.1,7.0,2.3,] group[6.3,] %cl_1_12[8.1,8.2,] 	 ARGS:group,%cl_1_12,
		 4: RETURN %cl_1_12[8.1,8.2,] %self[2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: def_%cl_1_14 
		 1: def_%cl_1_15 %cl_1_14[9.0,] 
		 2: RETURN %cl_1_15[9.1,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 3: ATTRASSIGN %self->grouped %v_8[5.2,] 
		 4: RETURN %v_8[5.2,] %self[5.0,5.3,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = format
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->by_hour def_%v_3 %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_4 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_5 
		 1: RETURN %v_5[4.0,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = records
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (AttendanceRecord) def_%v_3 
		 7: %v_3->connection def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: COPY TYPE_StringLiteral def_%v_5 
		 9: 
		 10: (Site) def_%v_6 
		 11: %v_6->current def_%v_7 %v_6[2.10,] 	 ARGS:
		 12: %v_7->id def_%v_8 %v_7[2.11,] 	 ARGS:
		 13: COPY TYPE_StringLiteral def_%v_9 
		 14: 
		 15: GETFIELD %self->range def_%v_10 %self[2.0,] 
		 16: %v_10->ago def_%v_11 %v_10[2.15,] 	 ARGS:
		 17: COPY TYPE_StringLiteral def_%v_12 
		 18: 
		 19: GETFIELD %self->checked_in def_%v_13 %self[2.0,] 
		 20: BRANCH %v_13[2.19,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_14 
		 1: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_15 
		 1: COPY TYPE_PASS def_%v_14 %v_15[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_16 
		 1: BUILDSTRING def_%v_17 %v_5[2.8,] %v_8[2.12,] %v_9[2.13,] %v_11[2.16,] %v_12[2.17,] %v_14[4.1,3.0,] %v_16[5.0,] 
		 2: %v_4->select_all def_%v_18 %v_4[2.7,] %v_17[5.1,] 	 ARGS:%v_17,
		 3: %v_18->to_a def_%v_19 %v_18[5.2,] 	 ARGS:
		 4: RETURN %v_19[5.3,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

