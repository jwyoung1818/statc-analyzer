SET IRMethod, name = initialize
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: family[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: 
BB 4
	outgoing: 5 
	datadep: 2 2 2 3 2 3 2 
	instructions:
		 0: 
		 1: %self[2.0,] campus[2.5,] @campus[] 
		 2: 
		 3: %self[2.0,] family[3.0,2.6,] @family[] 
		 4: RETURN family[3.0,2.6,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = id
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->family %self[2.0,] 
		 7: %v_3->id %v_3[2.6,] 
		 8: RETURN %v_4[2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = times
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->checkin_times %self[2.0,] 
		 7: %v_3->decorate %v_3[2.6,] 
		 8: RETURN %v_4[2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = group_ids
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self[2.0,] 
		 7: %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 2 
	instructions:
		 0: %self[2.0,] @group_ids[] 
		 1: %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 3 2 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 2 2 2 
	instructions:
		 0: %self->checkin_times %self[2.0,] 
		 1: %v_6->flat_map %self[2.0,] %v_6[5.0,] 
CLOSURE BEGIN: @group_ids[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
BB 3
	outgoing: 4 6 
	datadep: 2 
	instructions:
		 0: 
		 1: t->all_group_times t[2.2,] 
		 2: %cl_1_3->pluck %cl_1_3[3.1,] 
		 3: RETURN %cl_1_4[3.2,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 2: %v_7->uniq %v_7[5.1,] 
		 3: %self[2.0,] %v_8[5.2,] @group_ids[3.0,] 
		 4: RETURN %v_8[5.2,] 
BB 6
	outgoing: 7 
	datadep: 3 
	instructions:
		 0: RETURN %v_5[3.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = all_attendance_records
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: person->attendance_records person[2.5,] 
		 8: %v_3->includes %v_3[2.7,] 
		 9: %self->group_ids %self[2.0,] 
		 10: %self->checkin_times %self[2.0,] 
		 11: %v_6->pluck %v_6[2.10,] 
		 12: %v_5[2.9,] %v_7[2.11,] 
		 13: %v_4->where %v_4[2.8,] %v_8[2.12,] 
		 14: RETURN %v_9[2.13,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = attendance_records
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: times[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: 
BB 4
	outgoing: 5 6 
	datadep: 3 2 3 2 3 2 
	instructions:
		 0: 
		 1: times[3.0,2.6,] 
		 2: times[3.0,2.6,] 
		 3: BRANCH times[3.0,2.6,] 
BB 5
	outgoing: 6 
	datadep: 2 
	instructions:
		 0: %self->checkin_times %self[2.0,] 
		 1: %v_5->map %v_5[5.0,] 
		 2: %v_6[5.1,] 
		 3: %v_6[5.1,] 
BB 6
	outgoing: 7 
	datadep: 2 2 5 3 2 2 
	instructions:
		 0: 
		 1: %self->all_attendance_records person[2.5,] %self[2.0,] 
		 2: times->map times[5.2,3.0,2.6,] %self[2.0,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
BB 3
	outgoing: 4 6 
	datadep: 2 
	instructions:
		 0: 
		 1: 
		 2: t->strftime %cl_1_3[3.1,] t[2.2,] 
		 3: RETURN %cl_1_4[3.2,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 3: %v_8[6.2,] 
		 4: %v_7->where %v_9[6.3,] %v_7[6.1,] 
		 5: RETURN %v_10[6.4,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = can_choose_same?
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: %self->checkin_times %self[2.0,] 
		 8: %v_3->all? %v_3[2.7,] 
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 5 
	datadep: 2 2 
	instructions:
		 0: %self->last_week_records person[2.5,] %self[2.0,] 
		 1: %v_5->any? %v_5[3.0,] 
		 2: RETURN %v_6[3.1,] 
BB 4
	outgoing: 5 
	datadep: 2 
	instructions:
		 0: RETURN %v_4[2.8,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = last_week_records
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: %self->checkin_times %self[2.0,] 
		 8: 
		 9: %v_3->where %v_4[2.8,] %v_3[2.7,] 
		 10: %v_5->map %self[2.0,] %v_5[2.9,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
BB 3
	outgoing: 4 6 
	datadep: 2 
	instructions:
		 0: 
		 1: ct->to_time ct[2.2,] 
		 2: 
		 3: %cl_1_3[3.1,] %cl_1_4[3.2,] 
		 4: RETURN %cl_1_5[3.3,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 11: %v_6[2.10,] 
		 12: 
		 13: %v_6->map %v_6[2.10,] 
		 14: %self->attendance_records person[2.5,] %self[2.0,] %v_7[2.13,] 
		 15: RETURN %v_8[2.14,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = as_json
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: %self->people_as_json %self[2.0,] 
		 8: %self->checkin_times %self[2.0,] 
		 9: %v_4->decorate %v_4[2.8,] 
		 10: %v_5->as_json %v_5[2.9,] 
		 11: %self->selections %self[2.0,] 
		 12: %v_7->as_json %v_7[2.11,] 
		 13: %self->last_week_as_json %self[2.0,] 
		 14: %v_3[2.7,] %v_8[2.12,] %v_9[2.13,] %v_6[2.10,] 
		 15: RETURN %v_10[2.14,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = people_as_json
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->people %self[2.0,] 
		 7: %v_3->map %self[2.0,] %v_3[2.6,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
BB 3
	outgoing: 4 6 
	datadep: 2 2 2 2 2 2 2 
	instructions:
		 0: 
		 1: person->as_json person[2.2,] 
		 2: %self->avatar person[2.2,] %self[2.0,] 
		 3: %self->attendance_records person[2.2,] %self[2.0,] 
		 4: %self->can_choose_same? person[2.2,] %self[2.0,] 
		 5: %cl_1_4[3.2,] %cl_1_5[3.3,] %cl_1_6[3.4,] 
		 6: %cl_1_3->merge %cl_1_3[3.1,] %cl_1_7[3.5,] 
		 7: RETURN %cl_1_8[3.6,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %cl_1_9[4.0,] 
		 2: RETURN %cl_1_10[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 8: RETURN %v_4[2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = last_week_as_json
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->people %self[2.0,] 
		 7: 
		 8: %self[2.0,] %v_4[2.7,] %v_3[2.6,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
BB 3
	outgoing: 4 6 
	datadep: 2 2 2 2 2 
	instructions:
		 0: 
		 1: person->id person[2.2,] 
		 2: %self->last_week_records person[2.2,] %self[2.0,] 
		 3: 
		 4: %cl_1_4[3.2,] %cl_1_5[3.3,] %self[2.0,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
BB 3
	outgoing: 4 6 
	datadep: 2 2 2 2 
	instructions:
		 0: 
		 1: record->checkin_time_id record[2.2,] 
		 2: %self->group_time_for_attendance_record %self[2.0,] record[2.2,] 
		 3: %cl_2_3[3.1,] %cl_2_4[3.2,] time_hash[2.3,] 
		 4: RETURN %cl_2_4[3.2,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 5: %cl_1_3[3.1,] %cl_1_6[3.4,] person_hash[2.3,] 
		 6: RETURN %cl_1_6[3.4,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 9: RETURN %v_5[2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = selections
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->people %self[2.0,] 
		 7: 
		 8: %self[2.0,] %v_4[2.7,] %v_3[2.6,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
BB 3
	outgoing: 4 6 
	datadep: 2 2 2 2 2 2 
	instructions:
		 0: 
		 1: %self->attendance_records person[2.2,] %self[2.0,] 
		 2: %cl_1_3->to_a %cl_1_3[3.1,] 
		 3: %cl_1_4[3.2,] 
		 4: 
		 5: person->id person[2.2,] 
		 6: 
		 7: %cl_1_5[3.5,] %cl_1_6[3.6,] people_hash[2.3,] 
		 8: %cl_1_6[3.6,] 
		 9: 
		 10: %self->checkin_times %self[2.0,] 
		 11: %cl_1_7->each %self[2.0,] %cl_1_7[3.10,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
BB 3
	outgoing: 4 5 7 
	datadep: 2 
	instructions:
		 0: 
		 1: records->detect %self[2.0,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
BB 3
	outgoing: 4 6 
	datadep: 2 
	instructions:
		 0: 
		 1: a->checkin_time_id a[2.2,] 
		 2: time->id 
		 3: %cl_3_3[3.1,] %cl_3_4[3.2,] 
		 4: RETURN %cl_3_5[3.3,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %cl_3_6[4.0,] 
		 2: RETURN %cl_3_7[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 2: %cl_2_3[3.1,] 
		 3: 
		 4: BRANCH %cl_2_3[3.1,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: RETURN 
BB 6
	outgoing: 7 9 
	datadep: 2 2 3 
	instructions:
		 0: 
		 1: time->id time[2.2,] 
		 2: %self->group_time_for_attendance_record %self[2.0,] record[3.2,] 
		 3: %cl_2_5[6.1,] %cl_2_6[6.2,] 
		 4: RETURN %cl_2_6[6.2,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %cl_2_7[7.0,] 
		 2: RETURN %cl_2_8[7.1,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 12: RETURN %cl_1_8[3.11,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %cl_1_9[4.0,] 
		 2: RETURN %cl_1_10[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 9: RETURN %v_5[2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = group_time_for_attendance_record
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: (GroupTime) 
		 8: 
		 9: %v_3->joins %v_4[2.8,] %v_3[2.7,] 
		 10: record->group_id record[2.5,] 
		 11: %v_6[2.10,] 
		 12: %v_5->where %v_5[2.9,] %v_7[2.11,] 
		 13: 
		 14: record->checkin_time_id record[2.5,] 
		 15: %v_8->where %v_8[2.12,] %v_9[2.13,] %v_10[2.14,] 
		 16: %v_11->first %v_11[2.15,] 
		 17: %v_12[2.16,] 
		 18: 
		 19: BRANCH %v_12[2.16,] 
BB 3
	outgoing: 6 
	datadep: 2 2 
	instructions:
		 0: 
		 1: 
		 2: group_time->as_json group_time[2.17,] 
		 3: group_time->group group_time[2.17,] 
		 4: %v_15->name %v_15[3.3,] 
		 5: %v_16[3.4,] 
		 6: %v_17[3.5,] 
		 7: %v_14->merge %v_14[3.2,] %v_18[3.6,] 
		 8: RETURN %v_19[3.7,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = people
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->family %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 2 
	instructions:
		 0: 
		 1: 
		 2: %self->family %self[2.0,] 
		 3: %v_6->people %v_6[3.2,] 
		 4: %v_7->undeleted %v_7[3.3,] 
		 5: %v_8->minimal %v_8[3.4,] 
		 6: RETURN %v_9[3.5,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %v_5[4.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = avatar
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: person->photo person[2.5,] 
		 8: %v_3->exists? %v_3[2.7,] 
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 6 
	datadep: 2 
	instructions:
		 0: person->photo person[2.5,] 
		 1: %v_5->url %v_5[3.0,] 
		 2: RETURN %v_6[3.1,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = checkin_times
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self[2.0,] 
		 7: %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 2 
	instructions:
		 0: %self[2.0,] @checkin_times[] 
		 1: %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 3 2 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 2 2 
	instructions:
		 0: (CheckinTime) 
		 1: %self[2.0,] @campus[] 
		 2: %v_7[5.1,] 
		 3: %v_6->where %v_8[5.2,] %v_6[5.0,] 
		 4: 
		 5: (Time) 
		 6: %v_11->current %v_11[5.5,] 
		 7: %v_12->wday %v_12[5.6,] 
		 8: 
		 9: %v_14->ago %v_14[5.8,] 
		 10: 
		 11: %v_15->strftime %v_15[5.9,] %v_16[5.10,] 
		 12: 
		 13: %v_18->from_now %v_18[5.12,] 
		 14: 
		 15: %v_19->strftime %v_19[5.13,] %v_20[5.14,] 
		 16: %v_13[5.7,] %v_17[5.11,] %v_21[5.15,] 
		 17: %v_9->where %v_9[5.3,] %v_10[5.4,] %v_22[5.16,] 
		 18: %self[2.0,] %v_23[5.17,] @checkin_times[3.0,] 
		 19: RETURN %v_23[5.17,] 
BB 6
	outgoing: 7 
	datadep: 3 
	instructions:
		 0: RETURN %v_5[3.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

