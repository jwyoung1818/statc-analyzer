SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_number 
		 6: RECEIVEARG def_format 
		 7: Line Number 2
		 8: number->to_s def_%v_3 number[2.5,] 	 SYMBOL:	 ARGS:
		 9: %v_3->strip def_%v_4 %v_3[2.8,] 	 SYMBOL:	 ARGS:
		 10: ATTRASSIGN %self->number %v_4[2.9,] 
		 11: Line Number 3
		 12: ATTRASSIGN %self->format format[2.6,] 
		 13: RETURN format[2.6,] %self[2.0,2.10,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = formatted instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: Line Number 9
		 6: %self->number def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->blank? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "" def_%v_5 
		 1: RETURN %v_5[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
		 1: Line Number 10
		 2: %self->number def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: %v_7->chars def_%v_8 %v_7[4.2,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_PASS def_digits %v_8[4.3,] 
		 5: Line Number 11
		 6: %self->format def_%v_9 %self[4.2,2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_9->chars def_%v_10 %v_9[4.6,] 	 SYMBOL:	 ARGS:
		 8: %v_10->map def_%v_11 %v_10[4.7,] %self[4.2,4.6,2.0,] 	 SYMBOL:	 ARGS:%v_10,
CLOSURE BEGIN: place[] digits[4.4,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_place 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: Line Number 12
		 1: COPY TYPE_StringLiteral "d" def_%cl_1_3 
		 2: place->== def_%cl_1_4 place[2.2,] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: Line Number 13
		 1: digits->shift def_%cl_1_5 digits[] 	 SYMBOL:	 ARGS:
		 2: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: Line Number 15
		 1: RETURN place[2.2,] %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[7.0,] 
		 2: RETURN %cl_1_7[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: COPY TYPE_PASS def_out %v_11[4.8,] 
		 10: Line Number 18
		 11: digits->any? def_%v_12 digits[4.4,] 	 SYMBOL:	 ARGS:
		 12: BRANCH %v_12[4.11,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral " " def_%v_13 
		 1: COPY TYPE_Array def_%v_14 %v_13[6.0,] digits[4.4,] 
		 2: %v_14->flatten def_%v_15 %v_14[6.1,] 	 SYMBOL:	 ARGS:
		 3: out->+ def_%v_16 out[4.9,] %v_15[6.2,] 	 SYMBOL:	 ARGS:%v_15,
		 4: COPY TYPE_PASS def_out %v_16[6.3,] 
		 5: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_16 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: Line Number 19
		 1: out->join def_%v_17 out[6.4,4.9,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_17[8.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

