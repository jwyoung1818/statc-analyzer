SET IRMethod, name = filter_content
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->filters def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->nil? def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: RETURN %v_5[3.0,] %self[2.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->filters def_%v_6 %self[2.0,] 	 ARGS:
		 2: COPY TYPE_StringLiteral ":" def_%v_7 
		 3: %v_6->count def_%v_8 %v_6[4.1,] %v_7[4.2,] 	 ARGS:%v_7,
		 4: %v_8->>= def_%v_9 %v_8[4.3,] 	 ARGS:Fixnum,
		 5: BRANCH %v_9[4.4,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->filters def_%v_10 %self[2.0,] 	 ARGS:
		 1: COPY TYPE_StringLiteral ":" def_%v_11 
		 2: %v_10->count def_%v_12 %v_10[5.0,] %v_11[5.1,] 	 ARGS:%v_11,
		 3: %self->filters def_%v_13 %self[5.0,2.0,] 	 ARGS:
		 4: COPY TYPE_StringLiteral ";" def_%v_14 
		 5: %v_13->count def_%v_15 %v_13[5.3,] %v_14[5.4,] 	 ARGS:%v_14,
		 6: %v_15->+ def_%v_16 %v_15[5.5,] 	 ARGS:Fixnum,
		 7: %v_12->!= def_%v_17 %v_12[5.2,] %v_16[5.6,] 	 ARGS:%v_16,
		 8: COPY TYPE_PASS def_%v_9 %v_17[5.7,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: BRANCH %v_9[5.8,4.4,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%v_18 %self[2.0,] 	 ARGS:
		 2: (I18n) def_%v_19 
		 3: COPY TYPE_StringLiteral "reports.custom_reports.validation.filters" def_%v_20 
		 4: %v_19->t def_%v_21 %v_19[7.2,] %v_20[7.3,] 	 ARGS:%v_20,
		 5: %v_18->add def_%v_22 %v_18[7.1,] %v_21[7.4,] 	 ARGS:Symbol,%v_21,
		 6: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_22 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %v_22[8.0,7.5,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = data_set
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_category 
		 6: 
		 7: COPY TYPE_StringLiteral "1" def_%v_5 
		 8: def_%v_4 %v_5[2.7,] category[2.5,] 
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 4 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "2" def_%v_7 
		 1: def_%v_6 %v_7[3.0,] category[2.5,] 
		 2: BRANCH %v_6[3.1,] 
BB 4
	outgoing: 5 8 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "3" def_%v_9 
		 1: def_%v_8 %v_9[4.0,] category[2.5,] 
		 2: BRANCH %v_8[4.1,] 
BB 5
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_3 
		 1: 
BB 6
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Symbol def_data_type 
		 2: COPY TYPE_Symbol def_%v_3 
		 3: 
BB 7
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Symbol def_data_type 
		 2: COPY TYPE_Symbol def_%v_3 
		 3: 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Symbol def_data_type 
		 2: COPY TYPE_Symbol def_%v_3 
		 3: 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: %self->send def_%v_10 %self[2.0,] data_type[6.1,7.1,8.1,] data[] 	 ARGS:data_type,data,
		 2: COPY TYPE_PASS def_data %v_10[10.1,] 
		 3: 
		 4: RETURN %v_10[10.1,] %self[10.1,2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = person_data
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def__data 
		 6: 
		 7: %self->person_field_list def_%v_3 %self[2.0,] 	 ARGS:
		 8: %self->create_where_arr def_%v_4 %self[2.0,2.7,] %v_3[2.7,] 	 ARGS:%v_3,
		 9: COPY TYPE_PASS def_arr %v_4[2.8,] 
		 10: 
		 11: (Person) def_%v_5 
		 12: %v_5->where def_%v_6 %v_5[2.11,] %v_4[2.8,] 	 ARGS:arr,
		 13: %self->person_field_list def_%v_7 %self[2.0,2.7,2.8,] 	 ARGS:
		 14: %self->family_field_list def_%v_8 %self[2.0,2.7,2.8,2.13,] 	 ARGS:
		 15: HASH-only- def_%v_9 %v_8[2.14,] 
		 16: HASH-family- def_%v_10 %v_9[2.15,] 
		 17: %self->group_field_list def_%v_11 %self[2.0,2.7,2.8,2.13,2.14,] 	 ARGS:
		 18: HASH-only- def_%v_12 %v_11[2.17,] 
		 19: HASH-groups- def_%v_13 %v_12[2.18,] 
		 20: %self->first_last_list def_%v_14 %self[2.0,2.7,2.8,2.13,2.14,2.17,] 	 ARGS:
		 21: HASH-only- def_%v_15 %v_14[2.20,] 
		 22: HASH-related- def_%v_16 %v_15[2.21,] 
		 23: %self->name_list def_%v_17 %self[2.0,2.7,2.8,2.13,2.14,2.17,2.20,] 	 ARGS:
		 24: HASH-include-only- def_%v_18 %v_16[2.22,] %v_17[2.23,] 
		 25: HASH-relationships- def_%v_19 %v_18[2.24,] 
		 26: %self->first_last_list def_%v_20 %self[2.0,2.7,2.8,2.13,2.14,2.17,2.20,2.23,] 	 ARGS:
		 27: HASH-only- def_%v_21 %v_20[2.26,] 
		 28: HASH-friend- def_%v_22 %v_21[2.27,] 
		 29: %self->name_list def_%v_23 %self[2.0,2.7,2.8,2.13,2.14,2.17,2.20,2.23,2.26,] 	 ARGS:
		 30: HASH-include-only- def_%v_24 %v_22[2.28,] %v_23[2.29,] 
		 31: HASH-friendships- def_%v_25 %v_24[2.30,] 
		 32: COPY TYPE_Array def_%v_26 %v_10[2.16,] %v_13[2.19,] %v_19[2.25,] %v_25[2.31,] 
		 33: HASH-root-only-include- def_%v_27 %v_7[2.13,] %v_26[2.32,] 
		 34: %v_6->as_json def_%v_28 %v_6[2.12,] %v_27[2.33,] 	 ARGS:%v_27,
		 35: COPY TYPE_PASS def_data_set %v_28[2.34,] 
		 36: 
		 37: RETURN %v_28[2.34,] %self[2.0,2.7,2.8,2.13,2.14,2.17,2.20,2.23,2.26,2.29,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = family_data
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def__data 
		 6: 
		 7: %self->family_field_list def_%v_3 %self[2.0,] 	 ARGS:
		 8: %self->create_where_arr def_%v_4 %self[2.0,2.7,] %v_3[2.7,] 	 ARGS:%v_3,
		 9: COPY TYPE_PASS def_arr %v_4[2.8,] 
		 10: 
		 11: (Family) def_%v_5 
		 12: %v_5->where def_%v_6 %v_5[2.11,] %v_4[2.8,] 	 ARGS:arr,
		 13: %self->family_field_list def_%v_7 %self[2.0,2.7,2.8,] 	 ARGS:
		 14: %self->first_last_list def_%v_8 %self[2.0,2.7,2.8,2.13,] 	 ARGS:
		 15: HASH-only- def_%v_9 %v_8[2.14,] 
		 16: HASH-related- def_%v_10 %v_9[2.15,] 
		 17: %self->name_list def_%v_11 %self[2.0,2.7,2.8,2.13,2.14,] 	 ARGS:
		 18: HASH-include-only- def_%v_12 %v_10[2.16,] %v_11[2.17,] 
		 19: HASH-relationships- def_%v_13 %v_12[2.18,] 
		 20: %self->person_field_list def_%v_14 %self[2.0,2.7,2.8,2.13,2.14,2.17,] 	 ARGS:
		 21: HASH-include-only- def_%v_15 %v_13[2.19,] %v_14[2.20,] 
		 22: HASH-people- def_%v_16 %v_15[2.21,] 
		 23: HASH-root-only-include- def_%v_17 %v_7[2.13,] %v_16[2.22,] 
		 24: %v_6->as_json def_%v_18 %v_6[2.12,] %v_17[2.23,] 	 ARGS:%v_17,
		 25: COPY TYPE_PASS def_data_set %v_18[2.24,] 
		 26: 
		 27: RETURN %v_18[2.24,] %self[2.0,2.7,2.8,2.13,2.14,2.17,2.20,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = group_data
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def__data 
		 6: 
		 7: %self->group_field_list def_%v_3 %self[2.0,] 	 ARGS:
		 8: %self->create_where_arr def_%v_4 %self[2.0,2.7,] %v_3[2.7,] 	 ARGS:%v_3,
		 9: COPY TYPE_PASS def_arr %v_4[2.8,] 
		 10: 
		 11: (Group) def_%v_5 
		 12: %v_5->where def_%v_6 %v_5[2.11,] %v_4[2.8,] 	 ARGS:arr,
		 13: %self->group_field_list def_%v_7 %self[2.0,2.7,2.8,] 	 ARGS:
		 14: %self->person_field_list def_%v_8 %self[2.0,2.7,2.8,2.13,] 	 ARGS:
		 15: HASH-only- def_%v_9 %v_8[2.14,] 
		 16: HASH-people- def_%v_10 %v_9[2.15,] 
		 17: %self->prayer_request_list def_%v_11 %self[2.0,2.7,2.8,2.13,2.14,] 	 ARGS:
		 18: HASH-only- def_%v_12 %v_11[2.17,] 
		 19: HASH-prayer_requests- def_%v_13 %v_12[2.18,] 
		 20: %self->person_field_list def_%v_14 %self[2.0,2.7,2.8,2.13,2.14,2.17,] 	 ARGS:
		 21: HASH-only- def_%v_15 %v_14[2.20,] 
		 22: HASH-person- def_%v_16 %v_15[2.21,] 
		 23: %self->task_list def_%v_17 %self[2.0,2.7,2.8,2.13,2.14,2.17,2.20,] 	 ARGS:
		 24: HASH-include-only- def_%v_18 %v_16[2.22,] %v_17[2.23,] 
		 25: HASH-tasks- def_%v_19 %v_18[2.24,] 
		 26: COPY TYPE_Array def_%v_20 %v_10[2.16,] %v_13[2.19,] %v_19[2.25,] 
		 27: HASH-root-only-include- def_%v_21 %v_7[2.13,] %v_20[2.26,] 
		 28: %v_6->as_json def_%v_22 %v_6[2.12,] %v_21[2.27,] 	 ARGS:%v_21,
		 29: COPY TYPE_PASS def_data_set %v_22[2.28,] 
		 30: 
		 31: RETURN %v_22[2.28,] %self[2.0,2.7,2.8,2.13,2.14,2.17,2.20,2.23,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = create_where_arr
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_field_list 
		 6: 
		 7: %self->filters def_%v_3 %self[2.0,] 	 ARGS:
		 8: %v_3->present? def_%v_4 %v_3[2.7,] 	 ARGS:
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->build_sql_array def_%v_5 %self[2.0,] field_list[2.5,] 	 ARGS:field_list,
		 2: COPY TYPE_PASS def_filter_arr %v_5[3.1,] 
		 3: 
		 4: %self->process_where_clause def_%v_6 %self[3.1,2.0,] %v_5[3.1,] 	 ARGS:filter_arr,
		 5: COPY TYPE_PASS def_arr %v_6[3.4,] 
		 6: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "1=1" def_%v_7 
		 2: COPY TYPE_PASS def_arr %v_7[4.1,] 
		 3: COPY TYPE_PASS def_%v_6 %v_7[4.1,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: RETURN arr[4.2,3.5,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = process_where_clause
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_filter_arr 
		 6: 
		 7: HASH- def_%v_3 
		 8: COPY TYPE_PASS def_binds %v_3[2.7,] 
		 9: 
		 10: COPY TYPE_StringLiteral " " def_%v_4 
		 11: COPY TYPE_PASS def_where %v_4[2.10,] 
		 12: 
		 13: filter_arr->each_with_index def_%v_5 filter_arr[2.5,] %self[2.0,] 	 ARGS:filter_arr,
CLOSURE BEGIN: param[] where[2.11,] filter_arr[2.5,] index[2.13,] binds[2.8,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_param 
		 3: RECEIVEARG def_index 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: param->[] def_%cl_1_3 param[2.2,] 	 ARGS:Fixnum,
		 2: COPY TYPE_StringLiteral " " def_%cl_1_4 
		 3: %cl_1_3->+ def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 ARGS:%cl_1_4,
		 4: param->[] def_%cl_1_6 param[3.1,2.2,] 	 ARGS:Fixnum,
		 5: %cl_1_5->+ def_%cl_1_7 %cl_1_5[3.3,] %cl_1_6[3.4,] 	 ARGS:%cl_1_6,
		 6: COPY TYPE_StringLiteral " :" def_%cl_1_8 
		 7: %cl_1_7->+ def_%cl_1_9 %cl_1_7[3.5,] %cl_1_8[3.6,] 	 ARGS:%cl_1_8,
		 8: param->[] def_%cl_1_10 param[3.1,3.4,2.2,] 	 ARGS:Fixnum,
		 9: %cl_1_9->+ def_%cl_1_11 %cl_1_9[3.7,] %cl_1_10[3.8,] 	 ARGS:%cl_1_10,
		 10: where-><< def_%cl_1_12 where[] %cl_1_11[3.9,] 	 ARGS:%cl_1_11,
		 11: 
		 12: filter_arr->size def_%cl_1_13 filter_arr[] 	 ARGS:
		 13: %cl_1_13->- def_%cl_1_14 %cl_1_13[3.12,] 	 ARGS:Fixnum,
		 14: index->== def_%cl_1_15 index[2.3,] %cl_1_14[3.13,] 	 ARGS:%cl_1_14,
		 15: BRANCH %cl_1_15[3.14,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_16 
		 1: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral " and " def_%cl_1_17 
		 1: where-><< def_%cl_1_18 where[] %cl_1_17[5.0,] 	 ARGS:%cl_1_17,
		 2: COPY TYPE_PASS def_%cl_1_16 %cl_1_18[5.1,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: param->[] def_%cl_1_19 param[2.2,] 	 ARGS:Fixnum,
		 2: %cl_1_19->to_sym def_%cl_1_20 %cl_1_19[6.1,] 	 ARGS:
		 3: param->[] def_%cl_1_21 param[6.1,2.2,] 	 ARGS:Fixnum,
		 4: %cl_1_21->to_s def_%cl_1_22 %cl_1_21[6.3,] 	 ARGS:
		 5: ATTRASSIGN binds->[] %cl_1_20[6.2,] %cl_1_22[6.4,] 
		 6: RETURN %cl_1_22[6.4,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_23 
		 1: def_%cl_1_24 %cl_1_23[7.0,] 
		 2: RETURN %cl_1_24[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: param[2.2,] 
		 14: 
		 15: COPY TYPE_Array def_%v_6 where[2.11,] binds[2.8,] 
		 16: COPY TYPE_PASS def_arr %v_6[2.15,] 
		 17: 
		 18: RETURN %v_6[2.15,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = build_sql_array
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_field_list 
		 6: 
		 7: COPY TYPE_Array def_%v_3 
		 8: COPY TYPE_PASS def_sql_array %v_3[2.7,] 
		 9: 
		 10: %self->filters def_%v_4 %self[2.0,] 	 ARGS:
		 11: COPY TYPE_StringLiteral ";" def_%v_5 
		 12: %v_4->split def_%v_6 %v_4[2.10,] %v_5[2.11,] 	 ARGS:%v_5,
		 13: %v_6->compact def_%v_7 %v_6[2.12,] 	 ARGS:
		 14: COPY TYPE_PASS def_filtery %v_7[2.13,] 
		 15: 
		 16: %v_7->each def_%v_8 %v_7[2.13,] %self[2.0,2.10,] 	 ARGS:%v_7,
CLOSURE BEGIN: f[] fld[] field_list[2.5,] bind[] operator[2.16,] sql_array[2.8,] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_f 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 8 10 
	datadep: 
	instructions:
		 0: 
		 1: f->strip def_%cl_1_3 f[2.2,] 	 ARGS:
		 2: COPY TYPE_StringLiteral ":" def_%cl_1_4 
		 3: %cl_1_3->split def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 ARGS:%cl_1_4,
		 4: def_%cl_1_6 %cl_1_5[3.3,] 
		 5: def_%cl_1_7 %cl_1_6[3.4,] 
		 6: def_%cl_1_8 %cl_1_6[3.4,] 
		 7: COPY TYPE_PASS def_fld %cl_1_7[3.5,] 
		 8: COPY TYPE_PASS def_bind %cl_1_8[3.6,] 
		 9: 
		 10: COPY TYPE_StringLiteral "*" def_%cl_1_9 
		 11: COPY TYPE_StringLiteral "%" def_%cl_1_10 
		 12: %cl_1_8->gsub! def_%cl_1_11 %cl_1_8[3.6,] %cl_1_9[3.10,] %cl_1_10[3.11,] 	 ARGS:%cl_1_9,%cl_1_10,
		 13: 
		 14: fld->to_sym def_%cl_1_12 fld[3.7,] 	 ARGS:
		 15: field_list->include? def_%cl_1_13 field_list[] %cl_1_12[3.14,] 	 ARGS:%cl_1_12,
		 16: BRANCH %cl_1_13[3.15,] 
BB 4
	outgoing: 5 6 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "%" def_%cl_1_14 
		 2: bind->include? def_%cl_1_15 bind[3.8,] %cl_1_14[4.1,] 	 ARGS:%cl_1_14,
		 3: BRANCH %cl_1_15[4.2,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "like" def_%cl_1_16 
		 1: COPY TYPE_PASS def_operator %cl_1_16[5.0,] 
		 2: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "=" def_%cl_1_17 
		 1: COPY TYPE_PASS def_operator %cl_1_17[6.0,] 
		 2: COPY TYPE_PASS def_%cl_1_16 %cl_1_17[6.0,] 
BB 7
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%cl_1_18 fld[3.7,] operator[6.1,5.1,] bind[3.8,] 
		 2: sql_array-><< def_%cl_1_19 sql_array[] %cl_1_18[7.1,] 	 ARGS:%cl_1_18,
		 3: 
BB 8
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %cl_1_19[7.2,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_1_20 
		 1: def_%cl_1_21 %cl_1_20[10.0,] 
		 2: RETURN %cl_1_21[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: bind[3.8,] f[2.2,] fld[3.7,] 
		 17: 
		 18: RETURN sql_array[2.8,] %self[2.0,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = person_field_list
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = family_field_list
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = group_field_list
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = first_last_list
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = name_list
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = prayer_request_list
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = task_list
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

