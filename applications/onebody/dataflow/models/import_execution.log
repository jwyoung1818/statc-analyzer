SET IRMethod, name = initialize
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: %self[2.0,] import[2.5,] @import[] 
		 8: 
		 9: 
		 10: %self[2.0,] %v_3[2.9,] @created_family_ids[] 
		 11: 
		 12: 
		 13: %self[2.0,] %v_4[2.12,] @created_family_names[] 
		 14: RETURN %v_4[2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = execute
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->ready? %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 7 
	datadep: 2 2 2 2 2 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: %self[2.0,] @import[] 
		 5: %v_5->rows %v_5[3.4,] 
		 6: (ImportRow) 
		 7: %v_7->statuses %v_7[3.6,] 
		 8: %self->row_status_before %self[2.0,] 
		 9: %v_8[3.7,] %v_9[3.8,] 
		 10: %v_10[3.9,] 
		 11: %v_6->where %v_6[3.5,] %v_11[3.10,] 
		 12: %v_12->find_each %self[2.0,] %v_12[3.11,] 
CLOSURE BEGIN: @import[3.4,] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
BB 3
	outgoing: 4 5 10 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: %cl_1_3[3.1,] 
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 6 10 
	datadep: 2 
	instructions:
		 0: %self[2.0,] @import[] 
		 1: %cl_1_5->reload %cl_1_5[4.0,] 
		 2: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 7 8 10 
	datadep: 2 2 
	instructions:
		 0: 
		 1: 
		 2: %cl_1_7[6.1,] 
		 3: 
		 4: row->reset_statuses row[2.2,] 
		 5: 
		 6: row->match_person row[2.2,] 
		 7: %cl_1_9[6.6,] 
		 8: BRANCH %cl_1_9[6.6,] 
BB 7
	outgoing: 9 10 
	datadep: 2 6 2 
	instructions:
		 0: 
		 1: %self->update_existing_person %self[2.0,] person[6.7,] row[2.2,] 
		 2: 
BB 8
	outgoing: 9 10 
	datadep: 2 2 
	instructions:
		 0: 
		 1: %self->create_new_person %self[2.0,] row[2.2,] 
		 2: %cl_1_11[8.1,] 
BB 9
	outgoing: 10 12 
	datadep: 2 2 
	instructions:
		 0: 
		 1: %self->save_row %self[2.0,] row[2.2,] 
		 2: RETURN %cl_1_12[9.1,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: %cl_1_13[10.0,] 
		 2: RETURN %cl_1_14[10.1,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 13: 
		 14: @import[3.4,] 
		 15: %self->status_after %self[2.0,] 
		 16: %self->set_completed_at? %self[2.0,] 
		 17: BRANCH %v_16[3.16,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: (Time) 
		 1: %v_17->now %v_17[6.0,] 
		 2: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
BB 8
	outgoing: 9 
	datadep: 3 7 6 3 
	instructions:
		 0: %v_15[3.15,] %v_18[7.0,6.1,] 
		 1: %v_14->update_attributes %v_14[3.14,] %v_19[8.0,] 
		 2: RETURN %v_20[8.1,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_completed_at?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: RETURN 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = status_before
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: RETURN %v_3[2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = row_status_before
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: RETURN %v_3[2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = status_after
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: RETURN %v_3[2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ready?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self[2.0,] @import[] 
		 7: %v_3->status %v_3[2.6,] 
		 8: %self->status_before %self[2.0,] 
		 9: %v_4[2.7,] %v_5[2.8,] 
		 10: RETURN %v_6[2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = save_row
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: row->person row[2.5,] 
		 8: %v_3->save %v_3[2.7,] 
		 9: 
		 10: row->family row[2.5,] 
		 11: %v_5->save %v_5[2.10,] 
		 12: 
		 13: %self->record_changes %self[2.0,] row[2.5,] 
		 14: 
		 15: row[2.5,] 
		 16: 
		 17: row->save! row[2.5,2.15,] 
		 18: RETURN %v_8[2.17,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_existing_person
BB 1
	outgoing: 18 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: 
		 8: %self->set_person_attributes %self[2.0,] person[2.6,] row[2.5,] 
		 9: 
		 10: person[2.6,] 
		 11: 
		 12: %self->match_family %self[2.0,] row[2.5,] 
		 13: %v_4[2.12,] 
		 14: BRANCH %v_4[2.12,] 
BB 3
	outgoing: 12 
	datadep: 2 2 2 2 2 2 
	instructions:
		 0: 
		 1: family[2.13,] person[2.6,2.10,] 
		 2: 
		 3: %self->update_existing_family %self[2.0,] family[2.13,] row[2.5,] 
		 4: 
BB 4
	outgoing: 5 6 
	datadep: 2 2 
	instructions:
		 0: 
		 1: person->family person[2.6,2.10,] 
		 2: BRANCH %v_6[4.1,] 
BB 5
	outgoing: 6 
	datadep: 2 2 
	instructions:
		 0: %self->id_for_family %self[2.0,] row[2.5,] 
		 1: %v_7->blank? %v_7[5.0,] 
		 2: %v_8[5.1,] 
BB 6
	outgoing: 7 8 
	datadep: 5 4 
	instructions:
		 0: BRANCH %v_6[5.2,4.1,] 
BB 7
	outgoing: 8 
	datadep: 2 2 
	instructions:
		 0: %self->legacy_id_for_family %self[2.0,] row[2.5,] 
		 1: %v_9->blank? %v_9[7.0,] 
		 2: %v_10[7.1,] 
BB 8
	outgoing: 9 10 
	datadep: 7 5 4 
	instructions:
		 0: BRANCH %v_6[7.2,5.2,4.1,] 
BB 9
	outgoing: 11 
	datadep: 2 2 2 2 
	instructions:
		 0: 
		 1: person->family person[2.6,2.10,] 
		 2: %self->update_existing_family %self[2.0,] row[2.5,] %v_11[9.1,] 
		 3: 
BB 10
	outgoing: 11 
	datadep: 2 2 2 2 
	instructions:
		 0: 
		 1: %self->create_new_family %self[2.0,] person[2.6,2.10,] row[2.5,] 
		 2: %v_13[10.1,] 
BB 11
	outgoing: 12 
	datadep: 10 9 
	instructions:
		 0: %v_12[10.2,9.2,] 
BB 12
	outgoing: 13 14 
	datadep: 3 2 2 
	instructions:
		 0: 
		 1: person->valid? person[3.1,2.6,2.10,] 
		 2: BRANCH %v_14[12.1,] 
BB 13
	outgoing: 14 
	datadep: 3 2 2 
	instructions:
		 0: person->changed? person[3.1,2.6,2.10,] 
		 1: %v_15[13.0,] 
BB 14
	outgoing: 15 16 
	datadep: 13 12 2 3 2 2 
	instructions:
		 0: %v_14[13.1,12.1,] row[2.5,] 
		 1: 
		 2: person->invalid? person[3.1,2.6,2.10,] 
		 3: BRANCH %v_16[14.2,] 
BB 15
	outgoing: 17 
	datadep: 14 
	instructions:
		 0: row[14.0,] 
		 1: row[15.0,] 
		 2: 
		 3: 
BB 16
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
BB 17
	outgoing: 18 
	datadep: 2 3 2 2 15 15 14 3 2 2 15 15 14 3 2 2 
	instructions:
		 0: 
		 1: %self->record_errors %self[2.0,] person[3.1,2.6,2.10,] row[15.0,15.1,14.0,] 
		 2: 
		 3: person[3.1,2.6,2.10,] row[15.0,15.1,14.0,] 
		 4: RETURN person[3.1,2.6,2.10,] 
BB 18
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_person_attributes
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: 
		 8: %self->attributes_for_person %self[2.0,] row[2.5,] 
		 9: %v_3[2.8,] 
		 10: 
		 11: person[2.6,] 
		 12: 
		 13: %self[2.0,] @import[] 
		 14: %v_4->overwrite_changed_emails? %v_4[2.13,] 
		 15: BRANCH %v_5[2.14,] 
BB 3
	outgoing: 12 
	datadep: 2 2 2 2 2 
	instructions:
		 0: 
		 1: person[2.6,2.11,] 
		 2: 
		 3: person[3.1,] attributes[2.9,] 
		 4: attributes[2.9,] 
		 5: RETURN attributes[2.9,] 
BB 4
	outgoing: 5 6 
	datadep: 2 2 2 
	instructions:
		 0: 
		 1: 
		 2: attributes[2.9,] %v_7[4.1,] 
		 3: person->email person[2.6,2.11,] 
		 4: %v_8[4.2,] %v_9[4.3,] 
		 5: BRANCH %v_10[4.4,] 
BB 5
	outgoing: 7 
	datadep: 2 2 
	instructions:
		 0: person[2.6,2.11,] 
		 1: 
		 2: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
BB 7
	outgoing: 8 9 
	datadep: 5 2 2 2 
	instructions:
		 0: 
		 1: person[5.0,2.6,2.11,] attributes[2.9,] 
		 2: 
		 3: person->email_changed? person[7.1,] 
		 4: BRANCH %v_12[7.3,] 
BB 8
	outgoing: 10 
	datadep: 7 
	instructions:
		 0: 
		 1: person->restore_attributes %v_13[8.0,] person[7.1,] 
		 2: 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
BB 10
	outgoing: 12 
	datadep: 9 8 
	instructions:
		 0: RETURN %v_14[9.0,8.1,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = create_new_person
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: (Person) 
		 8: %self->attributes_for_person %self[2.0,] row[2.5,] 
		 9: %v_3->new %v_4[2.8,] %v_3[2.7,] 
		 10: %v_5[2.9,] 
		 11: 
		 12: %v_5[2.9,] 
		 13: 
		 14: %self->match_family %self[2.0,] row[2.5,] 
		 15: person[2.10,] %v_6[2.14,] 
		 16: BRANCH %v_6[2.14,] 
BB 3
	outgoing: 5 
	datadep: 2 2 2 2 
	instructions:
		 0: 
		 1: person->family person[2.10,2.15,] 
		 2: %self->update_existing_family %self[2.0,] row[2.5,] %v_7[3.1,] 
		 3: 
BB 4
	outgoing: 5 
	datadep: 2 2 2 2 
	instructions:
		 0: 
		 1: %self->create_new_family %self[2.0,] person[2.10,2.15,] row[2.5,] 
		 2: %v_9[4.1,] 
BB 5
	outgoing: 6 7 
	datadep: 2 2 2 
	instructions:
		 0: 
		 1: person->valid? person[2.10,2.15,] 
		 2: row[2.5,] %v_10[5.1,] 
		 3: 
		 4: row->created_person row[5.2,] 
		 5: BRANCH %v_11[5.4,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: 
BB 7
	outgoing: 8 
	datadep: 5 
	instructions:
		 0: row[5.2,] 
		 1: row[7.0,] 
		 2: 
BB 8
	outgoing: 9 
	datadep: 2 2 2 7 7 5 2 2 7 7 5 2 2 
	instructions:
		 0: 
		 1: %self->record_errors %self[2.0,] person[2.10,2.15,] row[7.0,7.1,5.2,] 
		 2: 
		 3: person[2.10,2.15,] row[7.0,7.1,5.2,] 
		 4: RETURN person[2.10,2.15,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_existing_family
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: 
		 8: family->attributes family[2.6,] 
		 9: %v_3->dup %v_3[2.8,] 
		 10: %v_4[2.9,] 
		 11: 
		 12: %self->attributes_for_family %self[2.0,] row[2.5,] 
		 13: family[2.6,] %v_5[2.12,] 
		 14: 
		 15: %self->update_family_last_name %self[2.0,] family[2.6,2.13,] row[2.5,] 
		 16: 
		 17: family->attributes family[2.6,2.13,] 
		 18: %v_7[2.17,] attrs_before[2.10,] 
		 19: BRANCH %v_8[2.18,] 
BB 3
	outgoing: 4 
	datadep: 2 2 
	instructions:
		 0: family->valid? family[2.6,2.13,] 
		 1: %v_9[3.0,] 
BB 4
	outgoing: 5 
	datadep: 3 2 2 2 2 2 2 
	instructions:
		 0: %v_8[3.1,2.18,] row[2.5,] 
		 1: 
		 2: family[2.6,2.13,] row[4.0,] 
		 3: RETURN family[2.6,2.13,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = create_new_family
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 7 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: 
		 8: %self->attributes_for_family %self[2.0,] row[2.5,] 
		 9: %v_3[2.8,] 
		 10: 
		 11: (Family) 
		 12: %v_4->new %v_4[2.11,] %v_3[2.8,] 
		 13: %v_5[2.12,] person[2.6,] 
		 14: 
		 15: person->family person[2.6,2.13,] 
		 16: %self->update_family_last_name %self[2.0,] row[2.5,] %v_6[2.15,] 
		 17: 
		 18: person->family person[2.6,2.13,] 
		 19: %v_8->valid? %v_8[2.18,] 
		 20: %v_9[2.19,] row[2.5,] 
		 21: BRANCH %v_9[2.19,] 
BB 3
	outgoing: 4 5 
	datadep: 2 2 2 
	instructions:
		 0: 
		 1: %self->id_for_family %self[2.0,] row[2.5,2.20,] 
		 2: %v_10[3.1,] 
		 3: BRANCH %v_10[3.1,] 
BB 4
	outgoing: 6 
	datadep: 2 2 2 3 
	instructions:
		 0: 
		 1: %self[2.0,] @created_family_ids[] 
		 2: person->family person[2.6,2.13,] 
		 3: id[3.2,] %v_11[4.1,] %v_12[4.2,] 
		 4: 
BB 5
	outgoing: 6 
	datadep: 2 2 2 2 
	instructions:
		 0: 
		 1: %self[2.0,] @created_family_names[] 
		 2: 
		 3: %v_14[5.2,] attrs[2.9,] 
		 4: person->family person[2.6,2.13,] 
		 5: %v_13[5.1,] %v_15[5.3,] %v_16[5.4,] 
		 6: %v_16[5.4,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
BB 8
	outgoing: 9 
	datadep: 2 2 2 2 
	instructions:
		 0: 
		 1: person->family person[2.6,2.13,] 
		 2: %v_17[8.1,] row[2.5,2.20,] 
		 3: RETURN %v_17[8.1,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = record_changes
BB 1
	outgoing: 13 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: changes_method[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: 
BB 4
	outgoing: 5 6 
	datadep: 2 
	instructions:
		 0: 
		 1: row->attribute_changes row[2.5,] 
		 2: BRANCH %v_3[4.1,] 
BB 5
	outgoing: 6 
	datadep: 2 
	instructions:
		 0: 
		 1: %v_5[5.0,] row[2.5,] 
		 2: %v_5[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 2 
	instructions:
		 0: 
		 1: row->person row[2.5,] 
		 2: %v_6->new_record? %v_6[6.1,] 
		 3: BRANCH %v_7[6.2,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: 
BB 8
	outgoing: 9 
	datadep: 2 2 3 2 2 
	instructions:
		 0: 
		 1: row->attribute_changes row[2.5,] 
		 2: row->person row[2.5,] 
		 3: %v_10->send changes_method[3.0,2.6,] %v_10[8.2,] 
		 4: %v_11->reject %self[2.0,] %v_11[8.3,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
BB 3
	outgoing: 4 6 
	datadep: 2 
	instructions:
		 0: 
		 1: 
		 2: k[2.2,] %cl_1_3[3.1,] 
		 3: RETURN %cl_1_4[3.2,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 5: %v_9[8.1,] %v_12[8.4,] 
		 6: %v_12[8.4,] 
BB 9
	outgoing: 10 11 
	datadep: 2 
	instructions:
		 0: 
		 1: row->family row[2.5,] 
		 2: %v_13->new_record? %v_13[9.1,] 
		 3: BRANCH %v_14[9.2,] 
BB 10
	outgoing: 13 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %v_15[10.0,] 
BB 11
	outgoing: 13 
	datadep: 2 2 3 2 2 
	instructions:
		 0: 
		 1: row->attribute_changes row[2.5,] 
		 2: row->family row[2.5,] 
		 3: %v_17->send %v_17[11.2,] changes_method[3.0,2.6,] 
		 4: %v_18->reject %self[2.0,] %v_18[11.3,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
BB 3
	outgoing: 4 6 
	datadep: 2 
	instructions:
		 0: 
		 1: 
		 2: k[2.2,] %cl_2_3[3.1,] 
		 3: RETURN %cl_2_4[3.2,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 5: %v_16[11.1,] %v_19[11.4,] 
		 6: RETURN %v_19[11.4,] 
BB 13
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_family_last_name
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: 
		 8: 
		 9: row->import_attributes_as_hash %v_3[2.8,] row[2.5,] 
		 10: 
		 11: %v_4[2.9,] %v_5[2.10,] 
		 12: BRANCH %v_6[2.11,] 
BB 3
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN 
BB 4
	outgoing: 6 7 
	datadep: 2 
	instructions:
		 0: 
		 1: 
		 2: family->name family[2.6,] 
		 3: %v_8->present? %v_8[4.2,] 
		 4: BRANCH %v_9[4.3,] 
BB 6
	outgoing: 9 
	datadep: 2 2 
	instructions:
		 0: family->name family[2.6,] 
		 1: %v_10->split %v_10[6.0,] 
		 2: %v_11->last %v_11[6.1,] 
		 3: family[2.6,] %v_12[6.2,] 
		 4: RETURN %v_12[6.2,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = match_family
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 6 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: row->match_family row[2.5,] 
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 4 5 
	datadep: 2 2 
	instructions:
		 0: 
		 1: %self->id_for_family %self[2.0,] row[2.5,] 
		 2: %v_4[3.1,] 
		 3: BRANCH %v_4[3.1,] 
BB 4
	outgoing: 5 
	datadep: 2 3 
	instructions:
		 0: %self[2.0,] @created_family_ids[] 
		 1: id[3.2,] %v_5[4.0,] 
		 2: %v_6[4.1,] 
BB 5
	outgoing: 6 
	datadep: 4 3 
	instructions:
		 0: %v_4[4.2,3.1,] 
BB 6
	outgoing: 7 10 
	datadep: 5 2 
	instructions:
		 0: BRANCH %v_3[5.0,2.7,] 
BB 7
	outgoing: 8 9 
	datadep: 2 2 
	instructions:
		 0: 
		 1: %self->attributes_for_family %self[2.0,] row[2.5,] 
		 2: 
		 3: %v_8[7.2,] %v_7[7.1,] 
		 4: %v_9[7.3,] 
		 5: BRANCH %v_9[7.3,] 
BB 8
	outgoing: 9 
	datadep: 2 7 
	instructions:
		 0: %self[2.0,] @created_family_names[] 
		 1: name[7.4,] %v_10[8.0,] 
		 2: %v_11[8.1,] 
BB 9
	outgoing: 11 
	datadep: 8 7 
	instructions:
		 0: RETURN %v_9[8.2,7.3,] 
BB 10
	outgoing: 11 
	datadep: 5 2 
	instructions:
		 0: RETURN %v_3[5.0,2.7,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = record_errors
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: 
		 8: person->errors person[2.6,] 
		 9: %v_3->delete %v_3[2.8,] 
		 10: %v_4[2.9,] 
		 11: 
		 12: person->errors person[2.6,] 
		 13: %v_5->to_h %v_5[2.12,] 
		 14: %v_6[2.13,] 
		 15: 
		 16: BRANCH family_errors[2.10,] 
BB 3
	outgoing: 5 
	datadep: 2 2 
	instructions:
		 0: person->family person[2.6,] 
		 1: %v_7->errors %v_7[3.0,] 
		 2: %v_8->to_h %v_8[3.1,] 
		 3: hash[2.14,] %v_9[3.2,] 
		 4: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
BB 5
	outgoing: 6 
	datadep: 3 2 2 3 2 
	instructions:
		 0: 
		 1: hash[3.3,2.14,] row[2.5,] 
		 2: 
		 3: hash->any? hash[3.3,2.14,] 
		 4: row[5.1,] %v_10[5.3,] 
		 5: RETURN %v_10[5.3,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

