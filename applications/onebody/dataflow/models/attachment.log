SET IRMethod, name = visible_to?
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_person 
		 6: 
		 7: %self->message def_%v_3 %self[2.0,] 	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->message def_%v_4 %self[2.0,] 	 ARGS:
		 1: person->can_read? def_%v_5 person[2.5,] %v_4[3.0,] 	 ARGS:%v_4,
		 2: RETURN %v_5[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.7,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = human_name
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: %v_3->split def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: %v_5->first def_%v_6 %v_5[2.8,] 	 ARGS:
		 10: %v_6->humanize def_%v_7 %v_6[2.9,] 	 ARGS:
		 11: RETURN %v_7[2.10,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = create_from_file
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_attributes 
		 6: 
		 7: attributes->[] def_%v_3 attributes[2.5,] 	 ARGS:Symbol,
		 8: COPY TYPE_PASS def_file %v_3[2.7,] 
		 9: 
		 10: (File) def_%v_4 
		 11: %v_3->original_filename def_%v_5 %v_3[2.7,] 	 ARGS:
		 12: %v_4->split def_%v_6 %v_4[2.10,] %v_5[2.11,] 	 ARGS:%v_5,
		 13: %v_6->last def_%v_7 %v_6[2.12,] 	 ARGS:
		 14: file->content_type def_%v_8 file[2.8,] 	 ARGS:
		 15: HASH-name-content_type- def_%v_9 %v_7[2.13,] %v_8[2.14,] 
		 16: attributes->merge! def_%v_10 attributes[2.5,2.7,] %v_9[2.15,] 	 ARGS:%v_9,
		 17: 
		 18: %self->create def_%v_11 %self[2.0,] attributes[2.5,2.7,2.16,] 	 ARGS:attributes,
		 19: %v_11->tap def_%v_12 %v_11[2.18,] %self[2.0,2.18,] 	 ARGS:%v_11,
CLOSURE BEGIN: attachment[] file[2.8,2.14,] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_attachment 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 8 10 
	datadep: 
	instructions:
		 0: 
		 1: attachment->valid? def_%cl_1_3 attachment[2.2,] 	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 5 6 10 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN attachment->file file[] 
		 2: 
		 3: attachment->file def_%cl_1_4 attachment[4.1,2.2,] 	 ARGS:
		 4: %cl_1_4->exists? def_%cl_1_5 %cl_1_4[4.3,] 	 ARGS:
		 5: BRANCH %cl_1_5[4.4,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_6 
		 1: 
BB 6
	outgoing: 7 10 
	datadep: 
	instructions:
		 0: attachment->errors def_%cl_1_7 attachment[4.1,2.2,] 	 ARGS:
		 1: COPY TYPE_StringLiteral def_%cl_1_8 
		 2: %cl_1_7->add def_%cl_1_9 %cl_1_7[6.0,] %cl_1_8[6.1,] 	 ARGS:Symbol,%cl_1_8,
		 3: COPY TYPE_PASS def_%cl_1_6 %cl_1_9[6.2,] 
BB 7
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %cl_1_6[6.3,5.0,] %self[2.0,] 
BB 8
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_1_10 
		 1: def_%cl_1_11 %cl_1_10[10.0,] 
		 2: RETURN %cl_1_11[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 20: RETURN %v_12[2.19,] %self[2.0,2.18,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

