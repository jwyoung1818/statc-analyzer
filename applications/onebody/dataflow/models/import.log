SET IRMethod, name = progress
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->class %self[2.0,] 
		 7: %v_3->statuses %v_3[2.6,] 
		 8: %self->status %self[2.0,] 
		 9: %v_4[2.7,] %v_5[2.8,] 
		 10: RETURN %v_6[2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = row_progress
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->row_count %self[2.0,] 
		 7: %v_3->to_i %v_3[2.6,] 
		 8: %v_4[2.7,] 
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN 
BB 4
	outgoing: 6 
	datadep: 2 2 
	instructions:
		 0: 
		 1: 
		 2: %self->completed_rows_in_stage %self[2.0,] 
		 3: %v_7->count %v_7[4.2,] 
		 4: %v_8[4.3,] 
		 5: %self->row_count %self[2.0,] 
		 6: %v_9[4.4,] %v_10[4.5,] 
		 7: %v_11->round %v_11[4.6,] 
		 8: RETURN %v_12[4.7,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = completed_rows_in_stage
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: 
		 8: 
		 9: 
		 10: 
		 11: 
		 12: 
		 13: 
		 14: 
		 15: 
		 16: 
		 17: 
		 18: %v_13[2.16,] %v_14[2.17,] %v_4[2.7,] %v_5[2.8,] %v_3[2.6,] %v_8[2.11,] %v_9[2.12,] %v_6[2.9,] %v_7[2.10,] %v_10[2.13,] %v_11[2.14,] %v_12[2.15,] 
		 19: %self->status %self[2.0,] 
		 20: %v_15[2.18,] %v_16[2.19,] 
		 21: %v_17[2.20,] 
		 22: 
		 23: %v_17->nil? %v_17[2.20,] 
		 24: BRANCH %v_18[2.23,] 
BB 3
	outgoing: 6 
	datadep: 2 
	instructions:
		 0: %self->rows %self[2.0,] 
		 1: %v_19->none %v_19[3.0,] 
		 2: RETURN %v_20[3.1,] 
BB 4
	outgoing: 6 
	datadep: 2 2 
	instructions:
		 0: 
		 1: 
		 2: %self->rows %self[2.0,] 
		 3: %v_22->send stage[2.21,] %v_22[4.2,] 
		 4: RETURN %v_23[4.3,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = waiting?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: 
		 8: 
		 9: 
		 10: 
		 11: %v_4[2.7,] %v_5[2.8,] %v_3[2.6,] %v_6[2.9,] %v_7[2.10,] 
		 12: %self->status %self[2.0,] 
		 13: %v_8->include? %v_8[2.11,] %v_9[2.12,] 
		 14: RETURN %v_10[2.13,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = working?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: 
		 8: 
		 9: 
		 10: %v_4[2.7,] %v_5[2.8,] %v_3[2.6,] %v_6[2.9,] 
		 11: %self->status %self[2.0,] 
		 12: %v_7->include? %v_8[2.11,] %v_7[2.10,] 
		 13: RETURN %v_9[2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = working_timeout_expired?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->updated_at %self[2.0,] 
		 7: (WORKING_TIMEOUT) 
		 8: %v_4->ago %v_4[2.7,] 
		 9: %v_5[2.8,] %v_3[2.6,] 
		 10: RETURN %v_6[2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = verify_working
BB 1
	outgoing: 14 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->waiting? %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 2 
	instructions:
		 0: %self->working_timeout_expired? %self[2.0,] 
		 1: %v_4->! %v_4[3.0,] 
		 2: %v_5[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 3 2 
	instructions:
		 0: BRANCH %v_3[3.2,2.6,] 
BB 5
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN 
BB 6
	outgoing: 8 9 
	datadep: 2 
	instructions:
		 0: 
		 1: 
		 2: %self->previewing? %self[2.0,] 
		 3: BRANCH %v_7[6.2,] 
BB 8
	outgoing: 10 
	datadep: 2 
	instructions:
		 0: %self->preview_async %self[2.0,] 
		 1: 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
BB 10
	outgoing: 11 12 
	datadep: 2 
	instructions:
		 0: 
		 1: %self->active? %self[2.0,] 
		 2: BRANCH %v_9[10.1,] 
BB 11
	outgoing: 14 
	datadep: 2 
	instructions:
		 0: %self->execute_async %self[2.0,] 
		 1: RETURN %v_10[11.0,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN 
BB 14
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = parse_async
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: file[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: strategy_name[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 7 8 
	datadep: 2 
	instructions:
		 0: 
		 1: %self->new_record? %self[2.0,] 
		 2: BRANCH %v_3[6.1,] 
BB 7
	outgoing: 10 
	datadep: 
	instructions:
		 0: RETURN 
BB 8
	outgoing: 10 
	datadep: 2 2 2 4 
	instructions:
		 0: 
		 1: 
		 2: file->read file[2.5,] 
		 3: %v_5[8.2,] 
		 4: 
		 5: 
		 6: %v_5->count %v_5[8.2,] %v_6[8.5,] 
		 7: %self->update_attribute %self[2.0,] %v_7[8.6,] 
		 8: 
		 9: (ImportParserJob) 
		 10: (Site) 
		 11: %v_10->current %v_10[8.10,] 
		 12: %self->id %self[2.0,] 
		 13: %v_9->perform_later data[8.3,] strategy_name[4.0,] %v_9[8.9,] %v_11[8.11,] %v_12[8.12,] 
		 14: RETURN %v_13[8.13,] 
BB 10
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = status_at_least?
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: %self->class %self[2.0,] 
		 8: %v_3->statuses %v_3[2.7,] 
		 9: desired->to_s desired[2.5,] 
		 10: %v_4[2.8,] %v_5[2.9,] 
		 11: %v_6[2.10,] 
		 12: 
		 13: BRANCH %v_6[2.10,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: 
BB 4
	outgoing: 5 
	datadep: 2 
	instructions:
		 0: 
		 1: %self->fail %self[2.0,] %v_8[4.0,] 
		 2: %v_9[4.1,] 
BB 5
	outgoing: 6 
	datadep: 2 2 
	instructions:
		 0: 
		 1: %self[2.0,] 
		 2: %v_10[5.1,] number[2.11,] 
		 3: RETURN %v_11[5.2,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = mappable_attributes
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: (Person) 
		 7: %v_3->importable_column_names %v_3[2.6,] 
		 8: RETURN %v_4[2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = preview_async
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 6 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->new_record? %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 5 
	datadep: 2 
	instructions:
		 0: %self->matched? %self[2.0,] 
		 1: BRANCH %v_4[3.0,] 
BB 4
	outgoing: 5 
	datadep: 2 
	instructions:
		 0: %self->previewing? %self[2.0,] 
		 1: %v_5[4.0,] 
BB 5
	outgoing: 6 
	datadep: 4 3 
	instructions:
		 0: %v_4->! %v_4[4.1,3.0,] 
		 1: %v_6[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 5 2 
	instructions:
		 0: BRANCH %v_3[5.1,2.6,] 
BB 7
	outgoing: 10 
	datadep: 
	instructions:
		 0: RETURN 
BB 8
	outgoing: 10 
	datadep: 2 
	instructions:
		 0: 
		 1: 
		 2: %self[2.0,] 
		 3: 
		 4: %self->save! %self[8.2,] 
		 5: 
		 6: (ImportPreviewJob) 
		 7: (Site) 
		 8: %v_10->current %v_10[8.7,] 
		 9: %self->id %self[8.2,] 
		 10: %v_9->perform_later %v_9[8.6,] %v_11[8.8,] %v_12[8.9,] 
		 11: RETURN %v_13[8.10,] 
BB 10
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reset_and_preview_async
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->rows %self[2.0,] 
		 7: (ImportRow) 
		 8: %v_4->statuses %v_4[2.7,] 
		 9: 
		 10: %v_5[2.8,] %v_6[2.9,] 
		 11: %v_7[2.10,] 
		 12: %v_3->update_all %v_3[2.6,] %v_8[2.11,] 
		 13: 
		 14: %self->preview_async %self[2.0,] 
		 15: RETURN %v_10[2.14,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = execute_async
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 8 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->new_record? %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 5 
	datadep: 2 
	instructions:
		 0: %self->matched? %self[2.0,] 
		 1: BRANCH %v_4[3.0,] 
BB 4
	outgoing: 5 
	datadep: 2 
	instructions:
		 0: %self->previewed? %self[2.0,] 
		 1: %v_5[4.0,] 
BB 5
	outgoing: 6 7 
	datadep: 4 3 
	instructions:
		 0: BRANCH %v_4[4.1,3.0,] 
BB 6
	outgoing: 7 
	datadep: 2 
	instructions:
		 0: %self->active? %self[2.0,] 
		 1: %v_6[6.0,] 
BB 7
	outgoing: 8 
	datadep: 6 4 3 
	instructions:
		 0: %v_4->! %v_4[6.1,4.1,3.0,] 
		 1: %v_7[7.0,] 
BB 8
	outgoing: 9 10 
	datadep: 7 2 
	instructions:
		 0: BRANCH %v_3[7.1,2.6,] 
BB 9
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN 
BB 10
	outgoing: 12 
	datadep: 2 
	instructions:
		 0: 
		 1: 
		 2: %self[2.0,] 
		 3: 
		 4: %self->save! %self[10.2,] 
		 5: 
		 6: (ImportExecutionJob) 
		 7: (Site) 
		 8: %v_11->current %v_11[10.7,] 
		 9: %self->id %self[10.2,] 
		 10: %v_10->perform_later %v_13[10.9,] %v_10[10.6,] %v_12[10.8,] 
		 11: RETURN %v_14[10.10,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reset_and_execute_async
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->rows %self[2.0,] 
		 7: (ImportRow) 
		 8: %v_4->statuses %v_4[2.7,] 
		 9: 
		 10: %v_5[2.8,] %v_6[2.9,] 
		 11: %v_7[2.10,] 
		 12: %v_3->update_all %v_3[2.6,] %v_8[2.11,] 
		 13: 
		 14: %self->execute_async %self[2.0,] 
		 15: RETURN %v_10[2.14,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = as_json
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: %v_0[2.1,] args[2.5,] 
		 8: %self->completed_rows_in_stage %self[2.0,] 
		 9: %v_4->size %v_4[2.8,] 
		 10: %self->progress %self[2.0,] 
		 11: %self->row_progress %self[2.0,] 
		 12: %v_5[2.9,] %v_6[2.10,] %v_7[2.11,] 
		 13: %v_3->merge %v_3[2.7,] %v_8[2.12,] 
		 14: RETURN %v_9[2.13,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

