SET IRMethod, name = encrypt_password
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 8 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->password def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->present? def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: 
		 1: (BCrypt) def_%v_5 
		 2: (inherit Engine) def_%v_6 %v_5[3.1,] 
		 3: %v_6[3.2,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_5->const_missing def_%v_6 %v_5[3.1,] 	 ARGS:Symbol,
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: %v_6->generate_salt def_%v_7 %v_6[4.0,3.2,] 	 ARGS:
		 1: ATTRASSIGN %self->password_salt %v_7[5.0,] 
		 2: 
		 3: (BCrypt) def_%v_8 
		 4: (inherit Engine) def_%v_9 %v_8[5.3,] 
		 5: %v_9[5.4,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %v_8->const_missing def_%v_9 %v_8[5.3,] 	 ARGS:Symbol,
BB 7
	outgoing: 10 
	datadep: 
	instructions:
		 0: %self->password def_%v_10 %self[5.1,2.0,] 	 ARGS:
		 1: %self->password_salt def_%v_11 %self[7.0,5.1,2.0,] 	 ARGS:
		 2: %v_9->hash_secret def_%v_12 %v_9[6.0,5.4,] %v_10[7.0,] %v_11[7.1,] 	 ARGS:%v_10,%v_11,
		 3: ATTRASSIGN %self->password_hash %v_12[7.2,] 
		 4: 
		 5: ATTRASSIGN %self->salt 
		 6: ATTRASSIGN %self->encrypted_password 
		 7: COPY TYPE_Nil def_%v_13 
		 8: RETURN %self[7.0,7.1,7.3,7.5,7.6,5.1,2.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = has_password?
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->password_hash def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->present? def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->encrypted_password def_%v_5 %self[2.0,] 	 ARGS:
		 1: %v_5->present? def_%v_6 %v_5[3.0,] 	 ARGS:
		 2: RETURN %v_6[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_4[2.7,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = authenticate
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_email 
		 6: RECEIVEARG def_password 
		 7: 
		 8: %self->undeleted def_%v_3 %self[2.0,] 	 ARGS:
		 9: email->downcase def_%v_4 email[2.5,] 	 ARGS:
		 10: HASH-email- def_%v_5 %v_4[2.9,] 
		 11: %v_3->where def_%v_6 %v_3[2.8,] %v_5[2.10,] 	 ARGS:%v_5,
		 12: COPY TYPE_PASS def_people %v_6[2.11,] 
		 13: 
		 14: %v_6->count def_%v_7 %v_6[2.11,] 	 ARGS:
		 15: %v_7->> def_%v_8 %v_7[2.14,] 	 ARGS:Fixnum,
		 16: BRANCH %v_8[2.15,] 
BB 4
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: people->each def_%v_9 people[2.12,] %self[2.0,] 	 ARGS:people,
CLOSURE BEGIN: person[4.1,] password[2.6,] %self[2.0,] 
BB 1
	outgoing: 20 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_person 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 10 18 
	datadep: 
	instructions:
		 0: 
		 1: person->password_hash def_%cl_1_3 person[2.2,] 	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 5 6 18 
	datadep: 
	instructions:
		 0: 
		 1: person->password_hash def_%cl_1_4 person[2.2,] 	 ARGS:
		 2: (BCrypt) def_%cl_1_5 
		 3: (inherit Engine) def_%cl_1_6 %cl_1_5[4.2,] 
		 4: %cl_1_6[4.3,] 
BB 5
	outgoing: 6 18 
	datadep: 
	instructions:
		 0: %cl_1_5->const_missing def_%cl_1_6 %cl_1_5[4.2,] 	 ARGS:Symbol,
BB 6
	outgoing: 7 8 18 
	datadep: 
	instructions:
		 0: person->password_salt def_%cl_1_7 person[2.2,] 	 ARGS:
		 1: %cl_1_6->hash_secret def_%cl_1_8 %cl_1_6[5.0,4.3,] password[] %cl_1_7[6.0,] 	 ARGS:password,%cl_1_7,
		 2: %cl_1_4->== def_%cl_1_9 %cl_1_4[4.1,] %cl_1_8[6.1,] 	 ARGS:%cl_1_8,
		 3: BRANCH %cl_1_9[6.2,] 
BB 7
	outgoing: 18 20 
	datadep: 
	instructions:
		 0: 
		 1: RETURN person[2.2,] %self[2.0,] 
BB 8
	outgoing: 17 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_10 
		 1: 
BB 10
	outgoing: 11 15 18 
	datadep: 
	instructions:
		 0: 
		 1: person->encrypted_password def_%cl_1_11 person[2.2,] 	 ARGS:
		 2: BRANCH %cl_1_11[10.1,] 
BB 11
	outgoing: 12 13 18 
	datadep: 
	instructions:
		 0: 
		 1: person->encrypted_password def_%cl_1_12 person[2.2,] 	 ARGS:
		 2: person->salt def_%cl_1_13 person[11.1,2.2,] 	 ARGS:
		 3: %self->legacy_password_hash def_%cl_1_14 %self[2.0,] password[] %cl_1_13[11.2,] 	 ARGS:password,%cl_1_13,
		 4: %cl_1_12->== def_%cl_1_15 %cl_1_12[11.1,] %cl_1_14[11.3,] 	 ARGS:%cl_1_14,
		 5: BRANCH %cl_1_15[11.4,] 
BB 12
	outgoing: 18 20 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN person->password_confirmation password[] 
		 2: ATTRASSIGN person->password password[] 
		 3: 
		 4: HASH-validate- def_%cl_1_16 
		 5: person->save def_%cl_1_17 person[12.1,12.2,2.2,] %cl_1_16[12.4,] 	 ARGS:%cl_1_16,
		 6: 
		 7: 
		 8: RETURN person[12.1,12.2,12.5,2.2,] %self[2.0,] 
BB 13
	outgoing: 16 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_18 
		 1: 
BB 15
	outgoing: 16 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_18 
BB 16
	outgoing: 20 
	datadep: 
	instructions:
		 0: RETURN %cl_1_18[15.0,13.0,] %self[2.0,] 
BB 17
	outgoing: 20 
	datadep: 
	instructions:
		 0: RETURN %cl_1_10[8.0,] %self[2.0,] 
BB 18
	outgoing: 20 
	datadep: 
	instructions:
		 0: def_%cl_1_19 
		 1: def_%cl_1_20 %cl_1_19[18.0,] 
		 2: RETURN %cl_1_20[18.1,] %self[2.0,] 
BB 20
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: 
		 3: COPY TYPE_Boolean def_%v_10 
		 4: RETURN %self[2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%v_11 
		 1: def_%v_12 %v_11[7.0,] 
		 2: RETURN %v_12[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = legacy_password_hash
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_password 
		 6: RECEIVEARG def_salt 
		 7: 
		 8: (Digest) def_%v_3 
		 9: (inherit MD5) def_%v_4 %v_3[2.8,] 
		 10: %v_4[2.9,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.8,] 	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_4->hexdigest def_%v_5 %v_4[3.0,2.9,] password[2.5,] 	 ARGS:password,
		 1: COPY TYPE_PASS def_pass %v_5[4.0,] 
		 2: 
		 3: def_%v_6 %self[2.0,] 	 ARGS:
CLOSURE BEGIN: pass[4.1,] salt[2.6,] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: (Digest) def_%cl_1_3 
		 2: (inherit SHA1) def_%cl_1_4 %cl_1_3[3.1,] 
		 3: %cl_1_4[3.2,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: %cl_1_3->const_missing def_%cl_1_4 %cl_1_3[3.1,] 	 ARGS:Symbol,
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: pass->+ def_%cl_1_5 pass[] salt[] 	 ARGS:salt,
		 1: %cl_1_4->hexdigest def_%cl_1_6 %cl_1_4[4.0,3.2,] %cl_1_5[5.0,] 	 ARGS:%cl_1_5,
		 2: COPY TYPE_PASS def_pass %cl_1_6[5.1,] 
		 3: RETURN %cl_1_6[5.1,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[6.0,] 
		 2: RETURN %cl_1_8[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: pass[5.2,] 
		 4: 
		 5: RETURN pass[4.1,4.3,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

