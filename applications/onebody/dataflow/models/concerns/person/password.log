SET IRMethod, name = encrypt_password
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 8 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->password %self[2.0,] 
		 7: %v_3->present? %v_3[2.6,] 
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: 
		 1: (BCrypt) 
		 2: %v_5[3.1,] 
		 3: %v_6[3.2,] 
BB 4
	outgoing: 5 
	datadep: 3 
	instructions:
		 0: %v_5[3.1,] 
BB 5
	outgoing: 6 7 
	datadep: 4 3 2 
	instructions:
		 0: %v_6->generate_salt %v_6[4.0,3.2,] 
		 1: %self[2.0,] %v_7[5.0,] 
		 2: 
		 3: (BCrypt) 
		 4: %v_8[5.3,] 
		 5: %v_9[5.4,] 
BB 6
	outgoing: 7 
	datadep: 5 
	instructions:
		 0: %v_8[5.3,] 
BB 7
	outgoing: 10 
	datadep: 5 5 6 5 5 
	instructions:
		 0: %self->password %self[5.1,] 
		 1: %self->password_salt %self[5.1,] 
		 2: %v_9->hash_secret %v_9[6.0,5.4,] %v_10[7.0,] %v_11[7.1,] 
		 3: %self[5.1,] %v_12[7.2,] 
		 4: 
		 5: %self[7.3,] 
		 6: %self[7.3,7.5,] 
		 7: 
		 8: RETURN 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: RETURN 
BB 10
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = has_password?
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->password_hash %self[2.0,] 
		 7: %v_3->present? %v_3[2.6,] 
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 5 
	datadep: 2 
	instructions:
		 0: %self->encrypted_password %self[2.0,] 
		 1: %v_5->present? %v_5[3.0,] 
		 2: RETURN %v_6[3.1,] 
BB 4
	outgoing: 5 
	datadep: 2 
	instructions:
		 0: RETURN %v_4[2.7,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = authenticate
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: 
		 8: %self->undeleted %self[2.0,] 
		 9: email->downcase email[2.5,] 
		 10: %v_4[2.9,] 
		 11: %v_3->where %v_5[2.10,] %v_3[2.8,] 
		 12: %v_6[2.11,] 
		 13: 
		 14: %v_6->count %v_6[2.11,] 
		 15: %v_7[2.14,] 
		 16: BRANCH %v_8[2.15,] 
BB 4
	outgoing: 7 9 
	datadep: 2 2 
	instructions:
		 0: 
		 1: people->each %self[2.0,] people[2.12,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 20 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
BB 3
	outgoing: 4 10 18 
	datadep: 2 
	instructions:
		 0: 
		 1: person->password_hash person[2.2,] 
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 5 6 18 
	datadep: 2 
	instructions:
		 0: 
		 1: person->password_hash person[2.2,] 
		 2: (BCrypt) 
		 3: %cl_1_5[4.2,] 
		 4: %cl_1_6[4.3,] 
BB 5
	outgoing: 6 18 
	datadep: 4 
	instructions:
		 0: %cl_1_5[4.2,] 
BB 6
	outgoing: 7 8 18 
	datadep: 2 5 4 4 
	instructions:
		 0: person->password_salt person[2.2,] 
		 1: %cl_1_6->hash_secret %cl_1_6[5.0,4.3,] %cl_1_7[6.0,] 
		 2: %cl_1_4[4.1,] %cl_1_8[6.1,] 
		 3: BRANCH %cl_1_9[6.2,] 
BB 7
	outgoing: 18 20 
	datadep: 2 
	instructions:
		 0: 
		 1: person[2.2,] 
BB 8
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
		 1: 
BB 10
	outgoing: 11 15 18 
	datadep: 2 
	instructions:
		 0: 
		 1: person->encrypted_password person[2.2,] 
		 2: BRANCH %cl_1_11[10.1,] 
BB 11
	outgoing: 12 13 18 
	datadep: 2 2 2 
	instructions:
		 0: 
		 1: person->encrypted_password person[2.2,] 
		 2: person->salt person[2.2,] 
		 3: %self->legacy_password_hash %self[2.0,] %cl_1_13[11.2,] 
		 4: %cl_1_14[11.3,] %cl_1_12[11.1,] 
		 5: BRANCH %cl_1_15[11.4,] 
BB 12
	outgoing: 18 20 
	datadep: 2 
	instructions:
		 0: 
		 1: person[2.2,] 
		 2: person[12.1,] 
		 3: 
		 4: 
		 5: person->save person[12.1,12.2,] %cl_1_16[12.4,] 
		 6: 
		 7: 
		 8: person[12.1,12.2,] 
BB 13
	outgoing: 16 
	datadep: 
	instructions:
		 0: 
		 1: 
BB 15
	outgoing: 16 
	datadep: 
	instructions:
		 0: 
BB 16
	outgoing: 20 
	datadep: 15 13 
	instructions:
		 0: RETURN %cl_1_18[15.0,13.0,] 
BB 17
	outgoing: 20 
	datadep: 8 
	instructions:
		 0: RETURN %cl_1_10[8.0,] 
BB 18
	outgoing: 20 
	datadep: 
	instructions:
		 0: 
		 1: %cl_1_19[18.0,] 
		 2: RETURN %cl_1_20[18.1,] 
BB 20
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 2: 
		 3: 
		 4: RETURN 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: RETURN 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %v_11[7.0,] 
		 2: RETURN %v_12[7.1,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = legacy_password_hash
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: 
		 8: (Digest) 
		 9: %v_3[2.8,] 
		 10: %v_4[2.9,] 
BB 3
	outgoing: 4 
	datadep: 2 
	instructions:
		 0: %v_3[2.8,] 
BB 4
	outgoing: 5 
	datadep: 3 2 2 2 
	instructions:
		 0: %v_4->hexdigest %v_4[3.0,2.9,] password[2.5,] 
		 1: %v_5[4.0,] 
		 2: 
		 3: %self[2.0,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: (Digest) 
		 2: %cl_1_3[3.1,] 
		 3: %cl_1_4[3.2,] 
BB 4
	outgoing: 5 6 
	datadep: 3 
	instructions:
		 0: %cl_1_3[3.1,] 
BB 5
	outgoing: 6 8 
	datadep: 4 3 
	instructions:
		 0: 
		 1: %cl_1_4->hexdigest %cl_1_4[4.0,3.2,] %cl_1_5[5.0,] 
		 2: %cl_1_6[5.1,] 
		 3: RETURN %cl_1_6[5.1,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: %cl_1_7[6.0,] 
		 2: RETURN %cl_1_8[6.1,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 4: 
		 5: RETURN pass[4.1,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

