SET IRMethod, name = in_groups
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_groups 
		 6: 
		 7: groups->map def_%v_3 groups[2.5,] 
		 8: %self->in_group_ids def_%v_4 %self[2.0,] %v_3[2.7,] 
		 9: RETURN %v_4[2.8,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = small_groups
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: (Setting) def_%v_3 
		 7: %v_3->get def_%v_4 %v_3[2.6,] 
		 8: COPY def_size %v_4[2.7,] 
		 9: 
		 10: COPY def_%v_5 
		 11: %v_4->== def_%v_6 %v_4[2.7,] %v_5[2.10,] 
		 12: BRANCH %v_6[2.11,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->groups def_%v_7 %self[2.0,] 
		 2: %v_7->active def_%v_8 %v_7[3.1,] 
		 3: RETURN %v_8[3.2,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->groups def_%v_9 %self[2.0,] 
		 2: %v_9->active def_%v_10 %v_9[4.1,] 
		 3: COPY def_%v_11 
		 4: size->to_i def_%v_12 size[2.8,] 
		 5: def_%v_13 %v_11[4.3,] %v_12[4.4,] 
		 6: %v_10->where def_%v_14 %v_10[4.2,] %v_13[4.5,] 
		 7: RETURN %v_14[4.6,] %self[4.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = small_group_people
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: def_%v_3 
		 7: %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%v_3 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->small_groups def_%v_4 %self[2.0,] 
		 1: %v_4->pluck def_%v_5 %v_4[4.0,] 
		 2: %v_3->in_group_ids def_%v_6 %v_3[3.0,2.6,] %v_5[4.1,] 
		 3: COPY def_%v_7 
		 4: %self->id def_%v_8 %self[4.0,2.0,] 
		 5: %v_6->where def_%v_9 %v_6[4.2,] %v_7[4.3,] %v_8[4.4,] 
		 6: RETURN %v_9[4.5,] %self[4.0,4.4,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = sharing_with_people
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->sharing_with_people_ids def_%v_3 %self[2.0,] 
		 7: COPY def_ids %v_3[2.6,] 
		 8: 
		 9: def_%v_4 
		 10: %v_4[2.9,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%v_4 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: def_%v_5 ids[2.7,] 
		 1: def_%v_6 ids[2.7,] 
		 2: def_%v_7 %v_5[4.0,] %v_6[4.1,] 
		 3: def_%v_8 ids[2.7,] 
		 4: %v_8->map def_%v_9 %v_8[4.3,] 
		 5: def_%v_10 %v_7[4.2,] %v_9[4.4,] 
		 6: COPY def_%v_11 %v_10[4.5,] 
		 7: %v_4->where def_%v_12 %v_4[3.0,2.9,] %v_11[4.6,] 
		 8: RETURN %v_12[4.7,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = sharing_with_people_ids
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->family def_%v_3 %self[2.0,] 
		 7: %v_3->people def_%v_4 %v_3[2.6,] 
		 8: %v_4->undeleted def_%v_5 %v_4[2.7,] 
		 9: %v_5->where def_%v_6 %v_5[2.8,] 
		 10: %self->id def_%v_7 %self[2.0,2.6,] 
		 11: COPY def_%v_8 %v_7[2.10,] 
		 12: %v_6->not def_%v_9 %v_6[2.9,] %v_8[2.11,] 
		 13: %v_9->pluck def_%v_10 %v_9[2.12,] 
		 14: 
		 15: (Setting) def_%v_11 
		 16: %v_11->get def_%v_12 %v_11[2.15,] 
		 17: BRANCH %v_12[2.16,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->friends def_%v_13 %self[2.0,] 
		 1: %v_13->pluck def_%v_14 %v_13[3.0,] 
		 2: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY def_%v_15 
		 1: COPY def_%v_14 %v_15[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->small_group_people def_%v_16 %self[2.0,] 
		 1: %v_16->pluck def_%v_17 %v_16[5.0,] 
		 2: COPY def_%v_18 %v_10[2.13,] %v_14[4.1,3.1,] %v_17[5.1,] 
		 3: RETURN %v_18[5.2,] %self[5.0,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reason_sharing_with
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_person 
		 6: 
		 7: %self->sharing_with_people_ids def_%v_3 %self[2.0,] 
		 8: COPY def_ids %v_3[2.7,] 
		 9: 
		 10: COPY def_%v_4 
		 11: %v_4->tap def_%v_5 %v_4[2.10,] %self[2.0,2.7,] 
CLOSURE BEGIN: ids[2.8,] person[2.5,] reasons[] %self[2.0,2.7,] 
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_reasons 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 5 13 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_3 ids[] 
		 2: person->id def_%cl_1_4 person[] 
		 3: %cl_1_3->include? def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 
		 4: BRANCH %cl_1_5[3.3,] 
BB 4
	outgoing: 6 13 
	datadep: 
	instructions:
		 0: person->family def_%cl_1_6 person[] 
		 1: ATTRASSIGN reasons->[] %cl_1_6[4.0,] 
		 2: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY def_%cl_1_6 
BB 6
	outgoing: 7 8 13 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_7 ids[] 
		 2: person->id def_%cl_1_8 person[] 
		 3: %cl_1_7->include? def_%cl_1_9 %cl_1_7[6.1,] %cl_1_8[6.2,] 
		 4: BRANCH %cl_1_9[6.3,] 
BB 7
	outgoing: 9 13 
	datadep: 
	instructions:
		 0: ATTRASSIGN reasons->[] 
		 1: COPY def_%cl_1_10 
		 2: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY def_%cl_1_10 
BB 9
	outgoing: 10 11 13 
	datadep: 
	instructions:
		 0: 
		 1: (Group) def_%cl_1_11 
		 2: def_%cl_1_12 ids[] 
		 3: %cl_1_12->select def_%cl_1_13 %cl_1_12[9.2,] %self[2.0,] 
CLOSURE BEGIN: person[] id[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_id 
		 3: RECEIVEARG def_group_id 
		 4: COPY def_%current_scope 
		 5: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: person->id def_%cl_2_3 person[] 
		 2: id->== def_%cl_2_4 id[2.2,] %cl_2_3[3.1,] 
		 3: RETURN %cl_2_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 4: %cl_1_13->map def_%cl_1_14 %cl_1_13[9.3,] 
		 5: %cl_1_11->find def_%cl_1_15 %cl_1_11[9.1,] %cl_1_14[9.4,] 
		 6: ATTRASSIGN reasons->[] %cl_1_15[9.5,] 
		 7: 
		 8: def_%cl_1_16 reasons[9.6,7.0,4.1,2.2,] 
		 9: %cl_1_16->empty? def_%cl_1_17 %cl_1_16[9.8,] 
		 10: BRANCH %cl_1_17[9.9,] 
BB 10
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: reasons->delete def_%cl_1_18 reasons[9.6,7.0,4.1,2.2,] 
		 1: 
BB 11
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 12
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %cl_1_18[10.0,] %self[2.0,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: def_%cl_1_19 
		 1: def_%cl_1_20 %cl_1_19[13.0,] 
		 2: RETURN %cl_1_20[13.1,] %self[2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 12: RETURN %v_5[2.11,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

