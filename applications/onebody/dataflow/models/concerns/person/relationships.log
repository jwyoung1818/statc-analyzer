SET IRMethod, name = update_relationships_hash
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->relationships def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->includes def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: %v_4->to_a def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: %v_5->select def_%v_6 %v_5[2.8,] %self[2.0,2.6,] 	 ARGS:%v_5,
CLOSURE BEGIN: relationship[2.9,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_relationship 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (Setting) def_%cl_1_3 
		 2: %cl_1_3->get def_%cl_1_4 %cl_1_3[3.1,] 	 ARGS:Symbol,Symbol,
		 3: relationship->name_or_other def_%cl_1_5 relationship[2.2,] 	 ARGS:
		 4: %cl_1_4->include? def_%cl_1_6 %cl_1_4[3.2,] %cl_1_5[3.3,] 	 ARGS:%cl_1_5,
		 5: %cl_1_6->! def_%cl_1_7 %cl_1_6[3.4,] 	 ARGS:
		 6: RETURN %cl_1_7[3.5,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[4.0,] 
		 2: RETURN %cl_1_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: %v_6->map def_%v_7 %v_6[2.9,] %self[2.0,2.6,] 	 ARGS:%v_6,
CLOSURE BEGIN: relationship[2.10,2.9,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_relationship 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: relationship->related def_%cl_2_3 relationship[2.2,] 	 ARGS:
		 2: %cl_2_3->legacy_id def_%cl_2_4 %cl_2_3[3.1,] 	 ARGS:
		 3: COPY TYPE_StringLiteral "[" def_%cl_2_5 
		 4: relationship->name_or_other def_%cl_2_6 relationship[3.1,2.2,] 	 ARGS:
		 5: COPY TYPE_StringLiteral "]" def_%cl_2_7 
		 6: BUILDSTRING def_%cl_2_8 %cl_2_4[3.2,] %cl_2_5[3.3,] %cl_2_6[3.4,] %cl_2_7[3.5,] 
		 7: RETURN %cl_2_8[3.6,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_9 
		 1: def_%cl_2_10 %cl_2_9[4.0,] 
		 2: RETURN %cl_2_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: %v_7->sort def_%v_8 %v_7[2.10,] 	 ARGS:
		 12: COPY TYPE_PASS def_rels %v_8[2.11,] 
		 13: 
		 14: (Digest) def_%v_9 
		 15: (inherit SHA1) def_%v_10 %v_9[2.14,] 
		 16: %v_10[2.15,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_9->const_missing def_%v_10 %v_9[2.14,] 	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "," def_%v_11 
		 1: rels->join def_%v_12 rels[2.12,] %v_11[4.0,] 	 ARGS:%v_11,
		 2: %v_10->hexdigest def_%v_13 %v_10[3.0,2.15,] %v_12[4.1,] 	 ARGS:%v_12,
		 3: ATTRASSIGN %self->relationships_hash %v_13[4.2,] 
		 4: RETURN %v_13[4.2,] %self[4.3,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_relationships_hash!
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->update_relationships_hash def_%v_3 %self[2.0,] 	 ARGS:
		 7: 
		 8: HASH-validate- def_%v_4 
		 9: %self->save def_%v_5 %self[2.0,2.6,] %v_4[2.8,] 	 ARGS:%v_4,
		 10: RETURN %v_5[2.9,] %self[2.0,2.6,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = relationships=
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_r 
		 6: 
		 7: def_%v_4 r[2.5,] 
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: (String) def_%v_6 
		 1: def_%v_5 %v_6[3.0,] r[2.5,] 
		 2: BRANCH %v_5[3.1,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->-unknown-super-target- def_%v_9 %self[2.0,] r[2.5,] %v_0[2.1,] 	 ARGS:r,
		 2: COPY TYPE_PASS def_%v_3 %v_9[4.1,] 
		 3: RETURN %v_9[4.1,] %self[4.1,2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: r->to_s def_%v_7 r[2.5,] 	 ARGS:
		 2: ATTRASSIGN %self->relationships_from_string %v_7[5.1,] 
		 3: COPY TYPE_PASS def_%v_3 %v_7[5.1,] 
		 4: RETURN %v_7[5.1,] %self[5.2,2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: r->to_s def_%v_8 r[2.5,] 	 ARGS:
		 1: ATTRASSIGN %self->relationships_from_string %v_8[6.0,] 
		 2: COPY TYPE_PASS def_%v_3 %v_8[6.0,] 
		 3: RETURN %v_8[6.0,] %self[6.1,2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = relationships_from_string=
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_string 
		 6: 
		 7: %self->relationships def_%v_3 %self[2.0,] 	 ARGS:
		 8: %v_3->to_a def_%v_4 %v_3[2.7,] 	 ARGS:
		 9: COPY TYPE_PASS def_existing %v_4[2.8,] 
		 10: 
		 11: COPY TYPE_Regexp def_%v_5 
		 12: string->scan def_%v_6 string[2.5,] 	 ARGS:%v_5,
		 13: %v_6->map def_%v_7 %v_6[2.12,] %self[2.0,2.7,] 	 ARGS:%v_6,
CLOSURE BEGIN: name[] %self[2.0,2.7,] related_id[] existing[2.9,] r[] related[] other_name[] record[2.13,] 
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_related_id 
		 3: RECEIVEARG def_name 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 13 
	datadep: 
	instructions:
		 0: 
		 1: (I18n) def_%cl_1_3 
		 2: name->downcase def_%cl_1_4 name[2.3,] 	 ARGS:
		 3: COPY TYPE_StringLiteral "relationships.names" def_%cl_1_5 
		 4: COPY TYPE_StringLiteral "" def_%cl_1_6 
		 5: HASH-scope-default- def_%cl_1_7 %cl_1_5[3.3,] %cl_1_6[3.4,] 
		 6: %cl_1_3->t def_%cl_1_8 %cl_1_3[3.1,] %cl_1_4[3.2,] %cl_1_7[3.5,] 	 ARGS:%cl_1_4,%cl_1_7,
		 7: %cl_1_8->present? def_%cl_1_9 %cl_1_8[3.6,] 	 ARGS:
		 8: BRANCH %cl_1_9[3.7,] 
BB 4
	outgoing: 6 13 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Nil def_other_name 
		 2: 
		 3: name->downcase def_%cl_1_10 name[2.3,] 	 ARGS:
		 4: COPY TYPE_PASS def_name %cl_1_10[4.3,] 
		 5: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_other_name name[2.3,] 
		 2: 
		 3: COPY TYPE_StringLiteral "other" def_%cl_1_11 
		 4: COPY TYPE_PASS def_name %cl_1_11[5.3,] 
		 5: COPY TYPE_PASS def_%cl_1_10 %cl_1_11[5.3,] 
BB 6
	outgoing: 7 8 13 
	datadep: 
	instructions:
		 0: 
		 1: %self->class def_%cl_1_12 %self[2.0,] 	 ARGS:
		 2: HASH-legacy_id- def_%cl_1_13 related_id[2.2,] 
		 3: %cl_1_12->where def_%cl_1_14 %cl_1_12[6.1,] %cl_1_13[6.2,] 	 ARGS:%cl_1_13,
		 4: %cl_1_14->first def_%cl_1_15 %cl_1_14[6.3,] 	 ARGS:
		 5: COPY TYPE_PASS def_related %cl_1_15[6.4,] 
		 6: BRANCH %cl_1_15[6.4,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_16 
		 1: 
BB 8
	outgoing: 13 15 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 9
	outgoing: 10 11 13 
	datadep: 
	instructions:
		 0: 
		 1: existing->detect def_%cl_1_17 existing[] %self[2.0,] 	 ARGS:existing,
CLOSURE BEGIN: r[9.1,] related[6.5,] name[5.4,4.4,] other_name[5.1,4.1,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_r 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: r->related_id def_%cl_2_3 r[2.2,] 	 ARGS:
		 2: r->name def_%cl_2_4 r[3.1,2.2,] 	 ARGS:
		 3: r->other_name def_%cl_2_5 r[3.1,3.2,2.2,] 	 ARGS:
		 4: COPY TYPE_Array def_%cl_2_6 %cl_2_3[3.1,] %cl_2_4[3.2,] %cl_2_5[3.3,] 
		 5: related->id def_%cl_2_7 related[] 	 ARGS:
		 6: COPY TYPE_Array def_%cl_2_8 %cl_2_7[3.5,] name[] other_name[] 
		 7: %cl_2_6->== def_%cl_2_9 %cl_2_6[3.4,] %cl_2_8[3.6,] 	 ARGS:%cl_2_8,
		 8: RETURN %cl_2_9[3.7,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_10 
		 1: def_%cl_2_11 %cl_2_10[4.0,] 
		 2: RETURN %cl_2_11[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: COPY TYPE_PASS def_record %cl_1_17[9.1,] 
		 3: BRANCH %cl_1_17[9.1,] 
BB 10
	outgoing: 13 15 
	datadep: 
	instructions:
		 0: 
		 1: record->id def_%cl_1_18 record[9.2,] 	 ARGS:
		 2: HASH-id- def_%cl_1_19 %cl_1_18[10.1,] 
		 3: RETURN %cl_1_18[10.1,] %self[2.0,] 
BB 11
	outgoing: 13 15 
	datadep: 
	instructions:
		 0: 
		 1: %self->id def_%cl_1_20 %self[2.0,] 	 ARGS:
		 2: related->id def_%cl_1_21 related[6.5,] 	 ARGS:
		 3: HASH-name-other_name-person_id-related_id- def_%cl_1_22 name[5.4,4.4,] other_name[5.1,4.1,] %cl_1_20[11.1,] %cl_1_21[11.2,] 
		 4: RETURN %cl_1_22[11.3,] %self[11.1,2.0,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: def_%cl_1_23 
		 1: def_%cl_1_24 %cl_1_23[13.0,] 
		 2: RETURN %cl_1_24[13.1,] %self[2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: related_id[2.2,] related[6.5,] name[4.4,5.4,2.3,] other_name[4.1,5.1,] 
		 14: %v_7->compact def_%v_8 %v_7[2.13,] 	 ARGS:
		 15: COPY TYPE_PASS def_new_and_existing %v_8[2.14,] 
		 16: 
		 17: %v_8->map def_%v_9 %v_8[2.14,] %self[2.0,2.7,] 	 ARGS:%v_8,
CLOSURE BEGIN: r[2.17,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_r 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: r->[] def_%cl_3_3 r[2.2,] 	 ARGS:Symbol,
		 2: RETURN %cl_3_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_4 
		 1: def_%cl_3_5 %cl_3_4[4.0,] 
		 2: RETURN %cl_3_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 18: %v_9->compact def_%v_10 %v_9[2.17,] 	 ARGS:
		 19: COPY TYPE_PASS def_keep_ids %v_10[2.18,] 
		 20: 
		 21: existing->reject def_%v_11 existing[2.9,] %self[2.0,2.7,] 	 ARGS:existing,
CLOSURE BEGIN: r[2.21,2.17,] keep_ids[2.19,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_4_0 
		 2: RECEIVEARG def_r 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: r->id def_%cl_4_3 r[2.2,] 	 ARGS:
		 2: keep_ids->include? def_%cl_4_4 keep_ids[] %cl_4_3[3.1,] 	 ARGS:%cl_4_3,
		 3: RETURN %cl_4_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_4_5 
		 1: def_%cl_4_6 %cl_4_5[4.0,] 
		 2: RETURN %cl_4_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 22: %v_11->map def_%v_12 %v_11[2.21,] %self[2.0,2.7,] 	 ARGS:%v_11,
CLOSURE BEGIN: record[2.22,2.13,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_5_0 
		 2: RECEIVEARG def_record 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: record->id def_%cl_5_3 record[2.2,] 	 ARGS:
		 2: HASH-id-_destroy- def_%cl_5_4 %cl_5_3[3.1,] 
		 3: RETURN %cl_5_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_5_5 
		 1: def_%cl_5_6 %cl_5_5[4.0,] 
		 2: RETURN %cl_5_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 23: COPY TYPE_PASS def_old %v_12[2.22,] 
		 24: 
		 25: new_and_existing->+ def_%v_13 new_and_existing[2.15,] %v_12[2.22,] 	 ARGS:old,
		 26: ATTRASSIGN %self->relationships_attributes %v_13[2.25,] 
		 27: RETURN %v_13[2.25,] %self[2.0,2.7,2.26,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

