SET IRMethod, name = initialize
BB 1
	outgoing: 19 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 17 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_params 
		 6: params[2.5,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_params %v_3[4.0,] 
BB 5
	outgoing: 6 7 17 
	datadep: 
	instructions:
		 0: 
		 1: params->delete def_%v_4 params[4.1,2.5,] 	 ARGS:Symbol,
		 2: BRANCH %v_4[5.1,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Symbol def_%v_4 
BB 7
	outgoing: 8 12 17 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_source %v_4[6.0,5.1,] 
		 1: 
		 2: params->each def_%v_5 params[4.1,2.5,] %self[2.0,] 	 ARGS:params,
CLOSURE BEGIN: key[] %self[2.0,] val[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_key 
		 3: RECEIVEARG def_val 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%cl_1_3 
		 2: BUILDSTRING def_%cl_1_4 key[2.2,] %cl_1_3[3.1,] 
		 3: %self->respond_to? def_%cl_1_5 %self[2.0,] %cl_1_4[3.2,] 	 ARGS:%cl_1_4,
		 4: BRANCH %cl_1_5[3.3,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%cl_1_6 
		 1: BUILDSTRING def_%cl_1_7 key[2.2,] %cl_1_6[4.0,] 
		 2: %self->send def_%cl_1_8 %self[2.0,] %cl_1_7[4.1,] val[2.3,] 	 ARGS:%cl_1_7,val,
		 3: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_1_8[4.2,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[7.0,] 
		 2: RETURN %cl_1_10[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 3: 
		 4: source->== def_%v_6 source[7.0,] 	 ARGS:Symbol,
		 5: BRANCH %v_6[7.4,] 
BB 8
	outgoing: 9 10 17 
	datadep: 
	instructions:
		 0: 
		 1: %self->group_category def_%v_7 %self[2.0,] 	 ARGS:
		 2: %v_7->present? def_%v_8 %v_7[8.1,] 	 ARGS:
		 3: BRANCH %v_8[8.2,] 
BB 9
	outgoing: 11 17 
	datadep: 
	instructions:
		 0: 
		 1: (Person) def_%v_9 
		 2: %v_9->eager_load def_%v_10 %v_9[9.1,] 	 ARGS:Symbol,Symbol,
		 3: ATTRASSIGN %self->scope %v_10[9.2,] 
		 4: 
BB 10
	outgoing: 11 17 
	datadep: 
	instructions:
		 0: 
		 1: (Person) def_%v_11 
		 2: %v_11->joins def_%v_12 %v_11[10.1,] 	 ARGS:Symbol,
		 3: ATTRASSIGN %self->scope %v_12[10.2,] 
		 4: COPY TYPE_PASS def_%v_10 %v_12[10.2,] 
BB 11
	outgoing: 19 
	datadep: 
	instructions:
		 0: RETURN %v_10[10.4,9.2,] %self[10.3,9.3,2.0,] 
BB 12
	outgoing: 13 14 17 
	datadep: 
	instructions:
		 0: 
		 1: source->== def_%v_13 source[7.0,] 	 ARGS:Symbol,
		 2: BRANCH %v_13[12.1,] 
BB 13
	outgoing: 15 17 
	datadep: 
	instructions:
		 0: 
		 1: (Family) def_%v_14 
		 2: %v_14->includes def_%v_15 %v_14[13.1,] 	 ARGS:Symbol,
		 3: ATTRASSIGN %self->scope %v_15[13.2,] 
		 4: 
BB 14
	outgoing: 15 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_15 
BB 15
	outgoing: 19 
	datadep: 
	instructions:
		 0: RETURN %v_15[14.0,13.2,] %self[13.3,2.0,] 
BB 17
	outgoing: 19 
	datadep: 
	instructions:
		 0: def_%v_16 
		 1: def_%v_17 %v_16[17.0,] 
		 2: RETURN %v_17[17.1,] %self[9.3,10.3,13.3,2.0,] 
BB 19
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = results
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->execute! def_%v_3 %self[2.0,] 	 ARGS:
		 7: 
		 8: GETFIELD %self->scope def_%v_4 %self[2.0,2.6,] 
		 9: RETURN %v_4[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = count
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->execute! def_%v_3 %self[2.0,] 	 ARGS:
		 7: 
		 8: GETFIELD %self->scope def_%v_4 %self[2.0,2.6,] 
		 9: %v_4->count def_%v_5 %v_4[2.8,] 	 ARGS:
		 10: RETURN %v_5[2.9,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = family_name=
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: 
		 7: ATTRASSIGN %self->name name[2.5,] 
		 8: RETURN name[2.5,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = birthday
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_key 
		 6: key[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_key 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: BRANCH key[3.0,2.5,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->birthday def_%v_3 %self[2.0,] 
		 2: %v_3->try def_%v_4 %v_3[5.1,] key[3.0,2.5,] 	 ARGS:Symbol,key,
		 3: %v_4->to_i def_%v_5 %v_4[5.2,] 	 ARGS:
		 4: RETURN %v_5[5.3,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->birthday def_%v_6 %self[2.0,] 
		 2: RETURN %v_6[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = anniversary
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_key 
		 6: key[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_key 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: BRANCH key[3.0,2.5,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->anniversary def_%v_3 %self[2.0,] 
		 2: %v_3->try def_%v_4 %v_3[5.1,] key[3.0,2.5,] 	 ARGS:Symbol,key,
		 3: %v_4->to_i def_%v_5 %v_4[5.2,] 	 ARGS:
		 4: RETURN %v_5[5.3,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->anniversary def_%v_6 %self[2.0,] 
		 2: RETURN %v_6[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = address
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_key 
		 6: key[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_key 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: BRANCH key[3.0,2.5,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->address def_%v_3 %self[2.0,] 
		 2: %v_3->try def_%v_4 %v_3[5.1,] key[3.0,2.5,] 	 ARGS:Symbol,key,
		 3: RETURN %v_4[5.2,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->address def_%v_5 %self[2.0,] 
		 2: RETURN %v_5[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = execute!
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->executed def_%v_3 %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: %self->not_deleted! def_%v_5 %self[2.0,] 	 ARGS:
		 2: 
		 3: %self->business! def_%v_6 %self[4.1,2.0,] 	 ARGS:
		 4: 
		 5: %self->testimony! def_%v_7 %self[4.1,4.3,2.0,] 	 ARGS:
		 6: 
		 7: %self->order_by_name! def_%v_8 %self[4.1,4.3,4.5,2.0,] 	 ARGS:
		 8: 
		 9: %self->parental_consent! def_%v_9 %self[4.1,4.3,4.5,4.7,2.0,] 	 ARGS:
		 10: 
		 11: %self->visible! def_%v_10 %self[4.1,4.3,4.5,4.7,4.9,2.0,] 	 ARGS:
		 12: 
		 13: %self->name! def_%v_11 %self[4.1,4.3,4.5,4.7,4.9,4.11,2.0,] 	 ARGS:
		 14: 
		 15: %self->group_category! def_%v_12 %self[4.1,4.3,4.5,4.7,4.9,4.11,4.13,2.0,] 	 ARGS:
		 16: 
		 17: %self->gender! def_%v_13 %self[4.1,4.3,4.5,4.7,4.9,4.11,4.13,4.15,2.0,] 	 ARGS:
		 18: 
		 19: %self->birthday! def_%v_14 %self[4.1,4.3,4.5,4.7,4.9,4.11,4.13,4.15,4.17,2.0,] 	 ARGS:
		 20: 
		 21: %self->anniversary! def_%v_15 %self[4.1,4.3,4.5,4.7,4.9,4.11,4.13,4.15,4.17,4.19,2.0,] 	 ARGS:
		 22: 
		 23: %self->address! def_%v_16 %self[4.1,4.3,4.5,4.7,4.9,4.11,4.13,4.15,4.17,4.19,4.21,2.0,] 	 ARGS:
		 24: 
		 25: %self->phone! def_%v_17 %self[4.1,4.3,4.5,4.7,4.9,4.11,4.13,4.15,4.17,4.19,4.21,4.23,2.0,] 	 ARGS:
		 26: 
		 27: %self->email! def_%v_18 %self[4.1,4.3,4.5,4.7,4.9,4.11,4.13,4.15,4.17,4.19,4.21,4.23,4.25,2.0,] 	 ARGS:
		 28: 
		 29: %self->type! def_%v_19 %self[4.1,4.3,4.5,4.7,4.9,4.11,4.13,4.15,4.17,4.19,4.21,4.23,4.25,4.27,2.0,] 	 ARGS:
		 30: 
		 31: %self->family_barcode_id! def_%v_20 %self[4.1,4.3,4.5,4.7,4.9,4.11,4.13,4.15,4.17,4.19,4.21,4.23,4.25,4.27,4.29,2.0,] 	 ARGS:
		 32: 
		 33: ATTRASSIGN %self->executed 
		 34: RETURN %self[4.1,4.3,4.5,4.7,4.9,4.11,4.13,4.15,4.17,4.19,4.21,4.23,4.25,4.27,4.29,4.31,4.33,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = where!
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_args 
		 6: 
		 7: GETFIELD %self->scope def_%v_3 %self[2.0,] 
		 8: def_%v_4 args[2.5,] 
		 9: %v_3->where def_%v_5 %v_3[2.7,] %v_4[2.8,] 	 ARGS:Splat,
		 10: ATTRASSIGN %self->scope %v_5[2.9,] 
		 11: RETURN %v_5[2.9,] %self[2.0,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = order!
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_args 
		 6: 
		 7: GETFIELD %self->scope def_%v_3 %self[2.0,] 
		 8: def_%v_4 args[2.5,] 
		 9: %v_3->order def_%v_5 %v_3[2.7,] %v_4[2.8,] 	 ARGS:Splat,
		 10: ATTRASSIGN %self->scope %v_5[2.9,] 
		 11: RETURN %v_5[2.9,] %self[2.0,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = not_deleted!
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-deleted- def_%v_3 
		 7: HASH-people- def_%v_4 %v_3[2.6,] 
		 8: %self->where! def_%v_5 %self[2.0,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: 
		 10: HASH-deleted- def_%v_6 
		 11: HASH-families- def_%v_7 %v_6[2.10,] 
		 12: %self->where! def_%v_8 %self[2.0,2.8,] %v_7[2.11,] 	 ARGS:%v_7,
		 13: RETURN %v_8[2.12,] %self[2.0,2.8,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = business!
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->business def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: COPY TYPE_StringLiteral def_%v_5 
		 3: %self->where! def_%v_6 %self[2.0,] %v_5[3.2,] 	 ARGS:%v_5,
		 4: 
		 5: COPY TYPE_StringLiteral def_%v_7 
		 6: %self->order! def_%v_8 %self[3.3,2.0,] %v_7[3.5,] 	 ARGS:%v_7,
		 7: RETURN %v_8[3.6,] %self[3.3,3.6,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = testimony!
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->testimony def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: COPY TYPE_StringLiteral def_%v_5 
		 3: %self->where! def_%v_6 %self[2.0,] %v_5[3.2,] 	 ARGS:%v_5,
		 4: RETURN %v_6[3.3,] %self[3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = order_by_name!
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: %self->order! def_%v_4 %self[2.0,] %v_3[2.6,] 	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = parental_consent!
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->show_hidden_profiles? def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: COPY TYPE_StringLiteral def_%v_5 
		 3: %self->where! def_%v_6 %self[2.0,] %v_5[4.2,] 	 ARGS:%v_5,Boolean,
		 4: RETURN %v_6[4.3,] %self[4.3,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = visible!
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->show_hidden_profiles? def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: (Person) def_%v_5 
		 3: %v_5->statuses def_%v_6 %v_5[4.2,] 	 ARGS:
		 4: %v_6->values_at def_%v_7 %v_6[4.3,] 	 ARGS:Symbol,Symbol,
		 5: HASH-visible-status- def_%v_8 %v_7[4.4,] 
		 6: HASH-people- def_%v_9 %v_8[4.5,] 
		 7: %self->where! def_%v_10 %self[2.0,] %v_9[4.6,] 	 ARGS:%v_9,
		 8: 
		 9: HASH-visible- def_%v_11 
		 10: HASH-families- def_%v_12 %v_11[4.9,] 
		 11: %self->where! def_%v_13 %self[4.7,2.0,] %v_12[4.10,] 	 ARGS:%v_12,
		 12: RETURN %v_13[4.11,] %self[4.7,4.11,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = name!
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: COPY TYPE_StringLiteral def_%v_5 
		 3: 
		 4: %self->like def_%v_6 %self[2.0,] 	 ARGS:
		 5: COPY TYPE_StringLiteral def_%v_7 
		 6: 
		 7: %self->like def_%v_8 %self[3.4,2.0,] 	 ARGS:
		 8: COPY TYPE_StringLiteral def_%v_9 
		 9: 
		 10: %self->like def_%v_10 %self[3.4,3.7,2.0,] 	 ARGS:
		 11: COPY TYPE_StringLiteral def_%v_11 
		 12: %self->like def_%v_12 %self[3.4,3.7,3.10,2.0,] 	 ARGS:
		 13: COPY TYPE_StringLiteral def_%v_13 
		 14: BUILDSTRING def_%v_14 %v_5[3.2,] %v_6[3.4,] %v_7[3.5,] %v_8[3.7,] %v_9[3.8,] %v_10[3.10,] %v_11[3.11,] %v_12[3.12,] %v_13[3.13,] 
		 15: %self->name def_%v_15 %self[3.4,3.7,3.10,3.12,2.0,] 	 ARGS:
		 16: %self->like_match def_%v_16 %self[3.4,3.7,3.10,3.12,3.15,2.0,] %v_15[3.15,] 	 ARGS:%v_15,
		 17: %self->name def_%v_17 %self[3.4,3.7,3.10,3.12,3.15,3.16,2.0,] 	 ARGS:
		 18: %v_17->split def_%v_18 %v_17[3.17,] 	 ARGS:
		 19: %v_18->first def_%v_19 %v_18[3.18,] 	 ARGS:
		 20: %self->like_match def_%v_20 %self[3.4,3.7,3.10,3.12,3.15,3.16,3.17,2.0,] %v_19[3.19,] 	 ARGS:%v_19,Symbol,
		 21: %self->name def_%v_21 %self[3.4,3.7,3.10,3.12,3.15,3.16,3.17,3.20,2.0,] 	 ARGS:
		 22: %v_21->split def_%v_22 %v_21[3.21,] 	 ARGS:
		 23: %v_22->last def_%v_23 %v_22[3.22,] 	 ARGS:
		 24: %self->like_match def_%v_24 %self[3.4,3.7,3.10,3.12,3.15,3.16,3.17,3.20,3.21,2.0,] %v_23[3.23,] 	 ARGS:%v_23,Symbol,
		 25: HASH-full_name-first_name-last_name- def_%v_25 %v_16[3.16,] %v_20[3.20,] %v_24[3.24,] 
		 26: %self->where! def_%v_26 %self[3.4,3.7,3.10,3.12,3.15,3.16,3.17,3.20,3.21,3.24,2.0,] %v_14[3.14,] %v_25[3.25,] 	 ARGS:%v_14,%v_25,
		 27: RETURN %v_26[3.26,] %self[3.4,3.7,3.10,3.12,3.15,3.16,3.17,3.20,3.21,3.24,3.26,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = group_category!
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->group_select_option def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: %v_3->== def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->group_category def_%v_6 %self[2.0,] 	 ARGS:
		 2: %v_6->present? def_%v_7 %v_6[3.1,] 	 ARGS:
		 3: BRANCH %v_7[3.2,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_8 
		 1: %self->group_category def_%v_9 %self[2.0,] 	 ARGS:
		 2: %self->where! def_%v_10 %self[4.1,2.0,] %v_8[4.0,] %v_9[4.1,] 	 ARGS:%v_8,%v_9,
		 3: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_10 
BB 6
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %v_10[5.0,4.2,] %self[2.0,] 
BB 7
	outgoing: 8 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->group_select_option def_%v_11 %self[2.0,] 	 ARGS:
		 2: COPY TYPE_StringLiteral def_%v_12 
		 3: %v_11->== def_%v_13 %v_11[7.1,] %v_12[7.2,] 	 ARGS:%v_12,
		 4: BRANCH %v_13[7.3,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->group_category def_%v_14 %self[2.0,] 	 ARGS:
		 2: %v_14->present? def_%v_15 %v_14[8.1,] 	 ARGS:
		 3: BRANCH %v_15[8.2,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_16 
		 1: %self->group_category def_%v_17 %self[2.0,] 	 ARGS:
		 2: %self->where! def_%v_18 %self[9.1,2.0,] %v_16[9.0,] %v_17[9.1,] 	 ARGS:%v_16,%v_17,
		 3: 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_18 
BB 11
	outgoing: 13 
	datadep: 
	instructions:
		 0: 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_18 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %v_18[12.0,10.0,9.2,] %self[2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = gender!
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->gender def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->present? def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->gender def_%v_5 %self[2.0,] 	 ARGS:
		 1: HASH-gender- def_%v_6 %v_5[3.0,] 
		 2: HASH-people- def_%v_7 %v_6[3.1,] 
		 3: %self->where! def_%v_8 %self[3.0,2.0,] %v_7[3.2,] 	 ARGS:%v_7,
		 4: RETURN %v_8[3.3,] %self[3.0,3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = birthday!
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->birthday def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_5 
		 1: %self->birthday= def_%v_4 %v_5[3.0,] 	 ARGS:%v_5,
		 2: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->birthday def_%v_6 %self[3.1,2.0,] 	 ARGS:
		 2: %v_6->[] def_%v_7 %v_6[4.1,] 	 ARGS:Symbol,
		 3: %v_7->present? def_%v_8 %v_7[4.2,] 	 ARGS:
		 4: BRANCH %v_8[4.3,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_9 
		 1: %self->birthday def_%v_10 %self[3.1,2.0,] 	 ARGS:
		 2: %v_10->[] def_%v_11 %v_10[5.1,] 	 ARGS:Symbol,
		 3: %self->where! def_%v_12 %self[5.1,3.1,2.0,] %v_9[5.0,] %v_11[5.2,] 	 ARGS:%v_9,%v_11,
		 4: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_12 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->birthday def_%v_13 %self[3.1,2.0,] 	 ARGS:
		 2: %v_13->[] def_%v_14 %v_13[7.1,] 	 ARGS:Symbol,
		 3: %v_14->present? def_%v_15 %v_14[7.2,] 	 ARGS:
		 4: BRANCH %v_15[7.3,] 
BB 8
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_16 
		 1: %self->birthday def_%v_17 %self[3.1,2.0,] 	 ARGS:
		 2: %v_17->[] def_%v_18 %v_17[8.1,] 	 ARGS:Symbol,
		 3: %self->where! def_%v_19 %self[8.1,3.1,2.0,] %v_16[8.0,] %v_18[8.2,] 	 ARGS:%v_16,%v_18,
		 4: RETURN %v_19[8.3,] %self[8.1,8.3,3.1,2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %self[3.1,2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = anniversary!
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->anniversary def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_5 
		 1: %self->anniversary= def_%v_4 %v_5[3.0,] 	 ARGS:%v_5,
		 2: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->anniversary def_%v_6 %self[3.1,2.0,] 	 ARGS:
		 2: %v_6->[] def_%v_7 %v_6[4.1,] 	 ARGS:Symbol,
		 3: %v_7->present? def_%v_8 %v_7[4.2,] 	 ARGS:
		 4: BRANCH %v_8[4.3,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_9 
		 1: %self->anniversary def_%v_10 %self[3.1,2.0,] 	 ARGS:
		 2: %v_10->[] def_%v_11 %v_10[5.1,] 	 ARGS:Symbol,
		 3: %self->where! def_%v_12 %self[5.1,3.1,2.0,] %v_9[5.0,] %v_11[5.2,] 	 ARGS:%v_9,%v_11,
		 4: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_12 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->anniversary def_%v_13 %self[3.1,2.0,] 	 ARGS:
		 2: %v_13->[] def_%v_14 %v_13[7.1,] 	 ARGS:Symbol,
		 3: %v_14->present? def_%v_15 %v_14[7.2,] 	 ARGS:
		 4: BRANCH %v_15[7.3,] 
BB 8
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_16 
		 1: %self->anniversary def_%v_17 %self[3.1,2.0,] 	 ARGS:
		 2: %v_17->[] def_%v_18 %v_17[8.1,] 	 ARGS:Symbol,
		 3: %self->where! def_%v_19 %self[8.1,3.1,2.0,] %v_16[8.0,] %v_18[8.2,] 	 ARGS:%v_16,%v_18,
		 4: RETURN %v_19[8.3,] %self[8.1,8.3,3.1,2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %self[3.1,2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = address!
BB 1
	outgoing: 14 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->address def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_5 
		 1: %self->address= def_%v_4 %v_5[3.0,] 	 ARGS:%v_5,
		 2: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->address def_%v_6 %self[3.1,2.0,] 	 ARGS:
		 2: %v_6->[] def_%v_7 %v_6[4.1,] 	 ARGS:Symbol,
		 3: %v_7->present? def_%v_8 %v_7[4.2,] 	 ARGS:
		 4: BRANCH %v_8[4.3,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_9 
		 1: %self->like def_%v_10 %self[3.1,2.0,] 	 ARGS:
		 2: COPY TYPE_StringLiteral def_%v_11 
		 3: BUILDSTRING def_%v_12 %v_9[5.0,] %v_10[5.1,] %v_11[5.2,] 
		 4: %self->address def_%v_13 %self[5.1,3.1,2.0,] 	 ARGS:
		 5: %v_13->[] def_%v_14 %v_13[5.4,] 	 ARGS:Symbol,
		 6: %self->like_match def_%v_15 %self[5.1,5.4,3.1,2.0,] %v_14[5.5,] 	 ARGS:%v_14,Symbol,
		 7: %self->where! def_%v_16 %self[5.1,5.4,5.6,3.1,2.0,] %v_12[5.3,] %v_15[5.6,] 	 ARGS:%v_12,%v_15,
		 8: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_16 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->address def_%v_17 %self[3.1,2.0,] 	 ARGS:
		 2: %v_17->[] def_%v_18 %v_17[7.1,] 	 ARGS:Symbol,
		 3: %v_18->present? def_%v_19 %v_18[7.2,] 	 ARGS:
		 4: BRANCH %v_19[7.3,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_20 
		 1: %self->like def_%v_21 %self[3.1,2.0,] 	 ARGS:
		 2: COPY TYPE_StringLiteral def_%v_22 
		 3: BUILDSTRING def_%v_23 %v_20[8.0,] %v_21[8.1,] %v_22[8.2,] 
		 4: %self->address def_%v_24 %self[8.1,3.1,2.0,] 	 ARGS:
		 5: %v_24->[] def_%v_25 %v_24[8.4,] 	 ARGS:Symbol,
		 6: %self->like_match def_%v_26 %self[8.1,8.4,3.1,2.0,] %v_25[8.5,] 	 ARGS:%v_25,Symbol,
		 7: %self->where! def_%v_27 %self[8.1,8.4,8.6,3.1,2.0,] %v_23[8.3,] %v_26[8.6,] 	 ARGS:%v_23,%v_26,
		 8: 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_27 
BB 10
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->address def_%v_28 %self[3.1,2.0,] 	 ARGS:
		 2: %v_28->[] def_%v_29 %v_28[10.1,] 	 ARGS:Symbol,
		 3: %v_29->present? def_%v_30 %v_29[10.2,] 	 ARGS:
		 4: BRANCH %v_30[10.3,] 
BB 11
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_31 
		 1: %self->like def_%v_32 %self[3.1,2.0,] 	 ARGS:
		 2: COPY TYPE_StringLiteral def_%v_33 
		 3: BUILDSTRING def_%v_34 %v_31[11.0,] %v_32[11.1,] %v_33[11.2,] 
		 4: %self->address def_%v_35 %self[11.1,3.1,2.0,] 	 ARGS:
		 5: %v_35->[] def_%v_36 %v_35[11.4,] 	 ARGS:Symbol,
		 6: %self->like_match def_%v_37 %self[11.1,11.4,3.1,2.0,] %v_36[11.5,] 	 ARGS:%v_36,Symbol,
		 7: %self->where! def_%v_38 %self[11.1,11.4,11.6,3.1,2.0,] %v_34[11.3,] %v_37[11.6,] 	 ARGS:%v_34,%v_37,
		 8: RETURN %v_38[11.7,] %self[11.1,11.4,11.6,11.7,3.1,2.0,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN %self[3.1,2.0,] 
BB 14
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = phone!
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Person) def_%v_3 
		 7: %v_3->logged_in def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->admin? def_%v_5 %v_4[2.7,] 	 ARGS:Symbol,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
		 1: 
		 2: %self->phone def_%v_7 %self[2.0,] 	 ARGS:
		 3: %v_7->present? def_%v_8 %v_7[3.2,] 	 ARGS:
		 4: BRANCH %v_8[3.3,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_9 
		 1: %self->phone def_%v_10 %self[2.0,] 	 ARGS:
		 2: %v_10->digits_only def_%v_11 %v_10[6.1,] 	 ARGS:
		 3: HASH-phone- def_%v_12 %v_11[6.2,] 
		 4: %self->where! def_%v_13 %self[6.1,2.0,] %v_9[6.0,] %v_12[6.3,] 	 ARGS:%v_9,%v_12,
		 5: RETURN %v_13[6.4,] %self[6.1,6.4,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = email!
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Person) def_%v_3 
		 7: %v_3->logged_in def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->admin? def_%v_5 %v_4[2.7,] 	 ARGS:Symbol,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
		 1: 
		 2: %self->email def_%v_7 %self[2.0,] 	 ARGS:
		 3: %v_7->present? def_%v_8 %v_7[3.2,] 	 ARGS:
		 4: BRANCH %v_8[3.3,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_9 
		 1: %self->email def_%v_10 %self[2.0,] 	 ARGS:
		 2: HASH-email- def_%v_11 %v_10[6.1,] 
		 3: %self->where! def_%v_12 %self[6.1,2.0,] %v_9[6.0,] %v_11[6.2,] 	 ARGS:%v_9,%v_11,
		 4: RETURN %v_12[6.3,] %self[6.1,6.3,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = type!
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: COPY TYPE_StringLiteral def_%v_5 
		 9: COPY TYPE_StringLiteral def_%v_6 
		 10: COPY TYPE_Array def_%v_7 %v_3[2.6,] %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] 
		 11: %self->type def_%v_8 %self[2.0,] 	 ARGS:
		 12: %v_7->include? def_%v_9 %v_7[2.10,] %v_8[2.11,] 	 ARGS:%v_8,
		 13: BRANCH %v_9[2.12,] 
BB 3
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%v_10 
		 2: %self->type def_%v_11 %self[2.0,] 	 ARGS:
		 3: COPY TYPE_StringLiteral def_%v_12 
		 4: BUILDSTRING def_%v_13 %v_10[3.1,] %v_11[3.2,] %v_12[3.3,] 
		 5: %self->where! def_%v_14 %self[3.2,2.0,] %v_13[3.4,] 	 ARGS:%v_13,Boolean,
		 6: RETURN %v_14[3.5,] %self[3.2,3.5,2.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->type def_%v_15 %self[2.0,] 	 ARGS:
		 2: %v_15->present? def_%v_16 %v_15[4.1,] 	 ARGS:
		 3: BRANCH %v_16[4.2,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%v_17 
		 2: %self->type def_%v_18 %self[2.0,] 	 ARGS:
		 3: %self->where! def_%v_19 %self[5.2,2.0,] %v_17[5.1,] %v_18[5.2,] 	 ARGS:%v_17,%v_18,
		 4: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_19 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %v_19[6.0,5.3,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = family_barcode_id!
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->family_barcode_id def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_4 
		 1: %self->family_barcode_id def_%v_5 %self[2.0,] 	 ARGS:
		 2: HASH-id- def_%v_6 %v_5[3.1,] 
		 3: %self->where! def_%v_7 %self[3.1,2.0,] %v_4[3.0,] %v_6[3.2,] 	 ARGS:%v_4,%v_6,
		 4: RETURN %v_7[3.3,] %self[3.1,3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = show_hidden_profiles?
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->show_hidden def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->select_person def_%v_4 %self[2.0,] 	 ARGS:
		 1: COPY TYPE_PASS def_%v_3 %v_4[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.6,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->select_family def_%v_5 %self[2.0,] 	 ARGS:
		 1: COPY TYPE_PASS def_%v_3 %v_5[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: BRANCH %v_3[5.1,3.1,2.6,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: (Person) def_%v_6 
		 1: %v_6->logged_in def_%v_7 %v_6[7.0,] 	 ARGS:
		 2: %v_7->admin? def_%v_8 %v_7[7.1,] 	 ARGS:Symbol,
		 3: RETURN %v_8[7.2,] %self[2.0,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %v_3[5.1,3.1,2.6,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = like
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->scope def_%v_3 %self[2.0,] 
		 7: %v_3->connection def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->adapter_name def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: COPY TYPE_StringLiteral def_%v_6 
		 10: %v_5->== def_%v_7 %v_5[2.8,] %v_6[2.9,] 	 ARGS:%v_6,
		 11: BRANCH %v_7[2.10,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%v_8 
		 2: RETURN %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%v_9 
		 2: RETURN %v_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = like_match
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_str 
		 6: def_position 
		 7: position[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Symbol def_position 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: str->to_s def_%v_3 str[2.5,] 	 ARGS:
		 2: %v_3->dup def_%v_4 %v_3[4.1,] 	 ARGS:
		 3: COPY TYPE_Regexp def_%v_5 
		 4: %v_4->gsub def_%v_6 %v_4[4.2,] %self[2.0,] 	 ARGS:%v_5,%v_4,
CLOSURE BEGIN: x[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_x 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%cl_1_3 
		 2: %cl_1_3->+ def_%cl_1_4 %cl_1_3[3.1,] x[2.2,] 	 ARGS:x,
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 5: %v_6->tap def_%v_7 %v_6[4.4,] %self[2.0,] 	 ARGS:%v_6,
CLOSURE BEGIN: position[3.0,2.6,] s[] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_s 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%cl_2_3 
		 2: %cl_2_3->include? def_%cl_2_4 %cl_2_3[3.1,] position[] 	 ARGS:position,
		 3: BRANCH %cl_2_4[3.2,] 
BB 4
	outgoing: 6 10 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%cl_2_5 
		 1: s->insert def_%cl_2_6 s[2.2,] %cl_2_5[4.0,] 	 ARGS:Fixnum,%cl_2_5,
		 2: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_2_6 
BB 6
	outgoing: 7 8 10 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%cl_2_7 
		 2: %cl_2_7->include? def_%cl_2_8 %cl_2_7[6.1,] position[] 	 ARGS:position,
		 3: BRANCH %cl_2_8[6.2,] 
BB 7
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%cl_2_9 
		 1: s-><< def_%cl_2_10 s[2.2,] %cl_2_9[7.0,] 	 ARGS:%cl_2_9,
		 2: 
BB 8
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %cl_2_10[7.1,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_2_11 
		 1: def_%cl_2_12 %cl_2_11[10.0,] 
		 2: RETURN %cl_2_12[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 6: RETURN %v_7[4.5,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

