SET IRMethod, name = initialize
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: expose_count[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: (DEFAULT_EXPOSE_COUNT) 
		 1: %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 2 2 2 3 2 2 2 
	instructions:
		 0: 
		 1: items->dup items[2.5,] 
		 2: %self[2.0,] %v_4[4.1,] @items[] 
		 3: 
		 4: %self[2.0,] expose_count[3.1,2.6,] @expose_count[] 
		 5: 
		 6: %self->expose %self[2.0,] 
		 7: 
		 8: %self->group %self[2.0,] 
		 9: RETURN %v_6[4.8,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = exposed_shared
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self[2.0,] @exposed[] 
		 7: %v_3->select %v_3[2.6,] 
		 8: RETURN %v_4[2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = expose
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self[2.0,] @items[] 
		 7: %self[2.0,] @expose_count[] 
		 8: %v_3->pop %v_4[2.7,] %v_3[2.6,] 
		 9: %self[2.0,] %v_5[2.8,] @exposed[] 
		 10: 
BB 3
	outgoing: 4 5 
	datadep: 2 
	instructions:
		 0: %self->enough_exposed? %self[2.0,] 
		 1: %v_7->! %v_7[3.0,] 
		 2: BRANCH %v_8[3.1,] 
BB 4
	outgoing: 5 
	datadep: 2 
	instructions:
		 0: %self[2.0,] @items[2.6,6.2,] 
		 1: %v_9->any? %v_9[4.0,] 
		 2: %v_10[4.1,] 
BB 5
	outgoing: 6 8 
	datadep: 4 3 
	instructions:
		 0: BRANCH %v_8[4.2,3.1,] 
BB 6
	outgoing: 3 
	datadep: 2 2 
	instructions:
		 0: 
		 1: %self[2.0,] @exposed[2.9,2.9,] 
		 2: %self[2.0,] @items[4.0,2.6,] 
		 3: %v_12->pop %v_12[6.2,] 
		 4: %v_11->unshift %v_13[6.3,] %v_11[6.1,] 
		 5: 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: 
BB 10
	outgoing: 11 13 
	datadep: 2 
	instructions:
		 0: %self->pop_unshared %self[2.0,] 
		 1: %v_16[10.0,] 
		 2: BRANCH %v_16[10.0,] 
BB 11
	outgoing: 10 
	datadep: 2 10 
	instructions:
		 0: 
		 1: 
		 2: %self[2.0,] @exposed[2.9,6.1,2.9,6.1,] 
		 3: %v_17->unshift %v_17[11.2,] item[10.1,] 
		 4: 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN 
BB 15
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = group
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self[2.0,] @items[] 
		 7: %self[2.0,] %v_3[2.6,] @grouped[] 
		 8: RETURN %v_3[2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = enough_exposed?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->exposed_shared %self[2.0,] 
		 7: %v_3->size %v_3[2.6,] 
		 8: %self[2.0,] @expose_count[] 
		 9: %v_4[2.7,] %v_5[2.8,] 
		 10: RETURN %v_6[2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = pop_unshared
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self[2.0,] @items[] 
		 7: %v_3->rindex %self[2.0,] %v_3[2.6,] 
CLOSURE BEGIN: @items[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
BB 3
	outgoing: 4 6 
	datadep: 2 
	instructions:
		 0: 
		 1: i->shared i[2.2,] 
		 2: %cl_1_3->! %cl_1_3[3.1,] 
		 3: RETURN %cl_1_4[3.2,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 8: %v_4[2.7,] 
		 9: 
		 10: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 2 2 
	instructions:
		 0: %self[2.0,] @items[2.6,] 
		 1: %v_5->slice! %v_5[3.0,] index[2.8,] 
		 2: RETURN %v_6[3.1,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = initialize
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: base_item->nil? base_item[2.5,] 
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 5 
	datadep: 2 
	instructions:
		 0: 
		 1: %self->fail %self[2.0,] %v_4[3.0,] 
		 2: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
BB 5
	outgoing: 6 
	datadep: 2 2 2 
	instructions:
		 0: 
		 1: %self[2.0,] base_item[2.5,] @base_item[] 
		 2: RETURN base_item[2.5,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = group
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->destroy_existing_groups %self[2.0,] 
		 7: 
		 8: %self->create_group %self[2.0,] 
		 9: RETURN %v_4[2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = grouper
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self[2.0,] 
		 7: %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 2 
	instructions:
		 0: %self[2.0,] @grouper[] 
		 1: %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 3 2 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 2 2 
	instructions:
		 0: (Grouper) 
		 1: %self->items %self[2.0,] 
		 2: %v_7->to_a %v_7[5.1,] 
		 3: %v_6->new %v_8[5.2,] %v_6[5.0,] 
		 4: %self[2.0,] %v_9[5.3,] @grouper[3.0,] 
		 5: RETURN %v_9[5.3,] 
BB 6
	outgoing: 7 
	datadep: 3 
	instructions:
		 0: RETURN %v_5[3.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = items
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: (StreamItem) 
		 7: %v_3->order %v_3[2.6,] 
		 8: %self[2.0,] @base_item[] 
		 9: %v_5->streamable_type %v_5[2.8,] 
		 10: %v_6[2.9,] 
		 11: %v_4->where %v_4[2.7,] %v_7[2.10,] 
		 12: 
		 13: @base_item[2.8,] 
		 14: %v_10->created_at %v_10[2.13,] 
		 15: (GROUPING_PERIOD) 
		 16: %v_11[2.14,] %v_12[2.15,] 
		 17: %v_8->where %v_13[2.16,] %v_8[2.11,] %v_9[2.12,] 
		 18: RETURN %v_14[2.17,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = destroy_existing_groups
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->items %self[2.0,] 
		 7: %v_3->map %v_3[2.6,] 
		 8: %v_4->uniq %v_4[2.7,] 
		 9: %v_5->compact %v_5[2.8,] 
		 10: %v_6->each %v_6[2.9,] 
		 11: RETURN %v_7[2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = create_group
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->grouper %self[2.0,] 
		 7: %v_3->exposed_shared %v_3[2.6,] 
		 8: %v_4->none? %v_4[2.7,] 
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 4 
	datadep: 2 
	instructions:
		 0: %self->grouper %self[2.0,] 
		 1: %v_6->grouped %v_6[3.0,] 
		 2: %v_7->none? %v_7[3.1,] 
		 3: %v_8[3.2,] 
BB 4
	outgoing: 5 6 
	datadep: 3 2 
	instructions:
		 0: BRANCH %v_5[3.3,2.8,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN 
BB 6
	outgoing: 8 
	datadep: 2 2 2 
	instructions:
		 0: 
		 1: 
		 2: %self->grouper %self[2.0,] 
		 3: %v_10->exposed_shared %v_10[6.2,] 
		 4: %v_11->first %v_11[6.3,] 
		 5: %v_12->created_at %v_12[6.4,] 
		 6: 
		 7: %v_13[6.5,] %v_14[6.6,] 
		 8: %v_15[6.7,] 
		 9: 
		 10: (StreamItem) 
		 11: 
		 12: %self[2.0,] @base_item[] 
		 13: %v_18->streamable_type %v_18[6.12,] 
		 14: %v_19[6.13,] 
		 15: %self->grouper %self[2.0,] 
		 16: %v_21->grouped %v_21[6.15,] 
		 17: %v_17[6.11,] %v_20[6.14,] created_at[6.8,] %v_22[6.16,] 
		 18: %v_16->create! %v_16[6.10,] %v_23[6.17,] 
		 19: RETURN %v_24[6.18,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

