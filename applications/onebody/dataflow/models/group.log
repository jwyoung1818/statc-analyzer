SET IRMethod, name = validate_self_referencing_parents_of
BB 1
	outgoing: 17 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: def_%v_3 
BB 4
	outgoing: 5 6 11 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: %self->new_record? def_%v_6 %self[2.0,] 
		 3: %v_6->! def_%v_7 %v_6[4.2,] 
		 4: BRANCH %v_7[4.3,] 
BB 5
	outgoing: 6 11 
	datadep: 
	instructions:
		 0: %self->parents_of def_%v_8 %self[2.0,] 
		 1: %self->id def_%v_9 %self[5.0,2.0,] 
		 2: %v_8->== def_%v_10 %v_8[5.0,] %v_9[5.1,] 
		 3: COPY def_%v_7 %v_10[5.2,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: BRANCH %v_7[5.3,4.3,] 
BB 7
	outgoing: 9 11 
	datadep: 
	instructions:
		 0: %self->errors def_%v_11 %self[2.0,] 
		 1: COPY def_%v_12 
		 2: %v_11->add def_%v_13 %v_11[7.0,] %v_12[7.1,] 
		 3: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY def_%v_13 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: COPY def_%v_5 %v_13[8.0,7.2,] 
		 1: %v_3[2.6,] 
BB 10
	outgoing: 16 
	datadep: 
	instructions:
		 0: 
BB 11
	outgoing: 12 13 15 
	datadep: 
	instructions:
		 0: def_%v_14 
		 1: def_%v_15 %v_14[11.0,] 
		 2: BRANCH %v_15[11.1,] 
BB 12
	outgoing: 15 17 
	datadep: 
	instructions:
		 0: %v_14[11.0,] 
BB 13
	outgoing: 14 15 
	datadep: 
	instructions:
		 0: 
		 1: COPY def_%v_16 
		 2: %self->puts def_%v_17 %self[2.0,] %v_16[13.1,] 
		 3: COPY def_%v_5 %v_17[13.2,] 
		 4: %v_3[2.6,] 
BB 14
	outgoing: 16 
	datadep: 
	instructions:
		 0: 
BB 15
	outgoing: 17 
	datadep: 
	instructions:
		 0: def_%v_18 
		 1: def_%v_19 %v_18[15.0,] %v_3[2.6,] 
		 2: %v_18[15.0,] 
BB 16
	outgoing: 17 
	datadep: 
	instructions:
		 0: RETURN %v_5[9.0,13.3,] %self[2.0,] 
BB 17
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = validate_attendance_enabled_for_checkin_destinations
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->attendance_required? def_%v_3 %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->attendance? def_%v_4 %self[2.0,] 
		 1: %v_4->! def_%v_5 %v_4[3.0,] 
		 2: COPY def_%v_3 %v_5[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.2,2.6,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: %self->errors def_%v_6 %self[2.0,] 
		 1: COPY def_%v_7 
		 2: %v_6->add def_%v_8 %v_6[5.0,] %v_7[5.1,] 
		 3: RETURN %v_8[5.2,] %self[5.0,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = attendance_required?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->group_times def_%v_3 %self[2.0,] 
		 7: %v_3->any? def_%v_4 %v_3[2.6,] 
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = inspect
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: COPY def_%v_3 
		 7: %self->name def_%v_4 %self[2.0,] 
		 8: COPY def_%v_5 
		 9: def_%v_6 %v_3[2.6,] %v_4[2.7,] %v_5[2.8,] 
		 10: RETURN %v_6[2.9,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = admin?
BB 1
	outgoing: 13 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_person 
		 6: def_exclude_global_admins 
		 7: exclude_global_admins[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY def_exclude_global_admins 
BB 4
	outgoing: 5 11 
	datadep: 
	instructions:
		 0: 
		 1: BRANCH person[2.5,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: BRANCH exclude_global_admins[3.0,2.6,] 
BB 6
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->admins def_%v_3 %self[2.0,] 
		 2: %v_3->include? def_%v_4 %v_3[6.1,] person[2.5,] 
		 3: 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: person->admin? def_%v_5 person[2.5,] 
		 2: BRANCH %v_5[7.1,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: %self->admins def_%v_6 %self[2.0,] 
		 1: %v_6->include? def_%v_7 %v_6[8.0,] person[2.5,] 
		 2: COPY def_%v_5 %v_7[8.1,] 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY def_%v_4 %v_5[8.2,7.1,] 
BB 10
	outgoing: 13 
	datadep: 
	instructions:
		 0: RETURN %v_4[9.0,6.2,] %self[2.0,] 
BB 11
	outgoing: 13 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 13
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = linked?
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->membership_mode def_%v_3 %self[2.0,] 
		 7: COPY def_%v_4 
		 8: %v_3->== def_%v_5 %v_3[2.6,] %v_4[2.7,] 
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->link_code def_%v_6 %self[2.0,] 
		 1: %v_6->present? def_%v_7 %v_6[3.0,] 
		 2: RETURN %v_7[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_5[2.8,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = parents_of?
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->membership_mode def_%v_3 %self[2.0,] 
		 7: COPY def_%v_4 
		 8: %v_3->== def_%v_5 %v_3[2.6,] %v_4[2.7,] 
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->parents_of def_%v_6 %self[2.0,] 
		 1: RETURN %v_6[3.0,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_5[2.8,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = country
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: (Setting) def_%v_3 
		 7: %v_3->get def_%v_4 %v_3[2.6,] 
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = mapable?
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->latitude def_%v_3 %self[2.0,] 
		 7: %v_3->to_f def_%v_4 %v_3[2.6,] 
		 8: def_%v_5 %v_4[2.7,] 
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->longitude def_%v_6 %self[2.0,] 
		 1: %v_6->to_f def_%v_7 %v_6[3.0,] 
		 2: def_%v_8 %v_7[3.1,] 
		 3: RETURN %v_8[3.2,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_5[2.8,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_options_for
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_person 
		 6: 
		 7: %self->memberships def_%v_3 %self[2.0,] 
		 8: person->id def_%v_4 person[2.5,] 
		 9: COPY def_%v_5 %v_4[2.8,] 
		 10: %v_3->where def_%v_6 %v_3[2.7,] %v_5[2.9,] 
		 11: %v_6->first def_%v_7 %v_6[2.10,] 
		 12: RETURN %v_7[2.11,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_options_for
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_person 
		 6: RECEIVEARG def_options 
		 7: 
		 8: %self->memberships def_%v_3 %self[2.0,] 
		 9: person->id def_%v_4 person[2.5,] 
		 10: COPY def_%v_5 %v_4[2.9,] 
		 11: %v_3->where def_%v_6 %v_3[2.8,] %v_5[2.10,] 
		 12: %v_6->first def_%v_7 %v_6[2.11,] 
		 13: %v_7->update_attributes! def_%v_8 %v_7[2.12,] options[2.6,] 
		 14: RETURN %v_8[2.13,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_memberships
BB 1
	outgoing: 17 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->dont_update_memberships def_%v_3 %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 17 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY def_%v_4 
		 1: 
		 2: %self->membership_mode def_%v_5 %self[2.0,] 
		 3: COPY def_%v_6 
		 4: %v_5->== def_%v_7 %v_5[4.2,] %v_6[4.3,] 
		 5: BRANCH %v_7[4.4,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: (Person) def_%v_8 
		 1: %v_8->undeleted def_%v_9 %v_8[6.0,] 
		 2: %v_9->adults def_%v_10 %v_9[6.1,] 
		 3: %v_10->count def_%v_11 %v_10[6.2,] 
		 4: (EVERYONE_LIMIT) def_%v_12 
		 5: def_%v_13 %v_11[6.3,] %v_12[6.4,] 
		 6: COPY def_%v_7 %v_13[6.5,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: BRANCH %v_7[6.6,4.4,] 
BB 8
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
		 1: (Person) def_%v_14 
		 2: %v_14->undeleted def_%v_15 %v_14[8.1,] 
		 3: %v_15->adults def_%v_16 %v_15[8.2,] 
		 4: %v_16->to_a def_%v_17 %v_16[8.3,] 
		 5: %self->update_membership_associations def_%v_18 %self[2.0,] %v_17[8.4,] 
		 6: RETURN %v_18[8.5,] %self[8.5,2.0,] 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: 
		 1: %self->parents_of? def_%v_19 %self[2.0,] 
		 2: BRANCH %v_19[9.1,] 
BB 10
	outgoing: 15 
	datadep: 
	instructions:
		 0: 
		 1: (Group) def_%v_20 
		 2: %self->parents_of def_%v_21 %self[2.0,] 
		 3: %v_20->find def_%v_22 %v_20[10.1,] %v_21[10.2,] 
		 4: %v_22->people def_%v_23 %v_22[10.3,] 
		 5: %v_23->map def_%v_24 %v_23[10.4,] 
		 6: %v_24->flatten def_%v_25 %v_24[10.5,] 
		 7: %v_25->uniq def_%v_26 %v_25[10.6,] 
		 8: COPY def_parents %v_26[10.7,] 
		 9: 
		 10: %self->update_membership_associations def_%v_27 %self[10.2,2.0,] %v_26[10.7,] 
		 11: 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: 
		 1: %self->linked? def_%v_28 %self[2.0,] 
		 2: BRANCH %v_28[11.1,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: 
		 1: %self->update_linked_memberships def_%v_29 %self[2.0,] 
		 2: 
BB 13
	outgoing: 14 
	datadep: 
	instructions:
		 0: 
		 1: %self->memberships def_%v_30 %self[2.0,] 
		 2: COPY def_%v_31 
		 3: %v_30->where def_%v_32 %v_30[13.1,] %v_31[13.2,] 
		 4: %v_32->destroy_all def_%v_33 %v_32[13.3,] 
		 5: COPY def_%v_29 %v_33[13.4,] 
BB 14
	outgoing: 15 
	datadep: 
	instructions:
		 0: COPY def_%v_27 %v_29[13.5,12.1,] 
BB 15
	outgoing: 17 
	datadep: 
	instructions:
		 0: RETURN %v_27[14.0,10.10,] %self[2.0,] 
BB 17
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_linked_memberships
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: COPY def_%v_3 
		 7: COPY def_q %v_3[2.6,] 
		 8: 
		 9: COPY def_%v_4 
		 10: COPY def_p %v_4[2.9,] 
		 11: 
		 12: %self->link_code def_%v_5 %self[2.0,] 
		 13: %v_5->downcase def_%v_6 %v_5[2.12,] 
		 14: %v_6->split def_%v_7 %v_6[2.13,] 
		 15: %v_7->each def_%v_8 %v_7[2.14,] %self[2.0,2.12,] 
CLOSURE BEGIN: q[2.7,] code[] p[2.10,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_code 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY def_%cl_1_3 
		 2: def_%cl_1_4 q[] %cl_1_3[3.1,] 
		 3: 
		 4: 
		 5: COPY def_%cl_1_5 
		 6: def_%cl_1_6 code[2.2,] %cl_1_5[3.5,] 
		 7: COPY def_%cl_1_7 
		 8: def_%cl_1_8 %cl_1_7[3.7,] code[2.2,] 
		 9: COPY def_%cl_1_9 
		 10: COPY def_%cl_1_10 
		 11: def_%cl_1_11 %cl_1_9[3.9,] code[2.2,] %cl_1_10[3.10,] 
		 12: 
		 13: COPY def_%cl_1_12 
		 14: def_%cl_1_13 code[2.2,] %cl_1_12[3.13,] 
		 15: COPY def_%cl_1_14 
		 16: COPY def_%cl_1_15 
		 17: def_%cl_1_16 %cl_1_14[3.15,] code[2.2,] %cl_1_15[3.16,] 
		 18: COPY def_%cl_1_17 code[2.2,] %cl_1_6[3.6,] %cl_1_8[3.8,] %cl_1_11[3.11,] %cl_1_13[3.14,] %cl_1_16[3.17,] 
		 19: def_%cl_1_18 p[] %cl_1_17[3.18,] 
		 20: COPY def_p %cl_1_18[3.19,] 
		 21: RETURN %cl_1_18[3.19,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_19 
		 1: def_%cl_1_20 %cl_1_19[4.0,] 
		 2: RETURN %cl_1_20[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 16: 
		 17: (Person) def_%v_9 
		 18: COPY def_%v_10 
		 19: q->join def_%v_11 q[2.7,] %v_10[2.18,] 
		 20: COPY def_%v_12 %v_11[2.19,] 
		 21: def_%v_13 %v_12[2.20,] p[2.10,] 
		 22: %v_9->where def_%v_14 %v_9[2.17,] %v_13[2.21,] 
		 23: COPY def_scope %v_14[2.22,] 
		 24: 
		 25: %v_14->to_a def_%v_15 %v_14[2.22,] 
		 26: %self->update_membership_associations def_%v_16 %self[2.0,2.12,] %v_15[2.25,] 
		 27: RETURN %v_16[2.26,] %self[2.0,2.12,2.26,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_membership_associations
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_new_people 
		 6: 
		 7: new_people->reject! def_%v_3 new_people[2.5,] %self[2.0,] 
CLOSURE BEGIN: p[] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_p 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: p->! def_%cl_1_3 p[2.2,] 
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: p->deleted? def_%cl_1_4 p[2.2,] 
		 1: RETURN %cl_1_4[4.0,] %self[2.0,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[6.0,] 
		 2: RETURN %cl_1_6[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 8: 
		 9: %self->people def_%v_4 %self[2.0,] 
		 10: %v_4->reload def_%v_5 %v_4[2.9,] 
		 11: 
		 12: %self->memberships def_%v_6 %self[2.0,2.9,] 
		 13: %self->people def_%v_7 %self[2.0,2.9,2.12,] 
		 14: def_%v_8 new_people[2.5,2.7,] %v_7[2.13,] 
		 15: %v_8->map def_%v_9 %v_8[2.14,] 
		 16: COPY def_%v_10 %v_9[2.15,] 
		 17: %v_6->where def_%v_11 %v_6[2.12,] %v_10[2.16,] 
		 18: %v_11->includes def_%v_12 %v_11[2.17,] 
		 19: %v_12->each def_%v_13 %v_12[2.18,] %self[2.0,2.9,2.12,2.13,] 
CLOSURE BEGIN: membership[] %self[2.0,2.9,2.12,2.13,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_membership 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: membership->person def_%cl_2_3 membership[2.2,] 
		 2: %self->get_roles_for def_%cl_2_4 %self[2.0,] %cl_2_3[3.1,] 
		 3: ATTRASSIGN membership->roles %cl_2_4[3.2,] 
		 4: 
		 5: membership->save! def_%cl_2_5 membership[3.1,3.3,2.2,] 
		 6: RETURN %cl_2_5[3.5,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_6 
		 1: def_%cl_2_7 %cl_2_6[4.0,] 
		 2: RETURN %cl_2_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 20: 
		 21: %self->people def_%v_14 %self[2.0,2.9,2.12,2.13,] 
		 22: def_%v_15 new_people[2.5,2.7,] %v_14[2.21,] 
		 23: %v_15->each def_%v_16 %v_15[2.22,] %self[2.0,2.9,2.12,2.13,2.21,] 
CLOSURE BEGIN: %self[2.0,2.9,2.12,2.13,2.21,] person[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_person 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->memberships def_%cl_3_3 %self[2.0,] 
		 2: %self->get_roles_for def_%cl_3_4 %self[3.1,2.0,] person[2.2,] 
		 3: COPY def_%cl_3_5 person[2.2,] %cl_3_4[3.2,] 
		 4: %cl_3_3->create! def_%cl_3_6 %cl_3_3[3.1,] %cl_3_5[3.3,] 
		 5: RETURN %cl_3_6[3.4,] %self[3.1,3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_7 
		 1: def_%cl_3_8 %cl_3_7[4.0,] 
		 2: RETURN %cl_3_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 24: 
		 25: %self->memberships def_%v_17 %self[2.0,2.9,2.12,2.13,2.21,] 
		 26: 
		 27: %self->people def_%v_18 %self[2.0,2.9,2.12,2.13,2.21,2.25,] 
		 28: def_%v_19 %v_18[2.27,] new_people[2.5,2.7,] 
		 29: %v_19->map def_%v_20 %v_19[2.28,] 
		 30: COPY def_%v_21 %v_20[2.29,] 
		 31: %v_17->where def_%v_22 %v_17[2.25,] %v_21[2.30,] 
		 32: %v_22->delete_all def_%v_23 %v_22[2.31,] 
		 33: RETURN %v_23[2.32,] %self[2.0,2.9,2.12,2.13,2.21,2.25,2.27,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_roles_for
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_person 
		 6: 
		 7: %self->link_code def_%v_3 %self[2.0,] 
		 8: %v_3->present? def_%v_4 %v_3[2.7,] 
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY def_%v_5 
		 1: 
		 2: person->classes def_%v_7 person[2.5,] 
		 3: %v_7->to_s def_%v_8 %v_7[3.2,] 
		 4: COPY def_%v_9 
		 5: %v_8->split def_%v_10 %v_8[3.3,] 
		 6: COPY def_classes %v_10[3.5,] 
		 7: 
		 8: %v_10->detect def_%v_11 %v_10[3.5,] %self[2.0,] 
CLOSURE BEGIN: c[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_c 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: c->downcase def_%cl_1_3 c[2.2,] 
		 2: %self->link_code def_%cl_1_4 %self[2.0,] 
		 3: %cl_1_4->downcase def_%cl_1_5 %cl_1_4[3.2,] 
		 4: %cl_1_3->index def_%cl_1_6 %cl_1_3[3.1,] %cl_1_5[3.3,] 
		 5: %cl_1_6->== def_%cl_1_7 %cl_1_6[3.4,] 
		 6: RETURN %cl_1_7[3.5,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[4.0,] 
		 2: RETURN %cl_1_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 9: COPY def_data %v_11[3.8,] 
		 10: BRANCH %v_11[3.8,] 
BB 4
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY def_%v_6 
		 1: RETURN %v_6[4.0,] %self[2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY def_%v_12 
		 1: data->match def_%v_13 data[3.9,] 
		 2: COPY def_%v_11 %v_13[6.1,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: BRANCH %v_11[6.2,3.8,] 
BB 8
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: COPY def_%v_14 
		 2: COPY def_%v_15 
		 3: COPY def_%v_16 
		 4: %v_14->gsub def_%v_17 %v_14[8.1,] %v_16[8.3,] 
		 5: COPY def_%v_18 
		 6: %v_17->split def_%v_19 %v_17[8.4,] 
		 7: RETURN %v_19[8.6,] %self[2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: COPY def_%v_20 
		 2: RETURN %v_20[9.1,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = can_send?
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_person 
		 6: 
		 7: %self->email? def_%v_3 %self[2.0,] 
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->members_send? def_%v_4 %self[2.0,] 
		 1: COPY def_%v_3 %v_4[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: person->member_of? def_%v_5 person[2.5,] %self[2.0,] 
		 1: COPY def_%v_3 %v_5[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: BRANCH %v_3[5.1,3.1,2.7,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: person->messages_enabled? def_%v_6 person[2.5,] 
		 1: COPY def_%v_3 %v_6[7.0,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: BRANCH %v_3[7.1,5.1,3.1,2.7,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: %self->admin? def_%v_7 %self[2.0,] person[2.5,] 
		 1: RETURN %v_7[9.0,] %self[9.0,2.0,] 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %v_3[7.1,5.1,3.1,2.7,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = can_share?
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 14 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_person 
		 6: 
		 7: person->member_of? def_%v_3 person[2.5,] %self[2.0,] 
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: %self->email? def_%v_4 %self[2.0,] 
		 3: BRANCH %v_4[3.2,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->can_post? def_%v_5 %self[2.0,] person[2.5,] 
		 1: COPY def_%v_4 %v_5[4.0,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %v_4[4.1,3.2,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->blog? def_%v_6 %self[2.0,] 
		 1: COPY def_%v_4 %v_6[6.0,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: BRANCH %v_4[6.1,4.1,3.2,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: %self->pictures? def_%v_7 %self[2.0,] 
		 1: COPY def_%v_4 %v_7[8.0,] 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: BRANCH %v_4[8.1,6.1,4.1,3.2,] 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: %self->prayer? def_%v_8 %self[2.0,] 
		 1: COPY def_%v_4 %v_8[10.0,] 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: BRANCH %v_4[10.1,8.1,6.1,4.1,3.2,] 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: %self->has_tasks? def_%v_9 %self[2.0,] 
		 1: COPY def_%v_4 %v_9[12.0,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %v_4[12.1,10.1,8.1,6.1,4.1,3.2,] %self[2.0,] 
BB 14
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.7,] %self[2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = full_address
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->address def_%v_3 %self[2.0,] 
		 7: %v_3->present? def_%v_4 %v_3[2.6,] 
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->address def_%v_5 %self[2.0,] 
		 1: COPY def_%v_6 
		 2: def_%v_7 %v_5[3.0,] %v_6[3.1,] 
		 3: (Site) def_%v_8 
		 4: %v_8->current def_%v_9 %v_8[3.3,] 
		 5: %v_9->email_host def_%v_10 %v_9[3.4,] 
		 6: def_%v_11 %v_7[3.2,] %v_10[3.5,] 
		 7: RETURN %v_11[3.6,] %self[3.0,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_people_attendance_records_for_date
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_date 
		 6: 
		 7: COPY def_%v_3 
		 8: COPY def_records %v_3[2.7,] 
		 9: 
		 10: %self->people def_%v_4 %self[2.0,] 
		 11: %v_4->each def_%v_5 %v_4[2.10,] %self[2.0,2.10,] 
CLOSURE BEGIN: p[] records[2.8,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_p 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: p->id def_%cl_1_3 p[2.2,] 
		 2: COPY def_%cl_1_4 p[3.1,2.2,] 
		 3: ATTRASSIGN records->[] %cl_1_3[3.1,] %cl_1_4[3.2,] 
		 4: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 12: 
		 13: (String) def_%v_6 
		 14: date->is_a? def_%v_7 date[2.5,] %v_6[2.13,] 
		 15: BRANCH %v_7[2.14,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: (Date) def_%v_8 
		 1: %v_8->parse def_%v_9 %v_8[3.0,] date[2.5,] 
		 2: COPY def_date %v_9[3.1,] 
		 3: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY def_%v_9 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->attendance_records_for_date def_%v_10 %self[2.0,] date[3.2,2.5,] 
		 2: %v_10->each def_%v_11 %v_10[5.1,] %self[5.1,2.0,] 
CLOSURE BEGIN: record[] records[2.8,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_record 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: record->person def_%cl_2_3 record[2.2,] 
		 2: %cl_2_3->id def_%cl_2_4 %cl_2_3[3.1,] 
		 3: record->person def_%cl_2_5 record[3.1,2.2,] 
		 4: COPY def_%cl_2_6 %cl_2_5[3.3,] record[3.1,3.3,2.2,] 
		 5: ATTRASSIGN records->[] %cl_2_4[3.2,] %cl_2_6[3.4,] 
		 6: RETURN %cl_2_6[3.4,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_7 
		 1: def_%cl_2_8 %cl_2_7[4.0,] 
		 2: RETURN %cl_2_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 3: 
		 4: records->values def_%v_12 records[2.8,] 
		 5: %v_12->sort_by def_%v_13 %v_12[5.4,] %self[5.1,2.0,] 
CLOSURE BEGIN: r[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_r 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_3_3 r[2.2,] 
		 2: %cl_3_3->last_name def_%cl_3_4 %cl_3_3[3.1,] 
		 3: def_%cl_3_5 r[2.2,] 
		 4: %cl_3_5->first_name def_%cl_3_6 %cl_3_5[3.3,] 
		 5: COPY def_%cl_3_7 %cl_3_4[3.2,] %cl_3_6[3.4,] 
		 6: RETURN %cl_3_7[3.5,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_8 
		 1: def_%cl_3_9 %cl_3_8[4.0,] 
		 2: RETURN %cl_3_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 6: RETURN %v_13[5.5,] %self[5.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = attendance_records_for_date
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_date 
		 6: 
		 7: %self->attendance_records def_%v_3 %self[2.0,] 
		 8: COPY def_%v_4 
		 9: COPY def_%v_5 
		 10: date->strftime def_%v_6 date[2.5,] %v_5[2.9,] 
		 11: COPY def_%v_7 
		 12: date->strftime def_%v_8 date[2.5,2.10,] %v_7[2.11,] 
		 13: %v_3->where def_%v_9 %v_3[2.7,] %v_4[2.8,] %v_6[2.10,] %v_8[2.12,] 
		 14: RETURN %v_9[2.13,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = attendance_dates
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->attendance_records def_%v_3 %self[2.0,] 
		 7: COPY def_%v_4 
		 8: %self->id def_%v_5 %self[2.0,2.6,] 
		 9: COPY def_%v_6 
		 10: (Site) def_%v_7 
		 11: %v_7->current def_%v_8 %v_7[2.10,] 
		 12: %v_8->id def_%v_9 %v_8[2.11,] 
		 13: COPY def_%v_10 
		 14: def_%v_11 %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] %v_9[2.12,] %v_10[2.13,] 
		 15: %v_3->find_by_sql def_%v_12 %v_3[2.6,] %v_11[2.14,] 
		 16: %v_12->map def_%v_13 %v_12[2.15,] %self[2.0,2.6,2.8,] 
CLOSURE BEGIN: r[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_r 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: r->attended_at def_%cl_1_3 r[2.2,] 
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 17: RETURN %v_13[2.16,] %self[2.0,2.6,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = gcal_url
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->gcal_private_link def_%v_3 %self[2.0,] 
		 7: %v_3->present? def_%v_4 %v_3[2.6,] 
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->gcal_token def_%v_5 %self[2.0,] 
		 2: COPY def_token %v_5[3.1,] 
		 3: BRANCH %v_5[3.1,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY def_%v_6 
		 2: COPY def_%v_7 
		 3: %self->gcal_account def_%v_8 %self[2.0,] 
		 4: COPY def_%v_9 
		 5: (Time) def_%v_10 
		 6: %v_10->zone def_%v_11 %v_10[4.5,] 
		 7: %v_11->tzinfo def_%v_12 %v_11[4.6,] 
		 8: %v_12->name def_%v_13 %v_12[4.7,] 
		 9: def_%v_14 %v_6[4.1,] token[3.2,] %v_7[4.2,] %v_8[4.3,] %v_9[4.4,] %v_13[4.8,] 
		 10: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY def_%v_14 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %v_14[5.0,4.9,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = gcal_account
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->gcal_private_link def_%v_3 %self[2.0,] 
		 7: %v_3->to_s def_%v_4 %v_3[2.6,] 
		 8: COPY def_%v_5 
		 9: %v_4->match def_%v_6 %v_4[2.7,] 
		 10: %v_6->to_s def_%v_7 %v_6[2.9,] 
		 11: COPY def_%v_8 
		 12: COPY def_%v_9 
		 13: %v_7->sub def_%v_10 %v_7[2.10,] %v_9[2.12,] 
		 14: RETURN %v_10[2.13,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = gcal_token
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: def_%v_3 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->gcal_private_link def_%v_6 %self[2.0,] 
		 2: %v_6->to_s def_%v_7 %v_6[4.1,] 
		 3: COPY def_%v_8 
		 4: %v_7->match def_%v_9 %v_7[4.2,] 
		 5: def_%v_10 %v_9[4.4,] 
		 6: COPY def_%v_5 %v_10[4.5,] 
		 7: 
		 8: %v_3[2.6,] 
BB 5
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 7 8 10 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_11 
		 2: def_%v_12 %v_11[6.1,] 
		 3: BRANCH %v_12[6.2,] 
BB 7
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: %v_11[6.1,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: COPY def_%v_13 
		 1: COPY def_%v_5 %v_13[8.0,] 
		 2: 
		 3: %v_3[2.6,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%v_14 
		 1: def_%v_15 %v_14[10.0,] %v_3[2.6,] 
		 2: %v_14[10.0,] 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %v_5[4.6,8.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = remove_parent_of_links
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: (Group) def_%v_3 
		 7: %self->id def_%v_4 %self[2.0,] 
		 8: COPY def_%v_5 %v_4[2.7,] 
		 9: %v_3->where def_%v_6 %v_3[2.6,] %v_5[2.8,] 
		 10: %v_6->each def_%v_7 %v_6[2.9,] %self[2.0,2.7,] 
CLOSURE BEGIN: g[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_g 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: g->update_attribute def_%cl_1_3 g[2.2,] 
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 11: RETURN %v_7[2.10,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = can_add_prayer_request?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_person 
		 6: 
		 7: %self->prayer_requests def_%v_3 %self[2.0,] 
		 8: %v_3->new def_%v_4 %v_3[2.7,] 
		 9: person->can_create? def_%v_5 person[2.5,] %v_4[2.8,] 
		 10: RETURN %v_5[2.9,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = can_add_task?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_person 
		 6: 
		 7: %self->tasks def_%v_3 %self[2.0,] 
		 8: %v_3->new def_%v_4 %v_3[2.7,] 
		 9: person->can_create? def_%v_5 person[2.5,] %v_4[2.8,] 
		 10: RETURN %v_5[2.9,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = can_add_album?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_person 
		 6: 
		 7: %self->albums def_%v_3 %self[2.0,] 
		 8: %v_3->new def_%v_4 %v_3[2.7,] 
		 9: person->can_create? def_%v_5 person[2.5,] %v_4[2.8,] 
		 10: RETURN %v_5[2.9,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_share_token
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: (SecureRandom) def_%v_3 
		 7: %v_3->hex def_%v_4 %v_3[2.6,] 
		 8: ATTRASSIGN %self->share_token %v_4[2.7,] 
		 9: RETURN %v_4[2.7,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_memberships
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->order def_%v_3 %self[2.0,] 
		 7: %v_3->each def_%v_4 %v_3[2.6,] 
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = categories
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: COPY def_%v_3 
		 7: %v_3->tap def_%v_4 %v_3[2.6,] %self[2.0,] 
CLOSURE BEGIN: %self[2.0,] results[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_cats 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: (Person) def_%cl_1_3 
		 2: %cl_1_3->logged_in def_%cl_1_4 %cl_1_3[3.1,] 
		 3: %cl_1_4->admin? def_%cl_1_5 %cl_1_4[3.2,] 
		 4: BRANCH %cl_1_5[3.3,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: (Group) def_%cl_1_6 
		 2: COPY def_%cl_1_7 
		 3: (Site) def_%cl_1_8 
		 4: %cl_1_8->current def_%cl_1_9 %cl_1_8[4.3,] 
		 5: %cl_1_9->id def_%cl_1_10 %cl_1_9[4.4,] 
		 6: COPY def_%cl_1_11 
		 7: def_%cl_1_12 %cl_1_7[4.2,] %cl_1_10[4.5,] %cl_1_11[4.6,] 
		 8: %cl_1_6->find_by_sql def_%cl_1_13 %cl_1_6[4.1,] %cl_1_12[4.7,] 
		 9: %cl_1_13->map def_%cl_1_14 %cl_1_13[4.8,] %self[2.0,] 
CLOSURE BEGIN: g[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_g 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: g->category def_%cl_2_3 g[2.2,] 
		 2: g->group_count def_%cl_2_4 g[3.1,2.2,] 
		 3: COPY def_%cl_2_5 %cl_2_3[3.1,] %cl_2_4[3.2,] 
		 4: RETURN %cl_2_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_6 
		 1: def_%cl_2_7 %cl_2_6[4.0,] 
		 2: RETURN %cl_2_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 10: COPY def_results %cl_1_14[4.9,] 
		 11: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: (Group) def_%cl_1_15 
		 2: COPY def_%cl_1_16 
		 3: (Site) def_%cl_1_17 
		 4: %cl_1_17->current def_%cl_1_18 %cl_1_17[5.3,] 
		 5: %cl_1_18->id def_%cl_1_19 %cl_1_18[5.4,] 
		 6: COPY def_%cl_1_20 
		 7: def_%cl_1_21 %cl_1_16[5.2,] %cl_1_19[5.5,] %cl_1_20[5.6,] 
		 8: COPY def_%cl_1_22 %cl_1_21[5.7,] 
		 9: %cl_1_15->find_by_sql def_%cl_1_23 %cl_1_15[5.1,] %cl_1_22[5.8,] 
		 10: %cl_1_23->map def_%cl_1_24 %cl_1_23[5.9,] %self[2.0,] 
CLOSURE BEGIN: g[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_g 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: g->category def_%cl_3_3 g[2.2,] 
		 2: g->group_count def_%cl_3_4 g[3.1,2.2,] 
		 3: COPY def_%cl_3_5 %cl_3_3[3.1,] %cl_3_4[3.2,] 
		 4: RETURN %cl_3_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_6 
		 1: def_%cl_3_7 %cl_3_6[4.0,] 
		 2: RETURN %cl_3_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 11: COPY def_results %cl_1_24[5.10,] 
		 12: COPY def_%cl_1_14 %cl_1_24[5.10,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: results->each def_%cl_1_25 results[5.11,4.10,] %self[2.0,] 
CLOSURE BEGIN: count[] cats[2.2,] cat[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_4_0 
		 2: RECEIVEARG def_cat 
		 3: RECEIVEARG def_count 
		 4: COPY def_%current_scope 
		 5: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: count->to_i def_%cl_4_3 count[2.3,] 
		 2: ATTRASSIGN cats->[] cat[2.2,] %cl_4_3[3.1,] 
		 3: RETURN %cl_4_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_4_4 
		 1: def_%cl_4_5 %cl_4_4[4.0,] 
		 2: RETURN %cl_4_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 2: RETURN %cl_1_25[6.1,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_26 
		 1: def_%cl_1_27 %cl_1_26[7.0,] 
		 2: RETURN %cl_1_27[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = category_names
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->categories def_%v_3 %self[2.0,] 
		 7: %v_3->keys def_%v_4 %v_3[2.6,] 
		 8: %v_4->sort def_%v_5 %v_4[2.7,] 
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_csv
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: (CSV) def_%v_3 
		 7: %v_3->generate def_%v_4 %v_3[2.6,] %self[2.0,] 
CLOSURE BEGIN: csv[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_csv 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (EXPORT_COLS) def_%cl_1_3 
		 2: def_%cl_1_4 %cl_1_3[3.1,] 
		 3: def_%cl_1_5 csv[2.2,] %cl_1_4[3.2,] 
		 4: 
		 5: (Group) def_%cl_1_6 
		 6: %cl_1_6->find_each def_%cl_1_7 %cl_1_6[3.5,] %self[2.0,] 
CLOSURE BEGIN: %self[2.0,] csv[2.2,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_group 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (EXPORT_COLS) def_%cl_2_3 
		 2: def_%cl_2_4 %cl_2_3[3.1,] 
		 3: %cl_2_4->map def_%cl_2_5 %cl_2_4[3.2,] %self[2.0,] 
CLOSURE BEGIN: group[2.2,] c[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_c 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: group->send def_%cl_3_3 group[] c[2.2,] 
		 2: RETURN %cl_3_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_4 
		 1: def_%cl_3_5 %cl_3_4[4.0,] 
		 2: RETURN %cl_3_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 4: def_%cl_2_6 csv[] %cl_2_5[3.3,] 
		 5: RETURN %cl_2_6[3.4,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_7 
		 1: def_%cl_2_8 %cl_2_7[4.0,] 
		 2: RETURN %cl_2_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 7: RETURN %cl_1_7[3.6,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[4.0,] 
		 2: RETURN %cl_1_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%v_5 
		 1: def_%v_6 %v_5[4.0,] 
		 2: RETURN %v_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_xml
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: (Builder) def_%v_3 
		 7: def_%v_4 %v_3[2.6,] 
		 8: %v_4[2.7,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: def_%v_4 %v_3[2.6,] 
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: %v_4->new def_%v_5 %v_4[4.0,2.7,] 
		 1: COPY def_builder %v_5[5.0,] 
		 2: 
		 3: %v_5->groups def_%v_6 %v_5[5.0,] %self[2.0,] 
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_groups 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (Group) def_%cl_1_3 
		 2: %cl_1_3->find_each def_%cl_1_4 %cl_1_3[3.1,] %self[2.0,] 
CLOSURE BEGIN: groups[2.2,] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_group 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: groups->group def_%cl_2_3 groups[] %self[2.0,] 
CLOSURE BEGIN: %self[2.0,] g[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_g 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (EXPORT_COLS) def_%cl_3_3 
		 2: def_%cl_3_4 %cl_3_3[3.1,] 
		 3: %cl_3_4->each def_%cl_3_5 %cl_3_4[3.2,] %self[2.0,] 
CLOSURE BEGIN: group[] col[] g[2.2,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_4_0 
		 2: RECEIVEARG def_col 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: group->send def_%cl_4_3 group[] col[2.2,] 
		 2: g->tag! def_%cl_4_4 g[] col[2.2,] %cl_4_3[3.1,] 
		 3: RETURN %cl_4_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_4_5 
		 1: def_%cl_4_6 %cl_4_5[4.0,] 
		 2: RETURN %cl_4_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 4: 
		 5: g->people def_%cl_3_6 g[2.2,] %self[2.0,] 
CLOSURE BEGIN: group[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_5_0 
		 2: RECEIVEARG def_people 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: group->people def_%cl_5_3 group[] 
		 2: %cl_5_3->each def_%cl_5_4 %cl_5_3[3.1,] %self[2.0,] 
CLOSURE BEGIN: people[2.2,] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_6_0 
		 2: RECEIVEARG def_person 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: people->person def_%cl_6_3 people[] %self[2.0,] 
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_7_0 
		 2: RECEIVEARG def_p 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (EXPORT_COLS) def_%cl_7_3 
		 2: def_%cl_7_4 %cl_7_3[3.1,] 
		 3: %cl_7_4->each def_%cl_7_5 %cl_7_4[3.2,] %self[2.0,] 
CLOSURE BEGIN: person[] col[] p[2.2,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_8_0 
		 2: RECEIVEARG def_col 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: person->send def_%cl_8_3 person[] col[2.2,] 
		 2: p->tag! def_%cl_8_4 p[] col[2.2,] %cl_8_3[3.1,] 
		 3: RETURN %cl_8_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_8_5 
		 1: def_%cl_8_6 %cl_8_5[4.0,] 
		 2: RETURN %cl_8_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 4: RETURN %cl_7_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_7_6 
		 1: def_%cl_7_7 %cl_7_6[4.0,] 
		 2: RETURN %cl_7_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 2: RETURN %cl_6_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_6_4 
		 1: def_%cl_6_5 %cl_6_4[4.0,] 
		 2: RETURN %cl_6_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 3: RETURN %cl_5_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_5_5 
		 1: def_%cl_5_6 %cl_5_5[4.0,] 
		 2: RETURN %cl_5_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 6: RETURN %cl_3_6[3.5,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_7 
		 1: def_%cl_3_8 %cl_3_7[4.0,] 
		 2: RETURN %cl_3_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 4: RETURN %v_6[5.3,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%v_7 
		 1: def_%v_8 %v_7[6.0,] 
		 2: RETURN %v_8[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

