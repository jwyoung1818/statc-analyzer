SET IRMethod, name = xml instanceMethod = true
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 10 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->[] def_%v_3 %self[2.0,] 	 SYMBOL:xml,	 ARGS:Symbol,
		 7: COPY TYPE_Regexp def_%v_4 
		 8: %v_3->=~ def_%v_5 %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_4,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: 
		 1: (Nokogiri) def_%v_6 
		 2: %self->[] def_%v_7 %self[2.0,] 	 SYMBOL:xml,	 ARGS:Symbol,
		 3: %v_6->XML def_%v_8 %v_6[3.1,] %v_7[3.2,] 	 SYMBOL:	 ARGS:%v_7,
		 4: COPY TYPE_PASS def_doc %v_8[3.3,] 
		 5: 
		 6: COPY TYPE_StringLiteral "file" def_%v_9 
		 7: %v_8->css def_%v_10 %v_8[3.3,] %v_9[3.6,] 	 SYMBOL:	 ARGS:%v_9,
		 8: %v_10->[] def_%v_11 %v_10[3.7,] 	 SYMBOL:	 ARGS:Fixnum,
		 9: COPY TYPE_StringLiteral "src" def_%v_12 
		 10: %v_11->[] def_%v_13 %v_11[3.8,] %v_12[3.9,] 	 SYMBOL:	 ARGS:%v_12,
		 11: COPY TYPE_PASS def_filename %v_13[3.10,] 
		 12: 
		 13: COPY TYPE_Regexp def_%v_14 
		 14: %v_13->match def_%v_15 %v_13[3.10,] 	 SYMBOL:	 ARGS:%v_14,
		 15: BRANCH %v_15[3.14,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: (InvalidCheckinLabelPath) def_%v_16 
		 1: COPY TYPE_StringLiteral "file unavailable" def_%v_17 
		 2: %v_16->new def_%v_18 %v_16[4.0,] %v_17[4.1,] 	 SYMBOL:	 ARGS:%v_17,
		 3: %self->raise def_%v_19 %self[2.0,] %v_18[4.2,] 	 SYMBOL:	 ARGS:%v_18,
		 4: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_19 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: (Rails) def_%v_20 
		 2: %v_20->root def_%v_21 %v_20[6.1,] 	 SYMBOL:	 ARGS:
		 3: COPY TYPE_StringLiteral "db/checkin/labels" def_%v_22 
		 4: %v_21->join def_%v_23 %v_21[6.2,] %v_22[6.3,] filename[3.11,] 	 SYMBOL:	 ARGS:%v_22,filename,
		 5: COPY TYPE_PASS def_path %v_23[6.4,] 
		 6: 
		 7: (File) def_%v_24 
		 8: %v_24->exist? def_%v_25 %v_24[6.7,] %v_23[6.4,] 	 SYMBOL:	 ARGS:path,
		 9: BRANCH %v_25[6.8,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_26 
		 1: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: (InvalidCheckinLabelPath) def_%v_27 
		 1: COPY TYPE_StringLiteral "file not found" def_%v_28 
		 2: %v_27->new def_%v_29 %v_27[8.0,] %v_28[8.1,] 	 SYMBOL:	 ARGS:%v_28,
		 3: %self->raise def_%v_30 %self[2.0,] %v_29[8.2,] 	 SYMBOL:	 ARGS:%v_29,
		 4: COPY TYPE_PASS def_%v_26 %v_30[8.3,] 
BB 9
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: (File) def_%v_31 
		 2: COPY TYPE_StringLiteral "utf-8" def_%v_32 
		 3: HASH-encoding- def_%v_33 %v_32[9.2,] 
		 4: %v_31->read def_%v_34 %v_31[9.1,] path[6.5,] %v_33[9.3,] 	 SYMBOL:	 ARGS:path,%v_33,
		 5: RETURN %v_34[9.4,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->[] def_%v_35 %self[2.0,] 	 SYMBOL:xml,	 ARGS:Symbol,
		 2: RETURN %v_35[10.1,] %self[10.1,2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = xml_file= instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_f 
		 6: 
		 7: f->read def_%v_3 f[2.5,] 	 SYMBOL:	 ARGS:
		 8: ATTRASSIGN %self->xml %v_3[2.7,] 
		 9: RETURN %v_3[2.7,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

