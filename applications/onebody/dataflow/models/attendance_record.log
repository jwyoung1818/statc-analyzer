SET IRMethod, name = attended_at=
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_date 
		 6: 
		 7: date->respond_to? def_%v_3 date[2.5,] 
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY def_%v_4 
		 2: date->strftime def_%v_5 date[2.5,] %v_4[3.1,] 
		 3: ATTRASSIGN %self->[] %v_5[3.2,] 
		 4: RETURN %v_5[3.2,] %self[3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->[] date[2.5,] 
		 2: RETURN date[2.5,] %self[4.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = checkin_people
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: (Relationship) def_%v_3 
		 7: COPY def_%v_4 
		 8: %self->person_id def_%v_5 %self[2.0,] 
		 9: COPY def_%v_6 
		 10: %v_3->where def_%v_7 %v_3[2.6,] %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] 
		 11: %v_7->map def_%v_8 %v_7[2.10,] 
		 12: %v_8->uniq def_%v_9 %v_8[2.11,] 
		 13: RETURN %v_9[2.12,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = all_pickup_people
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->checkin_people def_%v_3 %self[2.0,] 
		 7: %v_3->map def_%v_4 %v_3[2.6,] 
		 8: %self->can_pick_up def_%v_5 %self[2.0,2.6,] 
		 9: COPY def_%v_6 %v_5[2.8,] 
		 10: def_%v_7 %v_4[2.7,] %v_6[2.9,] 
		 11: RETURN %v_7[2.10,] %self[2.0,2.6,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = as_json
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: def_args 
		 6: 
		 7: def_%v_3 args[2.5,] %v_0[2.1,] 
		 8: %self->symbol def_%v_4 %self[2.0,] 
		 9: COPY def_%v_5 %v_4[2.8,] 
		 10: %v_3->merge def_%v_6 %v_3[2.7,] %v_5[2.9,] 
		 11: RETURN %v_6[2.10,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = symbol
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: COPY def_%v_3 
		 7: %v_3->tap def_%v_4 %v_3[2.6,] %self[2.0,] 
CLOSURE BEGIN: %self[2.0,] syms[] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_syms 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 5 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->medical_notes def_%cl_1_3 %self[2.0,] 
		 2: %cl_1_3->present? def_%cl_1_4 %cl_1_3[3.1,] 
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 6 10 
	datadep: 
	instructions:
		 0: COPY def_%cl_1_5 
		 1: def_%cl_1_6 syms[2.2,] %cl_1_5[4.0,] 
		 2: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY def_%cl_1_6 
BB 6
	outgoing: 7 8 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->cannot_pick_up def_%cl_1_7 %self[2.0,] 
		 2: %cl_1_7->present? def_%cl_1_8 %cl_1_7[6.1,] 
		 3: BRANCH %cl_1_8[6.2,] 
BB 7
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: COPY def_%cl_1_9 
		 1: def_%cl_1_10 syms[2.2,] %cl_1_9[7.0,] 
		 2: 
BB 8
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %cl_1_10[7.1,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_1_11 
		 1: def_%cl_1_12 %cl_1_11[10.0,] 
		 2: RETURN %cl_1_12[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = groups_for_date
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_attended_at 
		 6: 
		 7: (Group) def_%v_3 
		 8: COPY def_%v_4 
		 9: COPY def_%v_5 
		 10: attended_at->strftime def_%v_6 attended_at[2.5,] %v_5[2.9,] 
		 11: COPY def_%v_7 
		 12: attended_at->strftime def_%v_8 attended_at[2.5,2.10,] %v_7[2.11,] 
		 13: %v_3->where def_%v_9 %v_3[2.7,] %v_4[2.8,] %v_6[2.10,] %v_8[2.12,] 
		 14: COPY def_%v_10 
		 15: %v_9->order def_%v_11 %v_9[2.13,] %v_10[2.14,] 
		 16: RETURN %v_11[2.15,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_for_people_and_date
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_people_ids 
		 6: RECEIVEARG def_date 
		 7: 
		 8: COPY def_%v_3 
		 9: COPY def_%v_4 
		 10: date->strftime def_%v_5 date[2.6,] %v_4[2.9,] 
		 11: COPY def_%v_6 
		 12: date->strftime def_%v_7 date[2.6,2.10,] %v_6[2.11,] 
		 13: %self->where def_%v_8 %self[2.0,] %v_3[2.8,] people_ids[2.5,] %v_5[2.10,] %v_7[2.12,] 
		 14: RETURN %v_8[2.13,] %self[2.0,2.13,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = check_in
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_person_id 
		 6: RECEIVEARG def_times 
		 7: RECEIVEARG def_barcode_id 
		 8: 
		 9: person_id->to_s def_%v_3 person_id[2.5,] 
		 10: COPY def_%v_4 
		 11: def_%v_5 %v_3[2.9,] 
		 12: BRANCH %v_5[2.11,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: (Person) def_%v_6 
		 2: %v_6->find def_%v_7 %v_6[3.1,] person_id[2.5,] 
		 3: COPY def_person %v_7[3.2,] 
		 4: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: person_id->split def_%v_8 person_id[2.5,] 
		 2: def_%v_9 %v_8[4.1,] 
		 3: def_%v_10 %v_9[4.2,] 
		 4: def_%v_11 %v_9[4.2,] 
		 5: COPY def_first_name %v_10[4.3,] 
		 6: COPY def_last_name %v_11[4.4,] 
		 7: 
		 8: (OpenStruct) def_%v_12 
		 9: COPY def_%v_13 %v_10[4.3,] %v_11[4.4,] 
		 10: %v_12->new def_%v_14 %v_12[4.8,] %v_13[4.9,] 
		 11: COPY def_person %v_14[4.10,] 
		 12: COPY def_%v_7 %v_14[4.10,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: times->map def_%v_15 times[2.6,] %self[2.0,] 
CLOSURE BEGIN: checkin_time_id[] person[4.11,3.3,] attended_at[] %self[2.0,] group_time_hash[] group_time[] barcode_id[2.7,] 
BB 1
	outgoing: 16 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_checkin_time_id 
		 3: RECEIVEARG def_group_time_hash 
		 4: COPY def_%current_scope 
		 5: COPY def_%current_module 
BB 3
	outgoing: 4 5 14 
	datadep: 
	instructions:
		 0: 
		 1: (CheckinTime) def_%cl_1_3 
		 2: %cl_1_3->find def_%cl_1_4 %cl_1_3[3.1,] checkin_time_id[2.2,] 
		 3: COPY def_checkin_time %cl_1_4[3.2,] 
		 4: 
		 5: %cl_1_4->to_time def_%cl_1_5 %cl_1_4[3.2,] 
		 6: COPY def_attended_at %cl_1_5[3.5,] 
		 7: 
		 8: person->id def_%cl_1_6 person[] 
		 9: BRANCH %cl_1_6[3.8,] 
BB 4
	outgoing: 6 14 
	datadep: 
	instructions:
		 0: 
		 1: person->id def_%cl_1_7 person[] 
		 2: COPY def_%cl_1_8 
		 3: attended_at->strftime def_%cl_1_9 attended_at[3.6,] %cl_1_8[4.2,] 
		 4: COPY def_%cl_1_10 %cl_1_7[4.1,] %cl_1_9[4.3,] 
		 5: %self->where def_%cl_1_11 %self[2.0,] %cl_1_10[4.4,] 
		 6: %cl_1_11->delete_all def_%cl_1_12 %cl_1_11[4.5,] 
		 7: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY def_%cl_1_12 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: COPY def_%cl_1_13 group_time_hash[2.3,] 
		 2: BRANCH group_time_hash[2.3,] 
BB 7
	outgoing: 8 14 
	datadep: 
	instructions:
		 0: COPY def_%cl_1_14 
		 1: def_%cl_1_15 group_time_hash[2.3,] %cl_1_14[7.0,] 
		 2: COPY def_%cl_1_13 %cl_1_15[7.1,] 
BB 8
	outgoing: 9 12 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_13[7.2,6.1,] 
BB 9
	outgoing: 10 11 14 
	datadep: 
	instructions:
		 0: 
		 1: (GroupTime) def_%cl_1_16 
		 2: COPY def_%cl_1_17 
		 3: def_%cl_1_18 group_time_hash[2.3,] %cl_1_17[9.2,] 
		 4: %cl_1_16->find def_%cl_1_19 %cl_1_16[9.1,] %cl_1_18[9.3,] 
		 5: COPY def_group_time %cl_1_19[9.4,] 
		 6: 
		 7: %cl_1_19->group def_%cl_1_20 %cl_1_19[9.4,] 
		 8: %cl_1_20->attendance_records def_%cl_1_21 %cl_1_20[9.7,] 
		 9: person->id def_%cl_1_22 person[] 
		 10: person->first_name def_%cl_1_23 person[9.9,] 
		 11: person->last_name def_%cl_1_24 person[9.9,9.10,] 
		 12: person->family def_%cl_1_25 person[9.9,9.10,9.11,] 
		 13: %cl_1_25->try def_%cl_1_26 %cl_1_25[9.12,] 
		 14: person->age_group def_%cl_1_27 person[9.9,9.10,9.11,9.12,] 
		 15: person->can_pick_up def_%cl_1_28 person[9.9,9.10,9.11,9.12,9.14,] 
		 16: person->cannot_pick_up def_%cl_1_29 person[9.9,9.10,9.11,9.12,9.14,9.15,] 
		 17: person->medical_notes def_%cl_1_30 person[9.9,9.10,9.11,9.12,9.14,9.15,9.16,] 
		 18: group_time->checkin_time_id def_%cl_1_31 group_time[9.5,] 
		 19: BRANCH %cl_1_31[9.18,] 
BB 10
	outgoing: 11 14 
	datadep: 
	instructions:
		 0: group_time->checkin_folder def_%cl_1_32 group_time[9.5,] 
		 1: %cl_1_32->try def_%cl_1_33 %cl_1_32[10.0,] 
		 2: COPY def_%cl_1_31 %cl_1_33[10.1,] 
BB 11
	outgoing: 13 14 
	datadep: 
	instructions:
		 0: group_time->label_id def_%cl_1_34 group_time[9.5,] 
		 1: group_time->print_extra_nametag? def_%cl_1_35 group_time[11.0,9.5,] 
		 2: COPY def_%cl_1_36 %cl_1_22[9.9,] attended_at[3.6,] %cl_1_23[9.10,] %cl_1_24[9.11,] %cl_1_26[9.13,] %cl_1_27[9.14,] %cl_1_28[9.15,] %cl_1_29[9.16,] %cl_1_30[9.17,] %cl_1_31[10.2,9.18,] %cl_1_34[11.0,] %cl_1_35[11.1,] barcode_id[] 
		 3: %cl_1_21->create! def_%cl_1_37 %cl_1_21[9.8,] %cl_1_36[11.2,] 
		 4: 
BB 12
	outgoing: 16 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 13
	outgoing: 16 
	datadep: 
	instructions:
		 0: RETURN %cl_1_37[11.3,] %self[2.0,] 
BB 14
	outgoing: 16 
	datadep: 
	instructions:
		 0: def_%cl_1_38 
		 1: def_%cl_1_39 %cl_1_38[14.0,] 
		 2: RETURN %cl_1_39[14.1,] %self[2.0,] 
BB 16
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 2: RETURN %v_15[5.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = labels_for
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_records 
		 6: 
		 7: COPY def_%v_3 
		 8: %v_3->tap def_%v_4 %v_3[2.7,] %self[2.0,] 
CLOSURE BEGIN: records[2.5,] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_labels 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: records->compact def_%cl_1_3 records[] 
		 2: %cl_1_3->each def_%cl_1_4 %cl_1_3[3.1,] %self[2.0,] 
CLOSURE BEGIN: record[] labels[2.2,] json[] 
BB 1
	outgoing: 16 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_record 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 5 14 
	datadep: 
	instructions:
		 0: 
		 1: record->checkin_label def_%cl_2_3 record[2.2,] 
		 2: BRANCH %cl_2_3[3.1,] 
BB 4
	outgoing: 5 14 
	datadep: 
	instructions:
		 0: labels->empty? def_%cl_2_4 labels[] 
		 1: COPY def_%cl_2_3 %cl_2_4[4.0,] 
BB 5
	outgoing: 6 12 
	datadep: 
	instructions:
		 0: BRANCH %cl_2_3[4.1,3.1,] 
BB 6
	outgoing: 7 8 14 
	datadep: 
	instructions:
		 0: 
		 1: record->as_json def_%cl_2_5 record[2.2,] 
		 2: record->label_id def_%cl_2_6 record[6.1,2.2,] 
		 3: COPY def_%cl_2_7 %cl_2_6[6.2,] 
		 4: %cl_2_5->merge def_%cl_2_8 %cl_2_5[6.1,] %cl_2_7[6.3,] 
		 5: COPY def_json %cl_2_8[6.4,] 
		 6: 
		 7: def_%cl_2_9 labels[] %cl_2_8[6.4,] 
		 8: 
		 9: record->print_extra_nametag? def_%cl_2_10 record[6.1,6.2,2.2,] 
		 10: BRANCH %cl_2_10[6.9,] 
BB 7
	outgoing: 8 14 
	datadep: 
	instructions:
		 0: labels->length def_%cl_2_11 labels[] 
		 1: def_%cl_2_12 %cl_2_11[7.0,] 
		 2: COPY def_%cl_2_10 %cl_2_12[7.1,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: BRANCH %cl_2_10[7.2,6.9,] 
BB 9
	outgoing: 11 14 
	datadep: 
	instructions:
		 0: def_%cl_2_13 labels[] json[6.5,] 
		 1: 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY def_%cl_2_13 
BB 11
	outgoing: 16 
	datadep: 
	instructions:
		 0: RETURN %cl_2_13[10.0,9.0,] %self[2.0,] 
BB 12
	outgoing: 16 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 14
	outgoing: 16 
	datadep: 
	instructions:
		 0: def_%cl_2_14 
		 1: def_%cl_2_15 %cl_2_14[14.0,] 
		 2: RETURN %cl_2_15[14.1,] %self[2.0,] 
BB 16
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

