SET IRMethod, name = attended_at=
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: date->respond_to? date[2.5,] 
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 2 2 
	instructions:
		 0: 
		 1: 
		 2: date->strftime %v_4[3.1,] date[2.5,] 
		 3: %self[2.0,] %v_5[3.2,] 
		 4: RETURN %v_5[3.2,] 
BB 4
	outgoing: 6 
	datadep: 2 2 2 
	instructions:
		 0: 
		 1: %self[2.0,] date[2.5,] 
		 2: RETURN date[2.5,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = checkin_people
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: (Relationship) 
		 7: 
		 8: %self->person_id %self[2.0,] 
		 9: 
		 10: %v_3->where %v_4[2.7,] %v_5[2.8,] %v_3[2.6,] %v_6[2.9,] 
		 11: %v_7->map %v_7[2.10,] 
		 12: %v_8->uniq %v_8[2.11,] 
		 13: RETURN %v_9[2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = all_pickup_people
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: %self->checkin_people %self[2.0,] 
		 7: %v_3->map %v_3[2.6,] 
		 8: %self->can_pick_up %self[2.0,] 
		 9: %v_5[2.8,] 
		 10: %v_4[2.7,] %v_6[2.9,] 
		 11: RETURN %v_7[2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = as_json
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: %v_0[2.1,] args[2.5,] 
		 8: %self->symbol %self[2.0,] 
		 9: %v_4[2.8,] 
		 10: %v_3->merge %v_5[2.9,] %v_3[2.7,] 
		 11: RETURN %v_6[2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = symbol
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: %v_3->tap %self[2.0,] %v_3[2.6,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
BB 3
	outgoing: 4 5 10 
	datadep: 2 
	instructions:
		 0: 
		 1: %self->medical_notes %self[2.0,] 
		 2: %cl_1_3->present? %cl_1_3[3.1,] 
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 6 10 
	datadep: 2 
	instructions:
		 0: 
		 1: %cl_1_5[4.0,] syms[2.2,] 
		 2: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 7 8 10 
	datadep: 2 
	instructions:
		 0: 
		 1: %self->cannot_pick_up %self[2.0,] 
		 2: %cl_1_7->present? %cl_1_7[6.1,] 
		 3: BRANCH %cl_1_8[6.2,] 
BB 7
	outgoing: 9 10 
	datadep: 2 
	instructions:
		 0: 
		 1: syms[2.2,] %cl_1_9[7.0,] 
		 2: 
BB 8
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN 
BB 9
	outgoing: 12 
	datadep: 7 
	instructions:
		 0: RETURN %cl_1_10[7.1,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: %cl_1_11[10.0,] 
		 2: RETURN %cl_1_12[10.1,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 8: RETURN %v_4[2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = groups_for_date
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: (Group) 
		 8: 
		 9: 
		 10: attended_at->strftime attended_at[2.5,] %v_5[2.9,] 
		 11: 
		 12: attended_at->strftime attended_at[2.5,] %v_7[2.11,] 
		 13: %v_3->where %v_4[2.8,] %v_3[2.7,] %v_8[2.12,] %v_6[2.10,] 
		 14: 
		 15: %v_9->order %v_9[2.13,] %v_10[2.14,] 
		 16: RETURN %v_11[2.15,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_for_people_and_date
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: 
		 8: 
		 9: 
		 10: date->strftime date[2.6,] %v_4[2.9,] 
		 11: 
		 12: date->strftime date[2.6,] %v_6[2.11,] 
		 13: %self->where %self[2.0,] %v_5[2.10,] %v_3[2.8,] %v_7[2.12,] people_ids[2.5,] 
		 14: RETURN %v_8[2.13,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = check_in
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: 
		 8: 
		 9: person_id->to_s person_id[2.5,] 
		 10: 
		 11: %v_3[2.9,] 
		 12: BRANCH %v_5[2.11,] 
BB 3
	outgoing: 5 
	datadep: 2 
	instructions:
		 0: 
		 1: (Person) 
		 2: %v_6->find person_id[2.5,] %v_6[3.1,] 
		 3: %v_7[3.2,] 
		 4: 
BB 4
	outgoing: 5 
	datadep: 2 
	instructions:
		 0: 
		 1: person_id->split person_id[2.5,] 
		 2: %v_8[4.1,] 
		 3: %v_9[4.2,] 
		 4: %v_9[4.2,] 
		 5: %v_10[4.3,] 
		 6: %v_11[4.4,] 
		 7: 
		 8: (OpenStruct) 
		 9: %v_10[4.3,] %v_11[4.4,] 
		 10: %v_12->new %v_13[4.9,] %v_12[4.8,] 
		 11: %v_14[4.10,] 
		 12: %v_14[4.10,] 
BB 5
	outgoing: 6 
	datadep: 2 2 
	instructions:
		 0: 
		 1: times->map times[2.6,] %self[2.0,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 16 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
BB 3
	outgoing: 4 5 14 
	datadep: 2 
	instructions:
		 0: 
		 1: (CheckinTime) 
		 2: %cl_1_3->find %cl_1_3[3.1,] checkin_time_id[2.2,] 
		 3: %cl_1_4[3.2,] 
		 4: 
		 5: %cl_1_4->to_time %cl_1_4[3.2,] 
		 6: %cl_1_5[3.5,] 
		 7: 
		 8: person->id 
		 9: BRANCH %cl_1_6[3.8,] 
BB 4
	outgoing: 6 14 
	datadep: 3 2 
	instructions:
		 0: 
		 1: person->id 
		 2: 
		 3: attended_at->strftime attended_at[3.6,] %cl_1_8[4.2,] 
		 4: %cl_1_7[4.1,] %cl_1_9[4.3,] 
		 5: %self->where %self[2.0,] %cl_1_10[4.4,] 
		 6: %cl_1_11->delete_all %cl_1_11[4.5,] 
		 7: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
BB 6
	outgoing: 7 8 
	datadep: 2 2 
	instructions:
		 0: 
		 1: group_time_hash[2.3,] 
		 2: BRANCH group_time_hash[2.3,] 
BB 7
	outgoing: 8 14 
	datadep: 2 
	instructions:
		 0: 
		 1: %cl_1_14[7.0,] group_time_hash[2.3,] 
		 2: %cl_1_15[7.1,] 
BB 8
	outgoing: 9 12 
	datadep: 7 6 
	instructions:
		 0: BRANCH %cl_1_13[7.2,6.1,] 
BB 9
	outgoing: 10 11 14 
	datadep: 2 
	instructions:
		 0: 
		 1: (GroupTime) 
		 2: 
		 3: %cl_1_17[9.2,] group_time_hash[2.3,] 
		 4: %cl_1_16->find %cl_1_18[9.3,] %cl_1_16[9.1,] 
		 5: %cl_1_19[9.4,] 
		 6: 
		 7: %cl_1_19->group %cl_1_19[9.4,] 
		 8: %cl_1_20->attendance_records %cl_1_20[9.7,] 
		 9: person->id 
		 10: person->first_name 
		 11: person->last_name 
		 12: person->family 
		 13: %cl_1_25->try %cl_1_25[9.12,] 
		 14: person->age_group 
		 15: person->can_pick_up 
		 16: person->cannot_pick_up 
		 17: person->medical_notes 
		 18: group_time->checkin_time_id group_time[9.5,] 
		 19: BRANCH %cl_1_31[9.18,] 
BB 10
	outgoing: 11 14 
	datadep: 9 
	instructions:
		 0: group_time->checkin_folder group_time[9.5,] 
		 1: %cl_1_32->try %cl_1_32[10.0,] 
		 2: %cl_1_33[10.1,] 
BB 11
	outgoing: 13 14 
	datadep: 9 9 9 9 9 9 9 9 3 9 9 10 9 9 
	instructions:
		 0: group_time->label_id group_time[9.5,] 
		 1: group_time->print_extra_nametag? group_time[9.5,] 
		 2: %cl_1_26[9.13,] %cl_1_23[9.10,] %cl_1_34[11.0,] %cl_1_24[9.11,] %cl_1_35[11.1,] %cl_1_29[9.16,] %cl_1_27[9.14,] %cl_1_28[9.15,] attended_at[3.6,] %cl_1_22[9.9,] %cl_1_30[9.17,] %cl_1_31[10.2,9.18,] 
		 3: %cl_1_21->create! %cl_1_36[11.2,] %cl_1_21[9.8,] 
		 4: 
BB 12
	outgoing: 16 
	datadep: 
	instructions:
		 0: RETURN 
BB 13
	outgoing: 16 
	datadep: 11 
	instructions:
		 0: RETURN %cl_1_37[11.3,] 
BB 14
	outgoing: 16 
	datadep: 
	instructions:
		 0: 
		 1: %cl_1_38[14.0,] 
		 2: RETURN %cl_1_39[14.1,] 
BB 16
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 2: RETURN %v_15[5.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = labels_for
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
		 5: 
		 6: 
		 7: 
		 8: %v_3->tap %self[2.0,] %v_3[2.7,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
BB 3
	outgoing: 4 6 
	datadep: 2 
	instructions:
		 0: 
		 1: records->compact 
		 2: %cl_1_3->each %cl_1_3[3.1,] %self[2.0,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 16 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
		 3: 
		 4: 
BB 3
	outgoing: 4 5 14 
	datadep: 2 
	instructions:
		 0: 
		 1: record->checkin_label record[2.2,] 
		 2: BRANCH %cl_2_3[3.1,] 
BB 4
	outgoing: 5 14 
	datadep: 
	instructions:
		 0: labels->empty? 
		 1: %cl_2_4[4.0,] 
BB 5
	outgoing: 6 12 
	datadep: 4 3 
	instructions:
		 0: BRANCH %cl_2_3[4.1,3.1,] 
BB 6
	outgoing: 7 8 14 
	datadep: 2 2 2 
	instructions:
		 0: 
		 1: record->as_json record[2.2,] 
		 2: record->label_id record[2.2,] 
		 3: %cl_2_6[6.2,] 
		 4: %cl_2_5->merge %cl_2_5[6.1,] %cl_2_7[6.3,] 
		 5: %cl_2_8[6.4,] 
		 6: 
		 7: %cl_2_8[6.4,] 
		 8: 
		 9: record->print_extra_nametag? record[2.2,] 
		 10: BRANCH %cl_2_10[6.9,] 
BB 7
	outgoing: 8 14 
	datadep: 
	instructions:
		 0: labels->length 
		 1: %cl_2_11[7.0,] 
		 2: %cl_2_12[7.1,] 
BB 8
	outgoing: 9 10 
	datadep: 7 6 
	instructions:
		 0: BRANCH %cl_2_10[7.2,6.9,] 
BB 9
	outgoing: 11 14 
	datadep: 6 
	instructions:
		 0: json[6.5,] 
		 1: 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
BB 11
	outgoing: 16 
	datadep: 10 9 
	instructions:
		 0: RETURN %cl_2_13[10.0,9.0,] 
BB 12
	outgoing: 16 
	datadep: 
	instructions:
		 0: RETURN 
BB 14
	outgoing: 16 
	datadep: 
	instructions:
		 0: 
		 1: %cl_2_14[14.0,] 
		 2: RETURN %cl_2_15[14.1,] 
BB 16
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 3: RETURN %cl_1_4[3.2,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 9: RETURN %v_4[2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

