SET IRMethod, name = initialize
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_params 
		 6: 
		 7: ATTRASSIGN %self->params params[2.5,] 
		 8: RETURN params[2.5,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = params
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->filter_params def_%v_3 %self[2.0,] %self[2.0,] 	 ARGS:%self,
CLOSURE BEGIN: val[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def__ 
		 3: RECEIVEARG def_val 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
		 6: 
		 7: RETURN val[2.3,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = params=
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_p 
		 6: 
		 7: p->delete def_%v_3 p[2.5,] 	 ARGS:Symbol,
		 8: ATTRASSIGN %self->id %v_3[2.7,] 
		 9: 
		 10: ATTRASSIGN %self->changes 
		 11: ATTRASSIGN %self->person 
		 12: 
		 13: (ActionController) def_%v_4 
		 14: (inherit Parameters) def_%v_5 %v_4[2.13,] 
		 15: %v_5[2.14,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_4->const_missing def_%v_5 %v_4[2.13,] 	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_5->new def_%v_6 %v_5[3.0,2.14,] p[2.5,] 	 ARGS:p,
		 1: ATTRASSIGN %self->params %v_6[4.0,] 
		 2: RETURN %v_6[4.0,] %self[4.1,2.0,2.8,2.10,2.11,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = changes
BB 1
	outgoing: 13 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->changes def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 12 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: (HashWithIndifferentAccess) def_%v_6 
		 2: %v_6->new def_%v_7 %v_6[5.1,] 	 ARGS:
		 3: COPY TYPE_PASS def_h %v_7[5.2,] 
		 4: 
		 5: %self->person def_%v_8 %self[2.0,] 	 ARGS:
		 6: BRANCH %v_8[5.5,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: (Comparator) def_%v_9 
		 1: %self->person def_%v_10 %self[2.0,] 	 ARGS:
		 2: %self->params def_%v_11 %self[6.1,2.0,] 	 ARGS:
		 3: %v_11->[] def_%v_12 %v_11[6.2,] 	 ARGS:Symbol,
		 4: %v_9->new def_%v_13 %v_9[6.0,] %v_10[6.1,] %v_12[6.3,] 	 ARGS:%v_10,%v_12,
		 5: %v_13->changes def_%v_14 %v_13[6.4,] 	 ARGS:
		 6: ATTRASSIGN h->[] %v_14[6.5,] 
		 7: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_14 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->family def_%v_15 %self[2.0,] 	 ARGS:
		 2: BRANCH %v_15[8.1,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: (Comparator) def_%v_16 
		 1: %self->family def_%v_17 %self[2.0,] 	 ARGS:
		 2: %self->params def_%v_18 %self[9.1,2.0,] 	 ARGS:
		 3: %v_18->[] def_%v_19 %v_18[9.2,] 	 ARGS:Symbol,
		 4: %v_16->new def_%v_20 %v_16[9.0,] %v_17[9.1,] %v_19[9.3,] 	 ARGS:%v_17,%v_19,
		 5: %v_20->changes def_%v_21 %v_20[9.4,] 	 ARGS:
		 6: ATTRASSIGN h->[] %v_21[9.5,] 
		 7: 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_21 
BB 11
	outgoing: 13 
	datadep: 
	instructions:
		 0: 
		 1: h->reject def_%v_22 h[9.6,6.6,5.3,] %self[2.0,] 	 ARGS:h,
CLOSURE BEGIN: v[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def__ 
		 3: RECEIVEARG def_v 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: v->empty? def_%cl_1_3 v[2.3,] 	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 2: ATTRASSIGN %self->changes %v_22[11.1,] 
		 3: RETURN %v_22[11.1,] %self[11.2,2.0,] 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 13
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = save!
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->changes def_%v_3 %self[2.0,] 	 ARGS:
		 7: 
		 8: %self->approval_params def_%v_4 %self[2.0,2.6,] 	 ARGS:
		 9: %v_4->any? def_%v_5 %v_4[2.8,] 	 ARGS:
		 10: BRANCH %v_5[2.9,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->person def_%v_6 %self[2.0,] 	 ARGS:
		 1: %v_6->updates def_%v_7 %v_6[3.0,] 	 ARGS:
		 2: %self->family def_%v_8 %self[3.0,2.0,] 	 ARGS:
		 3: %v_8->id def_%v_9 %v_8[3.2,] 	 ARGS:
		 4: %self->approval_params def_%v_10 %self[3.0,3.2,2.0,] 	 ARGS:
		 5: HASH-family_id-data- def_%v_11 %v_9[3.3,] %v_10[3.4,] 
		 6: %v_7->create! def_%v_12 %v_7[3.1,] %v_11[3.5,] 	 ARGS:%v_11,
		 7: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_12 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->person def_%v_13 %self[2.0,] 	 ARGS:
		 2: %self->person_params def_%v_14 %self[5.1,2.0,] 	 ARGS:
		 3: %v_13->update_attributes def_%v_15 %v_13[5.1,] %v_14[5.2,] 	 ARGS:%v_14,
		 4: BRANCH %v_15[5.3,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->family def_%v_16 %self[2.0,] 	 ARGS:
		 1: %self->family_params def_%v_17 %self[6.0,2.0,] 	 ARGS:
		 2: %v_16->update_attributes def_%v_18 %v_16[6.0,] %v_17[6.1,] 	 ARGS:%v_17,
		 3: COPY TYPE_PASS def_%v_15 %v_18[6.2,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_success %v_15[6.3,5.3,] 
		 1: 
		 2: BRANCH %v_15[6.3,5.3,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_19 
		 1: 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->family def_%v_20 %self[2.0,] 	 ARGS:
		 2: %v_20->errors def_%v_21 %v_20[9.1,] 	 ARGS:
		 3: %v_21->values def_%v_22 %v_21[9.2,] 	 ARGS:
		 4: %v_22->each def_%v_23 %v_22[9.3,] %self[9.1,2.0,] 	 ARGS:%v_22,
CLOSURE BEGIN: %self[9.1,2.0,] m[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_m 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->person def_%cl_1_3 %self[2.0,] 	 ARGS:
		 2: %cl_1_3->errors def_%cl_1_4 %cl_1_3[3.1,] 	 ARGS:
		 3: %cl_1_4->add def_%cl_1_5 %cl_1_4[3.2,] m[2.2,] 	 ARGS:Symbol,m,
		 4: RETURN %cl_1_5[3.3,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 5: COPY TYPE_PASS def_%v_19 %v_23[9.4,] 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: RETURN success[7.0,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = person
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->person def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: (Person) def_%v_6 
		 1: GETFIELD %self->id def_%v_7 %self[2.0,] 
		 2: %v_6->find def_%v_8 %v_6[5.0,] %v_7[5.1,] 	 ARGS:%v_7,
		 3: ATTRASSIGN %self->person %v_8[5.2,] 
		 4: RETURN %v_8[5.2,] %self[5.3,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = family
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->family def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->person def_%v_6 %self[2.0,] 	 ARGS:
		 1: %v_6->family def_%v_7 %v_6[5.0,] 	 ARGS:
		 2: ATTRASSIGN %self->family %v_7[5.1,] 
		 3: RETURN %v_7[5.1,] %self[5.0,5.2,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = show_verification_link?
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->changes def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->[] def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: %v_4->try def_%v_5 %v_4[2.7,] 	 ARGS:Symbol,Symbol,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->person def_%v_6 %self[2.0,] 	 ARGS:
		 1: %v_6->able_to_sign_in? def_%v_7 %v_6[3.0,] 	 ARGS:
		 2: RETURN %v_7[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_5[2.8,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = immediate_params
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->filter_params def_%v_3 %self[2.0,] %self[2.0,] 	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] access[] val[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_access 
		 3: RECEIVEARG def__ 
		 4: RECEIVEARG def_val 
		 5: COPY TYPE_CurrentScope def_%current_scope 
		 6: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->immediate_access_types def_%cl_1_3 %self[2.0,] 	 ARGS:
		 2: %cl_1_3->include? def_%cl_1_4 %cl_1_3[3.1,] access[2.2,] 	 ARGS:access,
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%cl_1_5 val[2.4,] 
		 1: RETURN %cl_1_5[4.0,] %self[2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[7.0,] 
		 2: RETURN %cl_1_7[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = approval_params
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->filter_params def_%v_3 %self[2.0,] %self[2.0,] 	 ARGS:%self,
CLOSURE BEGIN: access[] %self[2.0,] section[] key[] val[] 
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_access 
		 3: RECEIVEARG def_section 
		 4: RECEIVEARG def_key 
		 5: RECEIVEARG def_val 
		 6: COPY TYPE_CurrentScope def_%current_scope 
		 7: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 13 
	datadep: 
	instructions:
		 0: 
		 1: access->== def_%cl_1_3 access[2.2,] 	 ARGS:access,
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 5 13 
	datadep: 
	instructions:
		 0: %self->changes def_%cl_1_4 %self[2.0,] 	 ARGS:
		 1: %cl_1_4->[] def_%cl_1_5 %cl_1_4[4.0,] section[2.3,] 	 ARGS:section,
		 2: %cl_1_5->try def_%cl_1_6 %cl_1_5[4.1,] key[2.4,] 	 ARGS:Symbol,key,
		 3: COPY TYPE_PASS def_%cl_1_3 %cl_1_6[4.2,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_3[4.3,3.1,] 
BB 6
	outgoing: 7 13 
	datadep: 
	instructions:
		 0: %self->approvals_enabled? def_%cl_1_7 %self[2.0,] 	 ARGS:
		 1: COPY TYPE_PASS def_%cl_1_3 %cl_1_7[6.0,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_3[6.1,4.3,3.1,] 
BB 8
	outgoing: 9 13 
	datadep: 
	instructions:
		 0: 
		 1: %self->admin? def_%cl_1_8 %self[2.0,] 	 ARGS:
		 2: %cl_1_8->! def_%cl_1_9 %cl_1_8[8.1,] 	 ARGS:
		 3: COPY TYPE_PASS def_%cl_1_3 %cl_1_9[8.2,] 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_3[8.3,6.1,4.3,3.1,] 
BB 10
	outgoing: 15 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_PASS def_%cl_1_10 val[2.5,] 
		 2: RETURN val[2.5,] %self[2.0,] 
BB 11
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: def_%cl_1_11 
		 1: def_%cl_1_12 %cl_1_11[13.0,] 
		 2: RETURN %cl_1_12[13.1,] %self[2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = filter_params
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_section 
		 6: section[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_section 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: def_unfiltered 
		 1: unfiltered[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: GETFIELD %self->params def_%v_3 %self[2.0,] 
		 1: COPY TYPE_PASS def_unfiltered %v_3[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: def_spec 
		 1: spec[6.0,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: (PARAMS) def_%v_4 
		 1: COPY TYPE_PASS def_spec %v_4[7.0,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: def_%v_5 
		 1: def_block %v_5[8.0,] 
		 2: 
		 3: (ActionController) def_%v_6 
		 4: (inherit Parameters) def_%v_7 %v_6[8.3,] 
		 5: %v_7[8.4,] 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: %v_6->const_missing def_%v_7 %v_6[8.3,] 	 ARGS:Symbol,
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: %v_7->new def_%v_8 %v_7[9.0,8.4,] 	 ARGS:
		 1: %v_8->tap def_%v_9 %v_8[10.0,] %self[2.0,] 	 ARGS:%v_8,
CLOSURE BEGIN: unfiltered[5.1,4.0,] %self[2.0,] permitted[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_permitted 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: unfiltered->each def_%cl_1_3 unfiltered[] %self[2.0,] 	 ARGS:unfiltered,
CLOSURE BEGIN: %self[2.0,] spec[] key[] access[] val[] block[] permitted[2.2,] section[] 
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_key 
		 3: RECEIVEARG def_val 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 11 13 
	datadep: 
	instructions:
		 0: 
		 1: %self->find_spec def_%cl_2_3 %self[2.0,] spec[] key[2.2,] 	 ARGS:spec,key,
		 2: COPY TYPE_PASS def_access %cl_2_3[3.1,] 
		 3: BRANCH %cl_2_3[3.1,] 
BB 4
	outgoing: 5 6 13 
	datadep: 
	instructions:
		 0: 
		 1: (Hash) def_%cl_2_4 
		 2: %cl_2_4->=== def_%cl_2_5 %cl_2_4[4.1,] access[3.2,] 	 ARGS:access,
		 3: BRANCH %cl_2_5[4.2,] 
BB 5
	outgoing: 10 13 
	datadep: 
	instructions:
		 0: 
		 1: %self->filter_params def_%cl_2_6 %self[2.0,] key[2.2,] val[2.3,] access[3.2,] block[] 	 ARGS:key,val,access,
		 2: ATTRASSIGN permitted->[] key[2.2,] %cl_2_6[5.1,] 
		 3: 
		 4: permitted->[] def_%cl_2_7 permitted[5.2,] key[2.2,] 	 ARGS:key,
		 5: %cl_2_7->permit! def_%cl_2_8 %cl_2_7[5.4,] 	 ARGS:
		 6: 
BB 6
	outgoing: 7 8 13 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%cl_2_10 access[3.2,] section[] key[2.2,] val[2.3,] 
		 2: def_%cl_2_9 %cl_2_0[2.1,] %cl_2_10[6.1,] 
		 3: COPY TYPE_PASS def_val %cl_2_9[6.2,] 
		 4: BRANCH %cl_2_9[6.2,] 
BB 7
	outgoing: 9 13 
	datadep: 
	instructions:
		 0: 
		 1: %self->cleanse_value def_%cl_2_11 %self[2.0,] val[6.3,] 	 ARGS:val,
		 2: COPY TYPE_PASS def_val %cl_2_11[7.1,] 
		 3: 
		 4: ATTRASSIGN permitted->[] key[2.2,] %cl_2_11[7.1,] 
		 5: COPY TYPE_PASS def_%cl_2_12 val[7.2,] 
		 6: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_2_12 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%cl_2_8 %cl_2_12[8.0,7.5,] 
BB 10
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %cl_2_8[9.0,5.5,] %self[2.0,] 
BB 11
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: def_%cl_2_13 
		 1: def_%cl_2_14 %cl_2_13[13.0,] 
		 2: RETURN %cl_2_14[13.1,] %self[2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 2: 
		 3: permitted->permit! def_%cl_1_4 permitted[2.2,] 	 ARGS:
		 4: 
		 5: permitted->reject! def_%cl_1_5 permitted[3.3,2.2,] %self[2.0,] 	 ARGS:permitted,
CLOSURE BEGIN: v[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def__ 
		 3: RECEIVEARG def_v 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: HASH- def_%cl_3_3 
		 2: v->== def_%cl_3_4 v[2.3,] %cl_3_3[3.1,] 	 ARGS:%cl_3_3,
		 3: RETURN %cl_3_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_5 
		 1: def_%cl_3_6 %cl_3_5[4.0,] 
		 2: RETURN %cl_3_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 6: RETURN %cl_1_5[3.5,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 2: RETURN %v_9[10.1,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = cleanse_value
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_value 
		 6: 
		 7: (String) def_%v_3 
		 8: value->is_a? def_%v_4 value[2.5,] %v_3[2.7,] 	 ARGS:%v_3,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: value->strip def_%v_5 value[2.5,] 	 ARGS:
		 1: COPY TYPE_PASS def_value %v_5[3.0,] 
		 2: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: value->present? def_%v_6 value[3.1,2.5,] 	 ARGS:
		 2: BRANCH %v_6[5.1,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_7 value[3.1,2.5,] 
		 1: RETURN %v_7[6.0,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_spec
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_spec 
		 6: RECEIVEARG def_key 
		 7: 
		 8: key->to_s def_%v_3 key[2.6,] 	 ARGS:
		 9: COPY TYPE_StringLiteral def_%v_4 
		 10: %v_3->split def_%v_5 %v_3[2.8,] %v_4[2.9,] 	 ARGS:%v_4,
		 11: %v_5->first def_%v_6 %v_5[2.10,] 	 ARGS:
		 12: COPY TYPE_StringLiteral def_%v_7 
		 13: %v_6->+ def_%v_8 %v_6[2.11,] %v_7[2.12,] 	 ARGS:%v_7,
		 14: COPY TYPE_PASS def_wildcard %v_8[2.13,] 
		 15: 
		 16: key->to_sym def_%v_9 key[2.6,2.8,] 	 ARGS:
		 17: spec->[] def_%v_10 spec[2.5,] %v_9[2.16,] 	 ARGS:%v_9,
		 18: BRANCH %v_10[2.17,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: wildcard->to_sym def_%v_11 wildcard[2.14,] 	 ARGS:
		 1: spec->[] def_%v_12 spec[2.5,] %v_11[3.0,] 	 ARGS:%v_11,
		 2: RETURN %v_12[3.1,] %self[2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_10[2.17,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = immediate_access_types
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: %v_3->tap def_%v_4 %v_3[2.6,] %self[2.0,] 	 ARGS:%v_3,
CLOSURE BEGIN: %self[2.0,] base[] 
BB 1
	outgoing: 14 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_base 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->admin? def_%cl_1_3 %self[2.0,] 	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 5 12 
	datadep: 
	instructions:
		 0: %self->approvals_enabled? def_%cl_1_4 %self[2.0,] 	 ARGS:
		 1: %cl_1_4->! def_%cl_1_5 %cl_1_4[4.0,] 	 ARGS:
		 2: COPY TYPE_PASS def_%cl_1_3 %cl_1_5[4.1,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_3[4.2,3.1,] 
BB 6
	outgoing: 8 12 
	datadep: 
	instructions:
		 0: base-><< def_%cl_1_6 base[2.2,] 	 ARGS:Symbol,
		 1: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_6 
BB 8
	outgoing: 9 10 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->admin? def_%cl_1_7 %self[2.0,] 	 ARGS:
		 2: BRANCH %cl_1_7[8.1,] 
BB 9
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: base-><< def_%cl_1_8 base[2.2,] 	 ARGS:Symbol,
		 1: 
BB 10
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 11
	outgoing: 14 
	datadep: 
	instructions:
		 0: RETURN %cl_1_8[9.0,] %self[2.0,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[12.0,] 
		 2: RETURN %cl_1_10[12.1,] %self[2.0,] 
BB 14
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = person_params
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->immediate_params def_%v_3 %self[2.0,] 	 ARGS:
		 7: HASH- def_%v_4 
		 8: %v_3->fetch def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:Symbol,%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = family_params
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->immediate_params def_%v_3 %self[2.0,] 	 ARGS:
		 7: HASH- def_%v_4 
		 8: %v_3->fetch def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:Symbol,%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = admin?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Person) def_%v_3 
		 7: %v_3->logged_in def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->admin? def_%v_5 %v_4[2.7,] 	 ARGS:Symbol,
		 9: RETURN %v_5[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = approvals_enabled?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Setting) def_%v_3 
		 7: %v_3->get def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,Symbol,
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

