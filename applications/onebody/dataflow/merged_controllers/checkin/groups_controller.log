SET IRMethod, name = index instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: Line Number 2
		 6: HASH- def_%v_3 
		 7: ATTRASSIGN %self->groups %v_3[2.6,] 
		 8: Line Number 3
		 9: %self->params def_%v_4 %self[2.0,2.7,] 	 SYMBOL:	 ARGS:
		 10: %v_4->[] def_%v_5 %v_4[2.9,] 	 SYMBOL:date,	 ARGS:Symbol,
		 11: BRANCH %v_5[2.10,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: (Date) def_%v_6 
		 1: %self->params def_%v_7 %self[2.0,2.7,] 	 SYMBOL:	 ARGS:
		 2: %v_7->[] def_%v_8 %v_7[3.1,] 	 SYMBOL:date,	 ARGS:Symbol,
		 3: %v_6->parse def_%v_9 %v_6[3.0,] %v_8[3.2,] 	 SYMBOL:	 ARGS:%v_8,
		 4: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: (Date) def_%v_10 
		 1: %v_10->current def_%v_11 %v_10[4.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_9 %v_11[4.1,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_date %v_9[4.2,3.3,] 
		 1: Line Number 4
		 2: (CheckinTime) def_%v_12 
		 3: %self->params def_%v_13 %self[2.0,2.7,] 	 SYMBOL:	 ARGS:
		 4: %v_13->[] def_%v_14 %v_13[5.3,] 	 SYMBOL:campus,	 ARGS:Symbol,
		 5: %v_12->for_date def_%v_15 %v_12[5.2,] date[5.0,] %v_14[5.4,] 	 SYMBOL:	 ARGS:date,%v_14,
		 6: %v_15->each def_%v_16 %v_15[5.5,] %self[5.3,2.0,2.7,] 	 SYMBOL:	 ARGS:%v_15,
CLOSURE BEGIN: %self[5.3,2.0,2.7,] time[] gt[] g[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_time 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: Line Number 5
		 1: GETFIELD %self->groups def_%cl_1_3 %self[2.0,] 
		 2: time->time_to_s def_%cl_1_4 time[2.2,] 	 SYMBOL:	 ARGS:
		 3: time->all_group_times def_%cl_1_5 time[3.2,2.2,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_StringLiteral "group_times.sequence" def_%cl_1_6 
		 5: %cl_1_5->order def_%cl_1_7 %cl_1_5[3.3,] %cl_1_6[3.4,] 	 SYMBOL:	 ARGS:%cl_1_6,
		 6: %cl_1_7->includes def_%cl_1_8 %cl_1_7[3.5,] 	 SYMBOL:group,checkin_folder,	 ARGS:Symbol,Symbol,
		 7: %cl_1_8->references def_%cl_1_9 %cl_1_8[3.6,] 	 SYMBOL:groups,checkin_folders,	 ARGS:Symbol,Symbol,
		 8: COPY TYPE_StringLiteral "group_times.label_id, checkin_folders.name, groups.*" def_%cl_1_10 
		 9: %cl_1_9->select def_%cl_1_11 %cl_1_9[3.7,] %cl_1_10[3.8,] 	 SYMBOL:	 ARGS:%cl_1_10,
		 10: %cl_1_11->map def_%cl_1_12 %cl_1_11[3.9,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_1_11,
CLOSURE BEGIN: gt[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_gt 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: Line Number 9
		 1: gt->group_id def_%cl_2_3 gt[2.2,] 	 SYMBOL:	 ARGS:
		 2: gt->group def_%cl_2_4 gt[3.1,2.2,] 	 SYMBOL:	 ARGS:
		 3: %cl_2_4->name def_%cl_2_5 %cl_2_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: gt->label_id def_%cl_2_6 gt[3.1,3.2,2.2,] 	 SYMBOL:	 ARGS:
		 5: %cl_2_6->! def_%cl_2_7 %cl_2_6[3.4,] 	 SYMBOL:	 ARGS:
		 6: %cl_2_7->! def_%cl_2_8 %cl_2_7[3.5,] 	 SYMBOL:	 ARGS:
		 7: gt->group def_%cl_2_9 gt[3.1,3.2,3.4,2.2,] 	 SYMBOL:	 ARGS:
		 8: %cl_2_9->link_code def_%cl_2_10 %cl_2_9[3.7,] 	 SYMBOL:	 ARGS:
		 9: gt->checkin_folder def_%cl_2_11 gt[3.1,3.2,3.4,3.7,2.2,] 	 SYMBOL:	 ARGS:
		 10: %cl_2_11->try def_%cl_2_12 %cl_2_11[3.9,] 	 SYMBOL:name,	 ARGS:Symbol,
		 11: COPY TYPE_Array def_%cl_2_13 %cl_2_3[3.1,] %cl_2_5[3.3,] %cl_2_8[3.6,] %cl_2_10[3.8,] %cl_2_12[3.10,] 
		 12: RETURN %cl_2_13[3.11,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_14 
		 1: def_%cl_2_15 %cl_2_14[4.0,] 
		 2: RETURN %cl_2_15[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: %cl_1_12->group_by def_%cl_1_13 %cl_1_12[3.10,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_1_12,
CLOSURE BEGIN: g[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_g 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: Line Number 10
		 1: g->[] def_%cl_3_3 g[2.2,] 	 SYMBOL:	 ARGS:Fixnum,
		 2: %cl_3_3->to_s def_%cl_3_4 %cl_3_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: RETURN %cl_3_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_5 
		 1: def_%cl_3_6 %cl_3_5[4.0,] 
		 2: RETURN %cl_3_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 12: ATTRASSIGN %cl_1_3->[] %cl_1_4[3.2,] %cl_1_13[3.11,] 
		 13: RETURN %cl_1_13[3.11,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_14 
		 1: def_%cl_1_15 %cl_1_14[4.0,] 
		 2: RETURN %cl_1_15[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: Line Number 12
		 8: %self->respond_to def_%v_17 %self[5.3,2.0,2.7,] %self[5.3,2.0,2.7,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: format[] %self[5.3,2.0,2.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_4_0 
		 2: RECEIVEARG def_format 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: Line Number 13
		 1: format->json def_%cl_4_3 format[2.2,] %self[2.0,] 	 SYMBOL:	 ARGS:format,
CLOSURE BEGIN: %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_5_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: Line Number 14
		 1: COPY TYPE_StringLiteral "groups" def_%cl_5_3 
		 2: GETFIELD %self->groups def_%cl_5_4 %self[2.0,] 
		 3: COPY TYPE_StringLiteral "updated_at" def_%cl_5_5 
		 4: (GroupTime) def_%cl_5_6 
		 5: COPY TYPE_StringLiteral "updated_at" def_%cl_5_7 
		 6: %cl_5_6->order def_%cl_5_8 %cl_5_6[3.4,] %cl_5_7[3.5,] 	 SYMBOL:	 ARGS:%cl_5_7,
		 7: %cl_5_8->last def_%cl_5_9 %cl_5_8[3.6,] 	 SYMBOL:	 ARGS:
		 8: %cl_5_9->updated_at def_%cl_5_10 %cl_5_9[3.7,] 	 SYMBOL:	 ARGS:
		 9: HASH- def_%cl_5_11 %cl_5_3[3.1,] %cl_5_4[3.2,] %cl_5_5[3.3,] %cl_5_10[3.8,] 
		 10: %cl_5_11->to_json def_%cl_5_12 %cl_5_11[3.9,] 	 SYMBOL:	 ARGS:
		 11: HASH-plain- def_%cl_5_13 %cl_5_12[3.10,] 
		 12: %self->render def_%cl_5_14 %self[2.0,] %cl_5_13[3.11,] 	 SYMBOL:	 ARGS:%cl_5_13,
		 13: RETURN %cl_5_14[3.12,] %self[3.12,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_5_15 
		 1: def_%cl_5_16 %cl_5_15[4.0,] 
		 2: RETURN %cl_5_16[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: RETURN %cl_4_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_4_4 
		 1: def_%cl_4_5 %cl_4_4[4.0,] 
		 2: RETURN %cl_4_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: RETURN %v_17[5.8,] %self[5.3,5.8,2.0,2.7,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

