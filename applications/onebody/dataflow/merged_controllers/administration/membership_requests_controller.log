SET IRMethod, name = index
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (MembershipRequest) def_%v_3 
		 7: %v_3->all def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->to_a def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: %v_5->group_by def_%v_6 %v_5[2.8,] 	 ARGS:
		 10: ATTRASSIGN %self->reqs_by_group %v_6[2.9,] 
		 11: 
		 12: %self->ruby_code_from_view def_%v_7 %self[2.0,2.10,] 	 ARGS:
		 13: %v_7->ruby_code_from_view def_%v_8 %v_7[2.12,] %self[2.0,2.10,2.12,] 	 ARGS:%v_7,
CLOSURE BEGIN: %self[2.0,2.10,2.12,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_rb_from_view 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%cl_1_3 
		 2: %self->t def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] 	 ARGS:%cl_1_3,
		 3: ATTRASSIGN %self->title %cl_1_4[3.2,] 
		 4: 
		 5: GETFIELD %self->reqs_by_group def_%cl_1_5 %self[3.2,2.0,] 
		 6: %cl_1_5->any? def_%cl_1_6 %cl_1_5[3.5,] 	 ARGS:
		 7: BRANCH %cl_1_6[3.6,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->reqs_by_group def_%cl_1_7 %self[2.0,] 
		 2: %cl_1_7->each def_%cl_1_8 %cl_1_7[4.1,] %self[3.3,2.0,] 	 ARGS:%cl_1_7,
CLOSURE BEGIN: %self[3.3,2.0,] group[] reqs[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_group 
		 3: RECEIVEARG def_reqs 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->avatar_tag def_%cl_2_3 %self[2.0,] group[2.2,] 	 ARGS:group,
		 2: 
		 3: BRANCH group[2.2,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: group->name def_%cl_2_4 group[2.2,] 	 ARGS:
		 1: %self->link_to def_%cl_2_5 %self[2.0,] %cl_2_4[4.0,] group[4.0,2.2,] 	 ARGS:%cl_2_4,group,
		 2: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%cl_2_6 
		 1: COPY TYPE_StringLiteral def_%cl_2_7 
		 2: %self->t def_%cl_2_8 %self[2.0,] %cl_2_7[5.1,] 	 ARGS:%cl_2_7,
		 3: %cl_2_6->+ def_%cl_2_9 %cl_2_6[5.0,] %cl_2_8[5.2,] 	 ARGS:%cl_2_8,
		 4: COPY TYPE_StringLiteral def_%cl_2_10 
		 5: %cl_2_9->+ def_%cl_2_11 %cl_2_9[5.3,] %cl_2_10[5.4,] 	 ARGS:%cl_2_10,
		 6: COPY TYPE_PASS def_%cl_2_5 %cl_2_11[5.5,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%cl_2_12 
		 2: reqs->length def_%cl_2_13 reqs[2.3,] 	 ARGS:
		 3: HASH-count- def_%cl_2_14 %cl_2_13[6.2,] 
		 4: %self->t def_%cl_2_15 %self[2.0,] %cl_2_12[6.1,] %cl_2_14[6.3,] 	 ARGS:%cl_2_12,%cl_2_14,
		 5: %self->group_memberships_path def_%cl_2_16 %self[6.4,2.0,] group[2.2,] 	 ARGS:group,
		 6: COPY TYPE_StringLiteral def_%cl_2_17 
		 7: HASH-class- def_%cl_2_18 %cl_2_17[6.6,] 
		 8: %self->link_to def_%cl_2_19 %self[6.4,6.5,2.0,] %cl_2_15[6.4,] %cl_2_16[6.5,] %cl_2_18[6.7,] 	 ARGS:%cl_2_15,%cl_2_16,%cl_2_18,
		 9: RETURN %cl_2_19[6.8,] %self[6.4,6.5,6.8,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_2_20 
		 1: def_%cl_2_21 %cl_2_20[7.0,] 
		 2: RETURN %cl_2_21[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 3: 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%cl_1_9 
		 2: %self->t def_%cl_1_10 %self[3.3,2.0,] %cl_1_9[5.1,] 	 ARGS:%cl_1_9,
		 3: RETURN %cl_1_10[5.2,] %self[5.2,3.3,2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_1_8[4.2,] %self[3.3,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_11 
		 1: def_%cl_1_12 %cl_1_11[7.0,] 
		 2: RETURN %cl_1_12[7.1,] %self[3.3,2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 14: RETURN %v_8[2.13,] %self[2.0,2.10,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = only_admins
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->logged_in def_%v_3 %self[2.0,] 
		 7: %v_3->admin? def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: RETURN %v_5[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%v_6 
		 2: %self->t def_%v_7 %self[2.0,] %v_6[4.1,] 	 ARGS:%v_6,
		 3: HASH-text-layout-status- def_%v_8 %v_7[4.2,] 
		 4: %self->render def_%v_9 %self[4.2,2.0,] %v_8[4.3,] 	 ARGS:%v_8,
		 5: 
		 6: RETURN %self[4.2,4.4,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

