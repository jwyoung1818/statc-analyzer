SET IRMethod, name = initialize
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_args 
		 6: 
		 7: %v_0->initialize def_%v_3 args[2.5,] %v_0[2.1,] 	 ARGS:Splat,
		 8: 
		 9: %self->initialize_group def_%v_4 %self[2.0,] 	 ARGS:
		 10: RETURN %v_4[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = formatted_title
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: %self->group_title def_%v_4 %self[2.0,] %v_3[2.6,] 	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = sql
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Group) def_%v_3 
		 7: (COLUMNS) def_%v_4 
		 8: %v_3->select def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: HASH-person- def_%v_6 
		 10: HASH-memberships- def_%v_7 %v_6[2.9,] 
		 11: %v_5->joins def_%v_8 %v_5[2.8,] %v_7[2.10,] 	 ARGS:%v_7,
		 12: COPY TYPE_StringLiteral def_%v_9 
		 13: %self->group_id def_%v_10 %self[2.0,] 	 ARGS:
		 14: HASH- def_%v_11 %v_9[2.12,] %v_10[2.13,] 
		 15: %v_8->where def_%v_12 %v_8[2.11,] %v_11[2.14,] 	 ARGS:%v_11,
		 16: %v_12->to_sql def_%v_13 %v_12[2.15,] 	 ARGS:
		 17: RETURN %v_13[2.16,] %self[2.0,2.13,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = format_output
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->query_results def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->headers def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: (I18n) def_%v_5 
		 9: COPY TYPE_StringLiteral def_%v_6 
		 10: %v_5->t def_%v_7 %v_5[2.8,] %v_6[2.9,] 	 ARGS:%v_6,
		 11: %v_4->push def_%v_8 %v_4[2.7,] %v_7[2.10,] 	 ARGS:%v_7,
		 12: def_%v_9 
		 13: %v_8->slice! def_%v_10 %v_8[2.11,] %v_9[2.12,] 	 ARGS:%v_9,
		 14: 
		 15: %self->query_results def_%v_11 %self[2.0,2.6,] 	 ARGS:
		 16: %v_11->rows def_%v_12 %v_11[2.15,] 	 ARGS:
		 17: %v_12->map! def_%v_13 %v_12[2.16,] %self[2.0,2.6,2.15,] 	 ARGS:%v_12,
CLOSURE BEGIN: x[2.17,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_x 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: x->take def_%cl_1_3 x[2.2,] 	 ARGS:Fixnum,
		 2: x->drop def_%cl_1_4 x[3.1,2.2,] 	 ARGS:Fixnum,
		 3: %cl_1_4->compact def_%cl_1_5 %cl_1_4[3.2,] 	 ARGS:
		 4: COPY TYPE_StringLiteral def_%cl_1_6 
		 5: %cl_1_5->join def_%cl_1_7 %cl_1_5[3.3,] %cl_1_6[3.4,] 	 ARGS:%cl_1_6,
		 6: %cl_1_3-><< def_%cl_1_8 %cl_1_3[3.1,] %cl_1_7[3.5,] 	 ARGS:%cl_1_7,
		 7: RETURN %cl_1_8[3.6,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[4.0,] 
		 2: RETURN %cl_1_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 18: %v_13->sort_by! def_%v_14 %v_13[2.17,] %self[2.0,2.6,2.15,] 	 ARGS:%v_13,
CLOSURE BEGIN: p[2.18,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_p 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: p->[] def_%cl_2_3 p[2.2,] 	 ARGS:Fixnum,
		 2: COPY TYPE_Array def_%cl_2_4 %cl_2_3[3.1,] 
		 3: RETURN %cl_2_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 19: RETURN %v_14[2.18,] %self[2.0,2.6,2.15,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = group_id
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->options def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->[] def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = format_home_phone
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_value 
		 6: 
		 7: %self->format_phone def_%v_3 %self[2.0,] value[2.5,] 	 ARGS:value,
		 8: RETURN %v_3[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = format_mobile_phone
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_value 
		 6: 
		 7: %self->format_phone def_%v_3 %self[2.0,] value[2.5,] value[2.5,] 	 ARGS:value,value,
		 8: RETURN %v_3[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

