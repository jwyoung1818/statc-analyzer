SET IRMethod, name = import_change_value instanceMethod = true
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_value 
		 6: Line Number 2
		 7: (Date) def_%v_3 
		 8: value->is_a? def_%v_4 value[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: (Time) def_%v_5 
		 1: value->is_a? def_%v_6 value[2.5,] %v_5[3.0,] 	 SYMBOL:	 ARGS:%v_5,
		 2: COPY TYPE_PASS def_%v_4 %v_6[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_4[3.2,2.8,] 
BB 5
	outgoing: 11 
	datadep: 
	instructions:
		 0: Line Number 3
		 1: value->to_s def_%v_7 value[2.5,] 	 SYMBOL:date,	 ARGS:Symbol,
		 2: RETURN %v_7[5.1,] %self[2.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: Line Number 4
		 1: value->nil? def_%v_8 value[2.5,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %v_8[6.1,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: Line Number 5
		 1: COPY TYPE_StringLiteral "" def_%v_9 
		 2: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: Line Number 7
		 1: value->inspect def_%v_10 value[2.5,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_9 %v_10[8.1,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %v_9[8.2,7.1,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

