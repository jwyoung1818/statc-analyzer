 query_options = nil unless defined?(query_options) 
 query_options ||= {} 
 form_tag({}, :data => {:cm_url => issues_context_menu_path}) do 
 hidden_field_tag 'back_url', url_for(:params => request.query_parameters), :id => nil 
 query.css_classes 
 check_box_tag 'check_all', '', false, :class => 'toggle-selection',
              :title => "#{l(:button_check_all)}/#{l(:button_uncheck_all)}" 
 query.inline_columns.each do |column| 
 column_header(query, column, query_options) 
 end 
 grouped_issue_list(issues, query) do |issue, level, group_name, group_count, group_totals| 
 if group_name 
 reset_cycle 
 query.inline_columns.size + 1 
 group_name 
 group_count 
 group_totals 
 link_to_function("#{l(:button_collapse_all)}/#{l(:button_expand_all)}",
                             "toggleAllRowGroups(this)", :class => 'toggle-all') 
 end 
 issue.id 
 cycle('odd', 'even') 
 issue.css_classes 
 level > 0 ? "idnt idnt-#{level}" : nil 
 check_box_tag("ids[]", issue.id, false, :id => nil) 
 query.inline_columns.each do |column| 
 content_tag('td', column_content(column, issue), :class => column.css_classes) 
 end 
 query.block_columns.each do |column|
       if (text = column_content(column, issue)) && text.present? 
 current_cycle 
 query.inline_columns.size + 1 
 column.css_classes 
 if query.block_columns.count > 1 
 column.caption 
 end 
 text 
 end 
 end 
 end 
 end 
