 board_breadcrumb(@board) 
 link_to l(:label_message_new),
            new_board_message_path(@board),
            :class => 'icon icon-add',
            :onclick => 'showAndScrollTo("add-message", "message_subject"); return false;' if User.current.allowed_to?(:add_messages, @board.project) 
 watcher_link(@board, User.current) 
 if User.current.allowed_to?(:add_messages, @board.project) 
 link_to @board.name, project_board_path(@project, @board) 
 l(:label_message_new) 
 form_for @message, :url => new_board_message_path(@board), :html => {:multipart => true, :id => 'message-form'} do |f| 
 render :partial => 'messages/form', :locals => {:f => f} 
 submit_tag l(:button_create) 
 preview_link(preview_board_message_path(@board), 'message-form') 
 link_to l(:button_cancel), "#", :onclick => '$("#add-message").hide(); return false;' 
 end 
 end 
 @board.name 
 @board.description 
 if @topics.any? 
 l(:field_subject) 
 l(:field_author) 
 sort_header_tag('created_on', :caption => l(:field_created_on)) 
 sort_header_tag('replies', :caption => l(:label_reply_plural)) 
 sort_header_tag('updated_on', :caption => l(:label_message_last)) 
 @topics.each do |topic| 
 topic.id 
 topic.sticky? ? 'sticky' : '' 
 topic.locked? ? 'locked' : '' 
 'icon-sticky' if topic.sticky? 
 'icon-locked' if topic.locked? 
 link_to topic.subject, board_message_path(@board, topic) 
 link_to_user(topic.author) 
 format_time(topic.created_on) 
 topic.replies_count 
 if topic.last_reply 
 authoring topic.last_reply.created_on, topic.last_reply.author 
 link_to_message topic.last_reply 
 end 
 end 
 pagination_links_full @topic_pages, @topic_count 
 else 
 l(:label_no_data) 
 end 
 other_formats_links do |f| 
 f.link_to 'Atom', :url => {:key => User.current.rss_key} 
 end 
 html_title @board.name 
 content_for :header_tags do 
 auto_discovery_link_tag(:atom, {:format => 'atom', :key => User.current.rss_key}, :title => "#{@project}: #{@board}") 
 end 
