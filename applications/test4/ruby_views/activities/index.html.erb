 @author.nil? ? l(:label_activity) : l(:label_user_activity, link_to_user(@author)).html_safe 
 l(:label_date_from_to, :start => format_date(@date_to - @days), :end => format_date(@date_to-1)) 
 @events_by_day.keys.sort.reverse_each do |day| 
 format_activity_day(day) 
 sort_activity_events(@events_by_day[day]).each do |e, in_group| 
 e.event_type 
 e.event_type 
 "grouped" if in_group 
 User.current.logged? && e.respond_to?(:event_author) && User.current == e.event_author ? 'me' : nil 
 avatar(e.event_author, :size => "24") if e.respond_to?(:event_author) 
 format_time(e.event_datetime, false) 
 content_tag('span', e.project, :class => 'project') if @project.nil? || @project != e.project 
 link_to format_activity_title(e.event_title), e.event_url 
 "grouped" if in_group 
 format_activity_description(e.event_description) 
 link_to_user(e.event_author) if e.respond_to?(:event_author) 
 end 
 end 
 content_tag('p', l(:label_no_data), :class => 'nodata') if @events_by_day.empty? 
 link_to("\xc2\xab " + l(:label_previous),
                   {:params => request.query_parameters.merge(:from => @date_to - @days - 1)},
                   :title => l(:label_date_from_to, :start => format_date(@date_to - 2*@days), :end => format_date(@date_to - @days - 1)),
                   :accesskey => accesskey(:previous)) 
 unless @date_to > User.current.today 
 link_to(l(:label_next) + " \xc2\xbb",
                   {:params => request.query_parameters.merge(:from => @date_to + @days - 1)},
                   :title => l(:label_date_from_to, :start => format_date(@date_to), :end => format_date(@date_to + @days - 1)),
                   :accesskey => accesskey(:next)) 
 end 
 other_formats_links do |f| 
 f.link_to_with_query_parameters 'Atom', 'from' => nil, :key => User.current.rss_key 
 end 
 content_for :header_tags do 
 auto_discovery_link_tag(:atom, :params => request.query_parameters.merge(:from => nil, :key => User.current.rss_key), :format => 'atom') 
 end 
 content_for :sidebar do 
 form_tag({}, :method => :get, :id => 'activity_scope_form') do 
 l(:label_activity) 
 @activity.event_types.each do |t| 
 check_box_tag "show_#{t}", 1, @activity.scope.include?(t) 
t
 link_to(l("label_#{t.singularize}_plural"),
                  {"show_#{t}" => 1, :user_id => params[:user_id], :from => params[:from]})
 end 
 if @project && @project.descendants.active.any? 
 hidden_field_tag 'with_subprojects', 0, :id => nil 
 check_box_tag 'with_subprojects', 1, @with_subprojects 
l(:label_subproject_plural)
 end 
 hidden_field_tag('user_id', params[:user_id]) unless params[:user_id].blank? 
 hidden_field_tag('from', params[:from]) unless params[:from].blank? 
 submit_tag l(:button_apply), :class => 'button-small', :name => 'submit' 
 end 
 end 
 html_title(l(:label_activity), @author) 
