SET IRMethod, name = add_errors_from
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_exception 
		 6: 
		 7: BRANCH exception[2.5,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: (JSON) def_%v_3 
		 2: exception->response def_%v_4 exception[2.5,] 	 ARGS:
		 3: %v_4->body def_%v_5 %v_4[3.2,] 	 ARGS:
		 4: %v_3->parse def_%v_6 %v_3[3.1,] %v_5[3.3,] 	 ARGS:%v_5,
		 5: COPY TYPE_StringLiteral def_%v_7 
		 6: %v_6->[] def_%v_8 %v_6[3.4,] %v_7[3.5,] 	 ARGS:%v_7,
		 7: %v_8->each def_%v_9 %v_8[3.6,] %self[2.0,] 	 ARGS:%v_8,
CLOSURE BEGIN: error[] %self[2.0,] error_array[3.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_error 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%cl_1_3 
		 2: error->split def_%cl_1_4 error[2.2,] %cl_1_3[3.1,] 	 ARGS:%cl_1_3,Fixnum,
		 3: COPY TYPE_PASS def_error_array %cl_1_4[3.2,] 
		 4: 
		 5: %self->errors def_%cl_1_5 %self[2.0,] 	 ARGS:
		 6: error_array->[] def_%cl_1_6 error_array[3.3,] 	 ARGS:Fixnum,
		 7: %cl_1_6->downcase def_%cl_1_7 %cl_1_6[3.6,] 	 ARGS:
		 8: error_array->[] def_%cl_1_8 error_array[3.3,3.6,] 	 ARGS:Fixnum,
		 9: %cl_1_5->add def_%cl_1_9 %cl_1_5[3.5,] %cl_1_7[3.7,] %cl_1_8[3.8,] 	 ARGS:%cl_1_7,%cl_1_8,
		 10: RETURN %cl_1_9[3.9,] %self[3.5,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_10 
		 1: def_%cl_1_11 %cl_1_10[4.0,] 
		 2: RETURN %cl_1_11[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: error[2.2,] 
		 8: RETURN %v_9[3.7,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

