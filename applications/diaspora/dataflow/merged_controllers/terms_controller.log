SET IRMethod, name = index
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Rails) def_%v_3 
		 7: %v_3->root def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: COPY TYPE_StringLiteral def_%v_5 
		 9: COPY TYPE_StringLiteral def_%v_6 
		 10: COPY TYPE_StringLiteral def_%v_7 
		 11: %v_4->join def_%v_8 %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] 	 ARGS:%v_5,%v_6,%v_7,
		 12: COPY TYPE_PASS def_partial_dir %v_8[2.11,] 
		 13: 
		 14: COPY TYPE_StringLiteral def_%v_9 
		 15: %v_8->join def_%v_10 %v_8[2.11,] %v_9[2.14,] 	 ARGS:%v_9,
		 16: %v_10->exist? def_%v_11 %v_10[2.15,] 	 ARGS:
		 17: BRANCH %v_11[2.16,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_12 
		 1: partial_dir->join def_%v_13 partial_dir[2.12,] %v_12[3.0,] 	 ARGS:%v_12,
		 2: %v_13->exist? def_%v_14 %v_13[3.1,] 	 ARGS:
		 3: COPY TYPE_PASS def_%v_11 %v_14[3.2,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_11[3.3,2.16,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->render def_%v_15 %self[2.0,] 	 ARGS:Symbol,
		 2: RETURN %v_15[5.1,] %self[5.1,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->render def_%v_16 %self[2.0,] 	 ARGS:Symbol,
		 2: RETURN %v_16[6.1,] %self[6.1,2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

