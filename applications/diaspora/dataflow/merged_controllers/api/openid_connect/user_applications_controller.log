SET IRMethod, name = index
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (UserApplicationsPresenter) def_%v_3 
		 7: %self->current_user def_%v_4 %self[2.0,] 	 ARGS:
		 8: %v_3->new def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: ATTRASSIGN %self->user_apps %v_5[2.8,] 
		 10: 
		 11: %self->content_for def_%v_6 %self[2.0,2.7,2.9,] %self[2.0,2.7,2.9,] 	 ARGS:Symbol,%self,
CLOSURE BEGIN: %self[2.0,2.7,2.9,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%cl_1_3 
		 2: %self->t def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] 	 ARGS:%cl_1_3,
		 3: RETURN %cl_1_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 12: 
		 13: COPY TYPE_StringLiteral def_%v_7 
		 14: %self->render def_%v_8 %self[2.0,2.7,2.9,2.11,] %v_7[2.13,] 	 ARGS:%v_7,
		 15: 
		 16: COPY TYPE_StringLiteral def_%v_9 
		 17: %self->t def_%v_10 %self[2.0,2.7,2.9,2.11,2.14,] %v_9[2.16,] 	 ARGS:%v_9,
		 18: 
		 19: COPY TYPE_StringLiteral def_%v_11 
		 20: %self->render def_%v_12 %self[2.0,2.7,2.9,2.11,2.14,2.17,] %v_11[2.19,] 	 ARGS:%v_11,
		 21: RETURN %v_12[2.20,] %self[2.0,2.7,2.9,2.11,2.14,2.17,2.20,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

