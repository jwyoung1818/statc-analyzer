SET IRMethod, name = batch_import
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_contact_ids 
		 6: RECEIVEARG def_share 
		 7: 
		 8: (ShareVisibility) def_%v_3 
		 9: share->id def_%v_4 share[2.6,] 	 ARGS:
		 10: share->class def_%v_5 share[2.6,2.9,] 	 ARGS:
		 11: %v_5->to_s def_%v_6 %v_5[2.10,] 	 ARGS:
		 12: HASH-shareable_id-shareable_type- def_%v_7 %v_4[2.9,] %v_6[2.11,] 
		 13: %v_3->new def_%v_8 %v_3[2.8,] %v_7[2.12,] 	 ARGS:%v_7,
		 14: %v_8->valid? def_%v_9 %v_8[2.13,] 	 ARGS:
		 15: BRANCH %v_9[2.14,] 
BB 3
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_10 
		 1: 
		 2: (AppConfig) def_%v_11 
		 3: %v_11->postgres? def_%v_12 %v_11[3.2,] 	 ARGS:
		 4: BRANCH %v_12[3.3,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: contact_ids->each def_%v_13 contact_ids[2.5,] %self[2.0,] 	 ARGS:contact_ids,
CLOSURE BEGIN: share[2.6,] contact_id[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_contact_id 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (ShareVisibility) def_%cl_1_3 
		 2: share->id def_%cl_1_4 share[] 	 ARGS:
		 3: share->class def_%cl_1_5 share[3.2,] 	 ARGS:
		 4: %cl_1_5->base_class def_%cl_1_6 %cl_1_5[3.3,] 	 ARGS:
		 5: %cl_1_6->to_s def_%cl_1_7 %cl_1_6[3.4,] 	 ARGS:
		 6: HASH-contact_id-shareable_id-shareable_type- def_%cl_1_8 contact_id[2.2,] %cl_1_4[3.2,] %cl_1_7[3.5,] 
		 7: %cl_1_3->find_or_create_by def_%cl_1_9 %cl_1_3[3.1,] %cl_1_8[3.6,] 	 ARGS:%cl_1_8,
		 8: RETURN %cl_1_9[3.7,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_10 
		 1: def_%cl_1_11 %cl_1_10[4.0,] 
		 2: RETURN %cl_1_11[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 2: RETURN %v_13[6.1,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: contact_ids->map def_%v_14 contact_ids[2.5,] %self[2.0,] 	 ARGS:contact_ids,
CLOSURE BEGIN: share[2.6,] contact_id[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_contact_id 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: share->id def_%cl_2_3 share[] 	 ARGS:
		 2: share->class def_%cl_2_4 share[3.1,] 	 ARGS:
		 3: %cl_2_4->base_class def_%cl_2_5 %cl_2_4[3.2,] 	 ARGS:
		 4: %cl_2_5->to_s def_%cl_2_6 %cl_2_5[3.3,] 	 ARGS:
		 5: COPY TYPE_Array def_%cl_2_7 contact_id[2.2,] %cl_2_3[3.1,] %cl_2_6[3.4,] 
		 6: RETURN %cl_2_7[3.5,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_8 
		 1: def_%cl_2_9 %cl_2_8[4.0,] 
		 2: RETURN %cl_2_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 2: COPY TYPE_PASS def_new_share_visibilities_data %v_14[7.1,] 
		 3: 
		 4: (ShareVisibility) def_%v_15 
		 5: COPY TYPE_Array def_%v_16 
		 6: %v_15->import def_%v_17 %v_15[7.4,] %v_16[7.5,] %v_14[7.1,] 	 ARGS:%v_16,new_share_visibilities_data,
		 7: RETURN %v_17[7.6,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = not_public
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->shareable def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->public? def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%v_5 %self[2.0,] 	 ARGS:
		 2: %v_5->[] def_%v_6 %v_5[3.1,] 	 ARGS:Symbol,
		 3: COPY TYPE_StringLiteral def_%v_7 
		 4: %v_6-><< def_%v_8 %v_6[3.2,] %v_7[3.3,] 	 ARGS:%v_7,
		 5: RETURN %v_8[3.4,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

