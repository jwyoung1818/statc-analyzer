SET IRMethod, name = apply_blacklist
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->params def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->[] def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: (Portlet) def_%v_5 
		 1: %self->params def_%v_6 %self[2.0,] 	 ARGS:
		 2: %v_6->[] def_%v_7 %v_6[3.1,] 	 ARGS:Symbol,
		 3: %v_7->to_sym def_%v_8 %v_7[3.2,] 	 ARGS:
		 4: %v_5->blacklisted? def_%v_9 %v_5[3.0,] %v_8[3.3,] 	 ARGS:%v_8,
		 5: COPY TYPE_PASS def_%v_4 %v_9[3.4,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_4[3.5,2.7,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: HASH-status- def_%v_10 
		 2: %self->render def_%v_11 %self[2.0,] %v_10[5.1,] 	 ARGS:%v_10,
		 3: RETURN %v_11[5.2,] %self[5.2,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = model_class
BB 1
	outgoing: 4 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Portlet) def_%v_3 
		 7: %v_3->new def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 4
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = build_block
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->params def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->[] def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: %v_4->blank? def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->model_class def_%v_6 %self[2.0,] 	 ARGS:
		 2: %v_6->new def_%v_7 %v_6[3.1,] 	 ARGS:
		 3: ATTRASSIGN %self->block %v_7[3.2,] 
		 4: RETURN %v_7[3.2,] %self[3.1,3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->params def_%v_8 %self[2.0,] 	 ARGS:
		 2: %v_8->[] def_%v_9 %v_8[4.1,] 	 ARGS:Symbol,
		 3: %v_9->classify def_%v_10 %v_9[4.2,] 	 ARGS:
		 4: %v_10->constantize def_%v_11 %v_10[4.3,] 	 ARGS:
		 5: %self->params def_%v_12 %self[4.1,2.0,] 	 ARGS:
		 6: %v_12->[] def_%v_13 %v_12[4.5,] 	 ARGS:Symbol,
		 7: %v_11->new def_%v_14 %v_11[4.4,] %v_13[4.6,] 	 ARGS:%v_13,
		 8: ATTRASSIGN %self->block %v_14[4.7,] 
		 9: RETURN %v_14[4.7,] %self[4.1,4.5,4.8,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_block
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->load_block def_%v_3 %self[2.0,] 	 ARGS:
		 7: 
		 8: GETFIELD %self->block def_%v_4 %self[2.0,2.6,] 
		 9: %self->params def_%v_5 %self[2.0,2.6,] 	 ARGS:
		 10: %v_5->[] def_%v_6 %v_5[2.9,] 	 ARGS:Symbol,
		 11: %v_4->update def_%v_7 %v_4[2.8,] %v_6[2.10,] 	 ARGS:%v_6,
		 12: RETURN %v_7[2.11,] %self[2.0,2.6,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = block_form
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

