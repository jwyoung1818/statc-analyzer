SET IRMethod, name = initialize
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_model_class_or_content_type_or_model 
		 6: 
		 7: %self->normalize_subject_class def_%v_3 %self[2.0,] model_class_or_content_type_or_model[2.5,] 	 ARGS:model_class_or_content_type_or_model,
		 8: RETURN %v_3[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = subject_class
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->path_subject def_%v_3 %self[2.0,] 	 ARGS:
		 7: (Class) def_%v_4 
		 8: %v_3->instance_of? def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->path_subject def_%v_6 %self[2.0,] 	 ARGS:
		 2: RETURN %v_6[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->path_subject def_%v_7 %self[2.0,] 	 ARGS:
		 2: %v_7->class def_%v_8 %v_7[4.1,] 	 ARGS:
		 3: RETURN %v_8[4.2,] %self[4.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = build_preview
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_view 
		 6: 
		 7: COPY TYPE_Array def_%v_3 
		 8: COPY TYPE_PASS def_path %v_3[2.7,] 
		 9: 
		 10: %self->engine_name def_%v_4 %self[2.0,] 	 ARGS:
		 11: path-><< def_%v_5 path[2.8,] %v_4[2.10,] 	 ARGS:%v_4,
		 12: 
		 13: %self->path_subject def_%v_6 %self[2.0,2.10,] 	 ARGS:
		 14: path-><< def_%v_7 path[2.8,2.11,] %v_6[2.13,] 	 ARGS:%v_6,
		 15: 
		 16: RETURN path[2.8,2.11,2.14,] %self[2.0,2.10,2.13,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = build
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_view 
		 6: 
		 7: COPY TYPE_Array def_%v_3 
		 8: COPY TYPE_PASS def_path %v_3[2.7,] 
		 9: 
		 10: %self->engine def_%v_4 %self[2.0,] view[2.5,] 	 ARGS:view,
		 11: path-><< def_%v_5 path[2.8,] %v_4[2.10,] 	 ARGS:%v_4,
		 12: 
		 13: %self->path_subject def_%v_6 %self[2.0,2.10,] 	 ARGS:
		 14: path-><< def_%v_7 path[2.8,2.11,] %v_6[2.13,] 	 ARGS:%v_6,
		 15: 
		 16: RETURN path[2.8,2.11,2.14,] %self[2.0,2.10,2.13,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = main_app_model?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->engine_name def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: %v_3->== def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = engine_name
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->subject_class def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->model_name def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: COPY TYPE_PASS def_model_class %v_4[2.7,] 
		 9: 
		 10: (EngineAware) def_%v_5 
		 11: %v_5->module_name def_%v_6 %v_5[2.10,] %v_4[2.7,] 	 ARGS:model_class,
		 12: COPY TYPE_PASS def_name %v_6[2.11,] 
		 13: 
		 14: BRANCH %v_6[2.11,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_7 
		 1: 
		 2: GLOBALVAR $! def_%v_9 
BB 4
	outgoing: 15 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_8 
		 1: RETURN %v_8[4.0,] %self[2.0,] 
BB 6
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: COPY TYPE_StringLiteral def_%v_12 
		 3: BUILDSTRING def_%v_13 name[2.12,] %v_12[6.2,] 
		 4: %v_13->constantize def_%v_14 %v_13[6.3,] 	 ARGS:
		 5: COPY TYPE_PASS def_engine %v_14[6.4,] 
		 6: COPY TYPE_PASS def_%v_11 %v_14[6.4,] 
		 7: %v_9[3.2,] 
BB 8
	outgoing: 15 
	datadep: 
	instructions:
		 0: 
		 1: engine->engine_name def_%v_22 engine[6.5,] 	 ARGS:
		 2: RETURN %v_22[8.1,] %self[2.0,] 
BB 9
	outgoing: 10 11 13 
	datadep: 
	instructions:
		 0: def_%v_15 
		 1: (NameError) def_%v_16 
		 2: def_%v_17 %v_16[9.1,] %v_15[9.0,] 
		 3: BRANCH %v_17[9.2,] 
BB 10
	outgoing: 13 15 
	datadep: 
	instructions:
		 0: %v_15[9.0,] 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%v_18 
		 2: COPY TYPE_PASS def_%v_19 %v_18[11.1,] 
		 3: %v_9[3.2,] 
BB 12
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %v_19[11.2,] %self[2.0,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: def_%v_20 
		 1: def_%v_21 %v_20[13.0,] %v_9[3.2,] 
		 2: %v_20[13.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = engine_class
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->main_app_model? def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: (Rails) def_%v_4 
		 2: %v_4->application def_%v_5 %v_4[3.1,] 	 ARGS:
		 3: RETURN %v_5[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->subject_class def_%v_6 %self[2.0,] 	 ARGS:
		 2: %self->guess_engine_class def_%v_7 %self[4.1,2.0,] %v_6[4.1,] 	 ARGS:%v_6,
		 3: RETURN %v_7[4.2,] %self[4.1,4.2,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = guess_engine_class
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_klass 
		 6: 
		 7: (EngineAware) def_%v_3 
		 8: %v_3->module_name def_%v_4 %v_3[2.7,] klass[2.5,] 	 ARGS:klass,
		 9: COPY TYPE_PASS def_name %v_4[2.8,] 
		 10: 
		 11: COPY TYPE_StringLiteral def_%v_5 
		 12: BUILDSTRING def_%v_6 %v_4[2.8,] %v_5[2.11,] 
		 13: %v_6->constantize def_%v_7 %v_6[2.12,] 	 ARGS:
		 14: RETURN %v_7[2.13,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = normalize_subject_class
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_model_class_or_content_type_or_model 
		 6: 
		 7: model_class_or_content_type_or_model->respond_to? def_%v_3 model_class_or_content_type_or_model[2.5,] 	 ARGS:Symbol,
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: model_class_or_content_type_or_model->model_class def_%v_4 model_class_or_content_type_or_model[2.5,] 	 ARGS:
		 2: ATTRASSIGN %self->path_subject %v_4[3.1,] 
		 3: RETURN %v_4[3.1,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->path_subject model_class_or_content_type_or_model[2.5,] 
		 2: RETURN model_class_or_content_type_or_model[2.5,] %self[4.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = engine
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_view 
		 6: 
		 7: %self->engine_name def_%v_3 %self[2.0,] 	 ARGS:
		 8: view->send def_%v_4 view[2.5,] %v_3[2.7,] 	 ARGS:%v_3,
		 9: RETURN %v_4[2.8,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = module_name
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_klass 
		 6: 
		 7: klass->name def_%v_3 klass[2.5,] 	 ARGS:
		 8: COPY TYPE_StringLiteral def_%v_4 
		 9: %v_3->split def_%v_5 %v_3[2.7,] %v_4[2.8,] 	 ARGS:%v_4,
		 10: COPY TYPE_PASS def_names %v_5[2.9,] 
		 11: 
		 12: %v_5->size def_%v_6 %v_5[2.9,] 	 ARGS:
		 13: %v_6->> def_%v_7 %v_6[2.12,] 	 ARGS:Fixnum,
		 14: BRANCH %v_7[2.13,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: names->first def_%v_8 names[2.10,] 	 ARGS:
		 1: RETURN %v_8[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_9 
		 1: 
		 2: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

