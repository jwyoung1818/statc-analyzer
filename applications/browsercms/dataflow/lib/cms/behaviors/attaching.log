SET IRMethod, name = included instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_base 
		 6: 
		 7: (MacroMethods) def_%v_3 
		 8: base->extend def_%v_4 base[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = allow_attachments instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (ClassMethods) def_%v_3 
		 7: %self->extend def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: 
		 9: (Validations) def_%v_5 
		 10: %self->extend def_%v_6 %self[2.0,2.7,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_5,
		 11: 
		 12: (InstanceMethods) def_%v_7 
		 13: %self->include def_%v_8 %self[2.0,2.7,2.10,] %v_7[2.12,] 	 SYMBOL:	 ARGS:%v_7,
		 14: 
		 15: %self->attr_accessor def_%v_9 %self[2.0,2.7,2.10,2.13,] 	 SYMBOL:attachment_id_list,attachments_changed,	 ARGS:Symbol,Symbol,
		 16: 
		 17: (Attachment) def_%v_10 
		 18: %v_10->definitions def_%v_11 %v_10[2.17,] 	 SYMBOL:	 ARGS:
		 19: %self->name def_%v_12 %self[2.0,2.7,2.10,2.13,2.15,] 	 SYMBOL:	 ARGS:
		 20: HASH- def_%v_13 
		 21: ATTRASSIGN %v_11->[] %v_12[2.19,] %v_13[2.20,] 
		 22: 
		 23: COPY TYPE_StringLiteral "Attachment" def_%v_14 
		 24: HASH-as-dependent-class_name-autosave- def_%v_15 %v_14[2.23,] 
		 25: %self->has_many def_%v_16 %self[2.0,2.7,2.10,2.13,2.15,2.19,] %v_15[2.24,] 	 SYMBOL:attachments,	 ARGS:Symbol,%v_15,
		 26: 
		 27: %self->lambda def_%v_17 %self[2.0,2.7,2.10,2.13,2.15,2.19,2.25,] %self[2.0,2.7,2.10,2.13,2.15,2.19,2.25,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: a[] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_a 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: a->[] def_%cl_1_3 a[2.2,] 	 SYMBOL:data,	 ARGS:Symbol,
		 2: %cl_1_3->blank? def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: a->[] def_%cl_1_5 a[2.2,] 	 SYMBOL:id,	 ARGS:Symbol,
		 1: %cl_1_5->blank? def_%cl_1_6 %cl_1_5[4.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[6.0,] 
		 2: RETURN %cl_1_8[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 28: HASH-allow_destroy-reject_if- def_%v_18 %v_17[2.27,] 
		 29: %self->accepts_nested_attributes_for def_%v_19 %self[2.0,2.7,2.10,2.13,2.15,2.19,2.25,2.27,] %v_18[2.28,] 	 SYMBOL:attachments,	 ARGS:Symbol,%v_18,
		 30: 
		 31: %self->validates_associated def_%v_20 %self[2.0,2.7,2.10,2.13,2.15,2.19,2.25,2.27,2.29,] 	 SYMBOL:attachments,	 ARGS:Symbol,
		 32: 
		 33: %self->before_validation def_%v_21 %self[2.0,2.7,2.10,2.13,2.15,2.19,2.25,2.27,2.29,2.31,] 	 SYMBOL:initialize_attachments,check_for_updated_attachments,	 ARGS:Symbol,Symbol,
		 34: 
		 35: %self->after_validation def_%v_22 %self[2.0,2.7,2.10,2.13,2.15,2.19,2.25,2.27,2.29,2.31,2.33,] 	 SYMBOL:filter_generic_attachment_errors,	 ARGS:Symbol,
		 36: 
		 37: %self->before_create def_%v_23 %self[2.0,2.7,2.10,2.13,2.15,2.19,2.25,2.27,2.29,2.31,2.33,2.35,] 	 SYMBOL:associate_new_attachments,	 ARGS:Symbol,
		 38: 
		 39: %self->before_save def_%v_24 %self[2.0,2.7,2.10,2.13,2.15,2.19,2.25,2.27,2.29,2.31,2.33,2.35,2.37,] 	 SYMBOL:ensure_status_matches_attachable,	 ARGS:Symbol,
		 40: 
		 41: %self->after_save def_%v_25 %self[2.0,2.7,2.10,2.13,2.15,2.19,2.25,2.27,2.29,2.31,2.33,2.35,2.37,2.39,] 	 SYMBOL:save_associated_attachments,	 ARGS:Symbol,
		 42: RETURN %v_25[2.41,] %self[2.0,2.7,2.10,2.13,2.15,2.19,2.25,2.27,2.29,2.31,2.33,2.35,2.37,2.39,2.41,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = validates_attachment_size instanceMethod = true
BB 1
	outgoing: 19 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: RECEIVECONSTARG def_options 
		 7: options[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 8 
	datadep: 
	instructions:
		 0: 
		 1: options->[] def_%v_4 options[3.1,2.6,] 	 SYMBOL:greater_than,	 ARGS:Symbol,
		 2: BRANCH %v_4[4.1,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: options->[] def_%v_5 options[3.1,2.6,] 	 SYMBOL:in,	 ARGS:Symbol,
		 1: BRANCH %v_5[5.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: options->[] def_%v_6 options[3.1,2.6,] 	 SYMBOL:in,	 ARGS:Symbol,
		 1: %v_6->first def_%v_7 %v_6[6.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_5 %v_7[6.1,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_4 %v_5[6.2,5.0,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: BRANCH %v_4[7.0,4.1,] 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Fixnum def_%v_4 
BB 10
	outgoing: 11 14 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_min %v_4[9.0,7.0,4.1,] 
		 1: 
		 2: options->[] def_%v_8 options[3.1,2.6,] 	 SYMBOL:less_than,	 ARGS:Symbol,
		 3: BRANCH %v_8[10.2,] 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: options->[] def_%v_9 options[3.1,2.6,] 	 SYMBOL:in,	 ARGS:Symbol,
		 1: BRANCH %v_9[11.0,] 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: options->[] def_%v_10 options[3.1,2.6,] 	 SYMBOL:in,	 ARGS:Symbol,
		 1: %v_10->last def_%v_11 %v_10[12.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%v_9 %v_11[12.1,] 
BB 13
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_8 %v_9[12.2,11.0,] 
BB 14
	outgoing: 15 16 
	datadep: 
	instructions:
		 0: BRANCH %v_8[13.0,10.2,] 
BB 15
	outgoing: 16 
	datadep: 
	instructions:
		 0: CONSTANT def_%v_12 	 SYMBOL:	 ARGS:Fixnum,
		 1: COPY TYPE_PASS def_%v_8 %v_12[15.0,] 
BB 16
	outgoing: 17 18 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_max %v_8[15.1,13.0,10.2,] 
		 1: 
		 2: CONSTANT def_%v_13 min[10.0,] %v_8[15.1,13.0,10.2,] 
		 3: COPY TYPE_PASS def_range %v_13[16.2,] 
		 4: 
		 5: options->[] def_%v_14 options[3.1,2.6,] 	 SYMBOL:message,	 ARGS:Symbol,
		 6: BRANCH %v_14[16.5,] 
BB 17
	outgoing: 18 
	datadep: 
	instructions:
		 0: name->to_s def_%v_15 name[2.5,] 	 SYMBOL:	 ARGS:
		 1: %v_15->capitalize def_%v_16 %v_15[17.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral " file size must be between :min and :max bytes." def_%v_17 
		 3: BUILDSTRING def_%v_18 %v_16[17.1,] %v_17[17.2,] 
		 4: COPY TYPE_PASS def_%v_14 %v_18[17.3,] 
BB 18
	outgoing: 19 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_message %v_14[17.4,16.5,] 
		 1: 
		 2: COPY TYPE_Regexp def_%v_19 
		 3: min->to_s def_%v_20 min[10.0,] 	 SYMBOL:	 ARGS:
		 4: message->gsub def_%v_21 message[18.0,] %v_19[18.2,] %v_20[18.3,] 	 SYMBOL:	 ARGS:%v_19,%v_20,
		 5: COPY TYPE_Regexp def_%v_22 
		 6: max->to_s def_%v_23 max[16.0,] 	 SYMBOL:	 ARGS:
		 7: %v_21->gsub def_%v_24 %v_21[18.4,] %v_22[18.5,] %v_23[18.6,] 	 SYMBOL:	 ARGS:%v_22,%v_23,
		 8: COPY TYPE_PASS def_message %v_24[18.7,] 
		 9: 
		 10: %self->validate def_%v_25 %self[2.0,] options[3.1,2.6,] %self[2.0,] 	 SYMBOL:	 ARGS:options,%self,
CLOSURE BEGIN: record[] %self[2.0,] attachment[] name[2.5,] range[16.3,] message[18.0,18.4,18.8,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_record 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: record->attachments def_%cl_1_3 record[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->each def_%cl_1_4 %cl_1_3[3.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_1_3,
CLOSURE BEGIN: attachment[] name[] range[] record[3.1,2.2,] message[] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_attachment 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 10 
	datadep: 
	instructions:
		 0: 
		 1: attachment->attachment_name def_%cl_2_3 attachment[2.2,] 	 SYMBOL:	 ARGS:
		 2: name->to_s def_%cl_2_4 name[] 	 SYMBOL:	 ARGS:
		 3: %cl_2_3->== def_%cl_2_5 %cl_2_3[3.1,] %cl_2_4[3.2,] 	 SYMBOL:	 ARGS:%cl_2_4,
		 4: BRANCH %cl_2_5[3.3,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_2_6 
		 1: 
BB 5
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 6
	outgoing: 7 8 10 
	datadep: 
	instructions:
		 0: 
		 1: attachment->data_file_size def_%cl_2_7 attachment[2.2,] 	 SYMBOL:	 ARGS:
		 2: range->include? def_%cl_2_8 range[] %cl_2_7[6.1,] 	 SYMBOL:	 ARGS:%cl_2_7,
		 3: BRANCH %cl_2_8[6.2,] 
BB 7
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_2_9 
		 1: RETURN %cl_2_9[7.0,] %self[2.0,] 
BB 8
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: record->errors def_%cl_2_10 record[] 	 SYMBOL:	 ARGS:
		 1: %cl_2_10->add_to_base def_%cl_2_11 %cl_2_10[8.0,] message[] 	 SYMBOL:	 ARGS:message,
		 2: RETURN %cl_2_11[8.1,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_2_12 
		 1: def_%cl_2_13 %cl_2_12[10.0,] 
		 2: RETURN %cl_2_13[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: RETURN %v_25[18.10,] %self[18.10,2.0,] 
BB 19
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = validates_attachment_presence instanceMethod = true
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 8 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: RECEIVECONSTARG def_options 
		 7: options[2.6,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[4.0,] 
BB 5
	outgoing: 6 7 8 
	datadep: 
	instructions:
		 0: 
		 1: options->[] def_%v_4 options[4.1,2.6,] 	 SYMBOL:message,	 ARGS:Symbol,
		 2: BRANCH %v_4[5.1,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "Must provide at least one " def_%v_5 
		 1: BUILDSTRING def_%v_6 %v_5[6.0,] name[2.5,] 
		 2: COPY TYPE_PASS def_%v_4 %v_6[6.1,] 
BB 7
	outgoing: 8 10 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_message %v_4[6.2,5.1,] 
		 1: 
		 2: %self->validate def_%v_7 %self[2.0,] options[4.1,2.6,] %self[2.0,] 	 SYMBOL:	 ARGS:options,%self,
CLOSURE BEGIN: record[] %self[2.0,] a[] name[2.5,] message[7.0,] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_record 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 10 
	datadep: 
	instructions:
		 0: 
		 1: record->deleted? def_%cl_1_3 record[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_4 
BB 6
	outgoing: 7 8 10 
	datadep: 
	instructions:
		 0: 
		 1: record->attachments def_%cl_1_5 record[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_5->any? def_%cl_1_6 %cl_1_5[6.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_1_5,
CLOSURE BEGIN: a[] name[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_a 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: a->attachment_name def_%cl_2_3 a[2.2,] 	 SYMBOL:	 ARGS:
		 2: name->to_s def_%cl_2_4 name[] 	 SYMBOL:	 ARGS:
		 3: %cl_2_3->== def_%cl_2_5 %cl_2_3[3.1,] %cl_2_4[3.2,] 	 SYMBOL:	 ARGS:%cl_2_4,
		 4: RETURN %cl_2_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_6 
		 1: def_%cl_2_7 %cl_2_6[4.0,] 
		 2: RETURN %cl_2_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: BRANCH %cl_1_6[6.2,] 
BB 7
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_7 
		 1: RETURN %cl_1_7[7.0,] %self[2.0,] 
BB 8
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: 
		 1: record->errors def_%cl_1_8 record[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_8->add def_%cl_1_9 %cl_1_8[8.1,] message[] 	 SYMBOL:attachment,	 ARGS:Symbol,message,
		 3: RETURN %cl_1_9[8.2,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_1_10 
		 1: def_%cl_1_11 %cl_1_10[10.0,] 
		 2: RETURN %cl_1_11[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: RETURN %v_7[7.2,] %self[7.2,2.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: def_%v_8 
		 1: def_%v_9 %v_8[8.0,] 
		 2: RETURN %v_9[8.1,] %self[2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = validates_attachment_content_type instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: RECEIVECONSTARG def_options 
		 7: options[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: options->dup def_%v_4 options[3.1,2.6,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_validation_options %v_4[4.1,] 
		 3: 
		 4: %v_4->[] def_%v_5 %v_4[4.1,] 	 SYMBOL:content_type,	 ARGS:Symbol,
		 5: COPY TYPE_Array def_%v_6 %v_5[4.4,] 
		 6: %v_6->flatten def_%v_7 %v_6[4.5,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_PASS def_allowed_types %v_7[4.6,] 
		 8: 
		 9: %self->validate def_%v_8 %self[2.0,] validation_options[4.2,] %self[2.0,] 	 SYMBOL:	 ARGS:validation_options,%self,
CLOSURE BEGIN: %self[2.0,] allowed_types[4.7,] a[] t[] options[4.1,3.1,2.6,] record[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_record 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->attachments def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->each def_%cl_1_4 %cl_1_3[3.1,] %self[3.1,2.0,] 	 SYMBOL:	 ARGS:%cl_1_3,
CLOSURE BEGIN: allowed_types[] %self[3.1,2.0,] a[] t[] options[] record[2.2,] 
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_a 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 7 13 
	datadep: 
	instructions:
		 0: 
		 1: allowed_types->any? def_%cl_2_3 allowed_types[] %self[2.0,] 	 SYMBOL:	 ARGS:allowed_types,
CLOSURE BEGIN: a[2.2,] t[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_t 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: a->data_content_type def_%cl_3_3 a[] 	 SYMBOL:	 ARGS:
		 2: t->=== def_%cl_3_4 t[2.2,] %cl_3_3[3.1,] 	 SYMBOL:	 ARGS:%cl_3_3,
		 3: RETURN %cl_3_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_5 
		 1: def_%cl_3_6 %cl_3_5[4.0,] 
		 2: RETURN %cl_3_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: %cl_2_3->! def_%cl_2_4 %cl_2_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %cl_2_4[3.2,] 
BB 4
	outgoing: 5 6 13 
	datadep: 
	instructions:
		 0: a->data_content_type def_%cl_2_5 a[2.2,] 	 SYMBOL:	 ARGS:
		 1: %cl_2_5->nil? def_%cl_2_6 %cl_2_5[4.0,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_2_6[4.1,] 
BB 5
	outgoing: 6 13 
	datadep: 
	instructions:
		 0: a->data_content_type def_%cl_2_7 a[2.2,] 	 SYMBOL:	 ARGS:
		 1: %cl_2_7->blank? def_%cl_2_8 %cl_2_7[5.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_%cl_2_6 %cl_2_8[5.1,] 
BB 6
	outgoing: 7 13 
	datadep: 
	instructions:
		 0: %cl_2_6->! def_%cl_2_9 %cl_2_6[5.2,4.1,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%cl_2_4 %cl_2_9[6.0,] 
BB 7
	outgoing: 8 11 
	datadep: 
	instructions:
		 0: BRANCH %cl_2_4[6.1,3.2,] 
BB 8
	outgoing: 9 10 13 
	datadep: 
	instructions:
		 0: 
		 1: options->[] def_%cl_2_10 options[] 	 SYMBOL:message,	 ARGS:Symbol,
		 2: BRANCH %cl_2_10[8.1,] 
BB 9
	outgoing: 10 13 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "is not one of " def_%cl_2_11 
		 1: COPY TYPE_StringLiteral ", " def_%cl_2_12 
		 2: allowed_types->join def_%cl_2_13 allowed_types[] %cl_2_12[9.1,] 	 SYMBOL:	 ARGS:%cl_2_12,
		 3: BUILDSTRING def_%cl_2_14 %cl_2_11[9.0,] %cl_2_13[9.2,] 
		 4: COPY TYPE_PASS def_%cl_2_10 %cl_2_14[9.3,] 
BB 10
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: record->add_to_base def_%cl_2_15 record[] %cl_2_10[9.4,8.1,] 	 SYMBOL:	 ARGS:%cl_2_10,
		 1: 
BB 11
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 12
	outgoing: 15 
	datadep: 
	instructions:
		 0: RETURN %cl_2_15[10.0,] %self[2.0,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: def_%cl_2_16 
		 1: def_%cl_2_17 %cl_2_16[13.0,] 
		 2: RETURN %cl_2_17[13.1,] %self[2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: RETURN %cl_1_4[3.2,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: RETURN %v_8[4.9,] %self[4.9,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = handle_setting_attachment_path instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->respond_to? def_%v_3 %self[2.0,] 	 SYMBOL:set_attachment_path,	 ARGS:Symbol,
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->set_attachment_path def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_4[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->use_default_attachment_path def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_5[4.1,] %self[4.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = by_section instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_section 
		 6: 
		 7: (SectionNode) def_%v_3 
		 8: %v_3->table_name def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: COPY TYPE_StringLiteral ".ancestry = ?" def_%v_5 
		 10: BUILDSTRING def_%v_6 %v_4[2.8,] %v_5[2.9,] 
		 11: section->node def_%v_7 section[2.5,] 	 SYMBOL:	 ARGS:
		 12: %v_7->ancestry_path def_%v_8 %v_7[2.11,] 	 SYMBOL:	 ARGS:
		 13: COPY TYPE_Array def_%v_9 %v_6[2.10,] %v_8[2.12,] 
		 14: %self->where def_%v_10 %self[2.0,] %v_9[2.13,] 	 SYMBOL:	 ARGS:%v_9,
		 15: HASH-attachments- def_%v_11 
		 16: %v_10->includes def_%v_12 %v_10[2.14,] %v_11[2.15,] 	 SYMBOL:	 ARGS:%v_11,
		 17: %v_12->references def_%v_13 %v_12[2.16,] 	 SYMBOL:section_nodes,	 ARGS:Symbol,
		 18: RETURN %v_13[2.17,] %self[2.0,2.14,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = has_attachment instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: RECEIVECONSTARG def_options 
		 7: options[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN options->[] 
		 2: 
		 3: (Attachment) def_%v_4 
		 4: %v_4->definitions def_%v_5 %v_4[4.3,] 	 SYMBOL:	 ARGS:
		 5: %self->name def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 6: %v_5->[] def_%v_7 %v_5[4.4,] %v_6[4.5,] 	 SYMBOL:	 ARGS:%v_6,
		 7: %v_7->size def_%v_8 %v_7[4.6,] 	 SYMBOL:	 ARGS:
		 8: ATTRASSIGN options->[] %v_8[4.7,] 
		 9: 
		 10: (Attachment) def_%v_9 
		 11: %v_9->definitions def_%v_10 %v_9[4.10,] 	 SYMBOL:	 ARGS:
		 12: %self->name def_%v_11 %self[4.5,2.0,] 	 SYMBOL:	 ARGS:
		 13: %v_10->[] def_%v_12 %v_10[4.11,] %v_11[4.12,] 	 SYMBOL:	 ARGS:%v_11,
		 14: ATTRASSIGN %v_12->[] name[2.5,] options[4.1,4.8,3.1,2.6,] 
		 15: 
		 16: %self->define_method def_%v_13 %self[4.5,4.12,2.0,] name[2.5,] %self[4.5,4.12,2.0,] 	 SYMBOL:	 ARGS:name,%self,
CLOSURE BEGIN: %self[4.5,4.12,2.0,] name[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->attachment_named def_%cl_1_3 %self[2.0,] name[] 	 SYMBOL:	 ARGS:name,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 17: 
		 18: COPY TYPE_StringLiteral "?" def_%v_14 
		 19: BUILDSTRING def_%v_15 name[2.5,] %v_14[4.18,] 
		 20: %self->define_method def_%v_16 %self[4.5,4.12,4.16,2.0,] %v_15[4.19,] %self[4.5,4.12,4.16,2.0,] 	 SYMBOL:	 ARGS:%v_15,%self,
CLOSURE BEGIN: %self[4.5,4.12,4.16,2.0,] name[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->attachment_named def_%cl_2_3 %self[2.0,] name[] 	 SYMBOL:	 ARGS:name,
		 2: %cl_2_3->!= def_%cl_2_4 %cl_2_3[3.1,] 	 SYMBOL:	 ARGS:Nil,
		 3: RETURN %cl_2_4[3.2,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 21: RETURN %v_16[4.20,] %self[4.5,4.12,4.16,4.20,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = has_many_attachments instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: RECEIVECONSTARG def_options 
		 7: options[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN options->[] 
		 2: 
		 3: (Attachment) def_%v_4 
		 4: %v_4->definitions def_%v_5 %v_4[4.3,] 	 SYMBOL:	 ARGS:
		 5: %self->name def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 6: %v_5->[] def_%v_7 %v_5[4.4,] %v_6[4.5,] 	 SYMBOL:	 ARGS:%v_6,
		 7: ATTRASSIGN %v_7->[] name[2.5,] options[4.1,3.1,2.6,] 
		 8: 
		 9: %self->define_method def_%v_8 %self[4.5,2.0,] name[2.5,] %self[4.5,2.0,] 	 SYMBOL:	 ARGS:name,%self,
CLOSURE BEGIN: %self[4.5,2.0,] name[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->attachments def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->named def_%cl_1_4 %cl_1_3[3.1,] name[] 	 SYMBOL:	 ARGS:name,
		 3: RETURN %cl_1_4[3.2,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: 
		 11: COPY TYPE_StringLiteral "?" def_%v_9 
		 12: BUILDSTRING def_%v_10 name[2.5,] %v_9[4.11,] 
		 13: %self->define_method def_%v_11 %self[4.5,4.9,2.0,] %v_10[4.12,] %self[4.5,4.9,2.0,] 	 SYMBOL:	 ARGS:%v_10,%self,
CLOSURE BEGIN: %self[4.5,4.9,2.0,] name[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->attachments def_%cl_2_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_2_3->named def_%cl_2_4 %cl_2_3[3.1,] name[] 	 SYMBOL:	 ARGS:name,
		 3: %cl_2_4->empty? def_%cl_2_5 %cl_2_4[3.2,] 	 SYMBOL:	 ARGS:
		 4: %cl_2_5->! def_%cl_2_6 %cl_2_5[3.3,] 	 SYMBOL:	 ARGS:
		 5: RETURN %cl_2_6[3.4,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_7 
		 1: def_%cl_2_8 %cl_2_7[4.0,] 
		 2: RETURN %cl_2_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 14: RETURN %v_11[4.13,] %self[4.5,4.9,4.13,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = attachments_as_of_version instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_version_number 
		 6: RECEIVEARG def_attachable 
		 7: 
		 8: (Attachment) def_%v_3 
		 9: (inherit Version) def_%v_4 %v_3[2.8,] 
		 10: %v_4[2.9,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.8,] 	 SYMBOL:Version,	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: attachable->id def_%v_5 attachable[2.6,] 	 SYMBOL:	 ARGS:
		 1: HASH-attachable_id- def_%v_6 %v_5[4.0,] 
		 2: %v_4->where def_%v_7 %v_4[3.0,2.9,] %v_6[4.1,] 	 SYMBOL:	 ARGS:%v_6,
		 3: attachable->attachable_type def_%v_8 attachable[4.0,2.6,] 	 SYMBOL:	 ARGS:
		 4: HASH-attachable_type- def_%v_9 %v_8[4.3,] 
		 5: %v_7->where def_%v_10 %v_7[4.2,] %v_9[4.4,] 	 SYMBOL:	 ARGS:%v_9,
		 6: HASH-attachable_version- def_%v_11 version_number[2.5,] 
		 7: %v_10->where def_%v_12 %v_10[4.5,] %v_11[4.6,] 	 SYMBOL:	 ARGS:%v_11,
		 8: %v_12->order def_%v_13 %v_12[4.7,] 	 SYMBOL:version,	 ARGS:Symbol,
		 9: %v_13->load def_%v_14 %v_13[4.8,] 	 SYMBOL:	 ARGS:
		 10: COPY TYPE_PASS def_found_versions %v_14[4.9,] 
		 11: 
		 12: COPY TYPE_Array def_%v_15 
		 13: COPY TYPE_PASS def_found_attachments %v_15[4.12,] 
		 14: 
		 15: %v_14->each def_%v_16 %v_14[4.9,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_14,
CLOSURE BEGIN: av[] found_attachments[4.13,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_av 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: av->build_object_from_version def_%cl_1_3 av[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_record %cl_1_3[3.1,] 
		 3: 
		 4: found_attachments-><< def_%cl_1_4 found_attachments[] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:record,
		 5: RETURN %cl_1_4[3.4,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: record[3.2,] 
		 16: 
		 17: found_attachments->delete_if def_%v_17 found_attachments[4.13,] %self[2.0,] 	 SYMBOL:	 ARGS:found_attachments,
CLOSURE BEGIN: value[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_value 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: value->deleted? def_%cl_2_3 value[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 18: 
		 19: RETURN found_attachments[4.13,4.17,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = definitions_for instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: 
		 7: (Attachment) def_%v_3 
		 8: %v_3->definitions def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: %self->name def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 10: %v_4->[] def_%v_6 %v_4[2.8,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_5,
		 11: %v_6->[] def_%v_7 %v_6[2.10,] name[2.5,] 	 SYMBOL:	 ARGS:name,
		 12: RETURN %v_7[2.11,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = check_for_updated_attachments instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->attachments_changed def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "true" def_%v_4 
		 8: %v_3->== def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->attachments_were_updated? def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_%v_5 %v_6[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_5[3.1,2.8,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->changed_attributes def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "attachments" def_%v_8 
		 3: COPY TYPE_StringLiteral "Uploaded new files" def_%v_9 
		 4: ATTRASSIGN %v_7->[] %v_8[5.2,] %v_9[5.3,] 
		 5: RETURN %v_9[5.3,] %self[5.1,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = attachments_were_updated? instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->attachments def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->each def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: a[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_a 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: a->changed? def_%cl_1_3 a[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: RETURN %self[2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[7.0,] 
		 2: RETURN %cl_1_6[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: 
		 9: RETURN %self[2.0,2.6,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%v_5 
		 1: def_%v_6 %v_5[4.0,] 
		 2: RETURN %v_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = attachment_names instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Attachment) def_%v_3 
		 7: %v_3->definitions def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %self->class def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 9: %v_5->name def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: %v_4->[] def_%v_7 %v_4[2.7,] %v_6[2.9,] 	 SYMBOL:	 ARGS:%v_6,
		 11: %v_7->keys def_%v_8 %v_7[2.10,] 	 SYMBOL:	 ARGS:
		 12: RETURN %v_8[2.11,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = after_publish instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->attachments def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->each def_%v_4 %v_3[2.6,] 	 SYMBOL:publish,	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = attachment_named instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: 
		 7: %self->attachments def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->select def_%v_4 %v_3[2.7,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: item[] name[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_item 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: item->attachment_name def_%cl_1_3 item[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->to_sym def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->== def_%cl_1_5 %cl_1_4[3.2,] name[] 	 SYMBOL:	 ARGS:name,
		 4: RETURN %cl_1_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: %v_4->first def_%v_5 %v_4[2.8,] 	 SYMBOL:	 ARGS:
		 10: RETURN %v_5[2.9,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = unassigned_attachments instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->attachment_id_list def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->blank? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_5 
		 1: RETURN %v_5[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
		 1: 
		 2: (Attachment) def_%v_7 
		 3: %self->attachment_id_list def_%v_8 %self[2.0,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_StringLiteral "," def_%v_9 
		 5: %v_8->split def_%v_10 %v_8[4.3,] %v_9[4.4,] 	 SYMBOL:	 ARGS:%v_9,
		 6: %v_10->map def_%v_11 %v_10[4.5,] 	 SYMBOL:to_i,	 ARGS:
		 7: %v_7->find def_%v_12 %v_7[4.2,] %v_11[4.6,] 	 SYMBOL:	 ARGS:%v_11,
		 8: RETURN %v_12[4.7,] %self[4.3,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = all_attachments instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->attachments def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %self->unassigned_attachments def_%v_4 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_3-><< def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = attachable_type instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->class def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->name def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = after_build_new_version instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_new_version 
		 6: 
		 7: %self->attachments def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->each def_%v_4 %v_3[2.7,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: new_version[2.5,] a[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_a 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: new_version->version def_%cl_1_3 new_version[] 	 SYMBOL:	 ARGS:
		 2: ATTRASSIGN a->attachable_version %cl_1_3[3.1,] 
		 3: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: RETURN %v_4[2.8,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = after_as_of_version instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->class def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %self->version def_%v_4 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_3->attachments_as_of_version def_%v_5 %v_3[2.6,] %v_4[2.7,] %self[2.0,2.6,2.7,] 	 SYMBOL:	 ARGS:%v_4,%self,
		 9: ATTRASSIGN %self->attachments_as_of %v_5[2.8,] 
		 10: 
		 11: def_%v_6 %self[2.0,2.6,2.7,2.9,] 
		 12: def_%v_7 %v_6[2.11,] %v_0[2.1,] 
		 13: COPY TYPE_PASS def_metaclass %v_7[2.12,] 
		 14: 
		 15: %v_7->send def_%v_8 %v_7[2.12,] %self[2.0,2.6,2.7,2.9,] 	 SYMBOL:define_method,attachments,	 ARGS:Symbol,Symbol,%v_7,
CLOSURE BEGIN: %self[2.0,2.6,2.7,2.9,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: GETFIELD %self->attachments_as_of def_%cl_1_3 %self[2.0,] 
		 6: RETURN %cl_1_3[2.5,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 16: RETURN %v_8[2.15,] %self[2.0,2.6,2.7,2.9,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%v_9 
		 1: def_%v_10 %v_9[4.0,] 
		 2: RETURN %v_10[4.1,] %self[2.0,2.9,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = after_revert instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_version 
		 6: 
		 7: version->version def_%v_3 version[2.5,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_PASS def_version_number %v_3[2.7,] 
		 9: 
		 10: %self->attachments def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 11: %v_4->each def_%v_5 %v_4[2.10,] %self[2.0,2.10,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: %self[2.0,2.10,] a[] version_number[2.8,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_a 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->version def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->+ def_%cl_1_4 %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:Fixnum,
		 3: HASH-attachable_version- def_%cl_1_5 %cl_1_4[3.2,] 
		 4: a->revert_to def_%cl_1_6 a[2.2,] version_number[] %cl_1_5[3.3,] 	 SYMBOL:	 ARGS:version_number,%cl_1_5,
		 5: RETURN %cl_1_6[3.4,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 12: RETURN %v_5[2.11,] %self[2.0,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ensure_attachment_exists instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->attachment_names def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->each def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: n[] %self[2.0,2.6,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_n 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: n->to_sym def_%cl_1_3 n[2.2,] 	 SYMBOL:	 ARGS:
		 2: %self->attachment_named def_%cl_1_4 %self[2.0,] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_5 
		 1: RETURN %cl_1_5[4.0,] %self[2.0,] 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->attachments def_%cl_1_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: (Attachment) def_%cl_1_7 
		 3: HASH-attachment_name-attachable- def_%cl_1_8 n[2.2,] %self[5.1,2.0,] 
		 4: %cl_1_7->new def_%cl_1_9 %cl_1_7[5.2,] %cl_1_8[5.3,] 	 SYMBOL:	 ARGS:%cl_1_8,
		 5: %cl_1_6-><< def_%cl_1_10 %cl_1_6[5.1,] %cl_1_9[5.4,] 	 SYMBOL:	 ARGS:%cl_1_9,
		 6: RETURN %cl_1_10[5.5,] %self[5.1,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_11 
		 1: def_%cl_1_12 %cl_1_11[7.0,] 
		 2: RETURN %cl_1_12[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = multiple_attachments instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->attachments def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->select def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: a[] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_a 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: a->cardinality def_%cl_1_3 a[2.2,] 	 SYMBOL:	 ARGS:
		 2: (Attachment) def_%cl_1_4 
		 3: (inherit MULTIPLE) def_%cl_1_5 %cl_1_4[3.2,] 
		 4: %cl_1_5[3.3,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: %cl_1_4->const_missing def_%cl_1_5 %cl_1_4[3.2,] 	 SYMBOL:MULTIPLE,	 ARGS:Symbol,
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: %cl_1_3->== def_%cl_1_6 %cl_1_3[3.1,] %cl_1_5[4.0,3.3,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 1: RETURN %cl_1_6[5.0,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[6.0,] 
		 2: RETURN %cl_1_8[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = save_associated_attachments instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->logger def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "save_associated_attachments " def_%v_4 
		 8: %self->attachments def_%v_5 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 9: BUILDSTRING def_%v_6 %v_4[2.7,] %v_5[2.8,] 
		 10: %v_3->warn def_%v_7 %v_3[2.6,] %v_6[2.9,] 	 SYMBOL:	 ARGS:%v_6,
		 11: 
		 12: %self->attachments def_%v_8 %self[2.0,2.6,2.8,] 	 SYMBOL:	 ARGS:
		 13: %v_8->each def_%v_9 %v_8[2.12,] %self[2.0,2.6,2.8,2.12,] 	 SYMBOL:	 ARGS:%v_8,
CLOSURE BEGIN: a[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_a 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: a->changed? def_%cl_1_3 a[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: a->save def_%cl_1_4 a[2.2,] 	 SYMBOL:	 ARGS:
		 1: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_1_4[4.0,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[7.0,] 
		 2: RETURN %cl_1_6[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 14: RETURN %v_9[2.13,] %self[2.0,2.6,2.8,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ensure_status_matches_attachable instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->class def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->archivable? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->attachments def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_5->each def_%v_6 %v_5[3.1,] %self[3.1,2.0,] 	 SYMBOL:	 ARGS:%v_5,
CLOSURE BEGIN: %self[3.1,2.0,] a[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_a 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->archived def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: ATTRASSIGN a->archived %cl_1_3[3.1,] 
		 3: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->class def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_7->publishable? def_%v_8 %v_7[5.1,] 	 SYMBOL:	 ARGS:
		 3: BRANCH %v_8[5.2,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->attachments def_%v_9 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_9->each def_%v_10 %v_9[6.1,] %self[6.1,2.0,] 	 SYMBOL:	 ARGS:%v_9,
CLOSURE BEGIN: %self[6.1,2.0,] a[3.2,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_a 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->publish_on_save def_%cl_2_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: ATTRASSIGN a->publish_on_save %cl_2_3[3.1,] 
		 3: RETURN %cl_2_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: RETURN %v_10[6.2,] %self[6.1,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = associate_new_attachments instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->attachment_id_list def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->blank? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: RETURN %v_5[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->attachment_id_list def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "," def_%v_7 
		 3: %v_6->split def_%v_8 %v_6[4.1,] %v_7[4.2,] 	 SYMBOL:	 ARGS:%v_7,
		 4: %v_8->map def_%v_9 %v_8[4.3,] 	 SYMBOL:to_i,	 ARGS:
		 5: COPY TYPE_PASS def_ids %v_9[4.4,] 
		 6: 
		 7: %v_9->each def_%v_10 %v_9[4.4,] %self[4.1,2.0,] 	 SYMBOL:	 ARGS:%v_9,
CLOSURE BEGIN: i[] attachment[] %self[4.1,2.0,] 
BB 1
	outgoing: 20 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_i 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
		 5: 
		 6: GLOBALVAR $! def_%cl_1_3 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: (Attachment) def_%cl_1_6 
		 3: %cl_1_6->find def_%cl_1_7 %cl_1_6[4.2,] i[2.2,] 	 SYMBOL:	 ARGS:i,
		 4: COPY TYPE_PASS def_attachment %cl_1_7[4.3,] 
		 5: COPY TYPE_PASS def_%cl_1_5 %cl_1_7[4.3,] 
		 6: 
		 7: %cl_1_3[2.6,] 
BB 6
	outgoing: 14 
	datadep: 
	instructions:
		 0: 
BB 7
	outgoing: 8 9 13 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_8 
		 2: (ActiveRecord) def_%cl_1_9 
		 3: (inherit RecordNotFound) def_%cl_1_10 %cl_1_9[7.2,] 
		 4: %cl_1_10[7.3,] 
BB 8
	outgoing: 9 13 
	datadep: 
	instructions:
		 0: %cl_1_9->const_missing def_%cl_1_10 %cl_1_9[7.2,] 	 SYMBOL:RecordNotFound,	 ARGS:Symbol,
BB 9
	outgoing: 10 11 13 
	datadep: 
	instructions:
		 0: def_%cl_1_11 %cl_1_10[8.0,7.3,] %cl_1_8[7.1,] 
		 1: BRANCH %cl_1_11[9.0,] 
BB 10
	outgoing: 13 20 
	datadep: 
	instructions:
		 0: %cl_1_8[7.1,] 
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_5 
		 1: 
		 2: %cl_1_3[2.6,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: 
BB 13
	outgoing: 18 20 
	datadep: 
	instructions:
		 0: def_%cl_1_12 
		 1: def_%cl_1_13 %cl_1_12[13.0,] %cl_1_3[2.6,] 
		 2: %cl_1_12[13.0,] 
BB 14
	outgoing: 15 16 
	datadep: 
	instructions:
		 0: 
		 1: BRANCH attachment[4.4,] 
BB 15
	outgoing: 17 18 
	datadep: 
	instructions:
		 0: 
		 1: %self->version def_%cl_1_14 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: ATTRASSIGN attachment->attachable_version %cl_1_14[15.1,] 
		 3: 
		 4: %self->attachments def_%cl_1_15 %self[15.1,2.0,] 	 SYMBOL:	 ARGS:
		 5: %cl_1_15-><< def_%cl_1_16 %cl_1_15[15.4,] attachment[15.2,4.4,] 	 SYMBOL:	 ARGS:attachment,
		 6: 
BB 16
	outgoing: 20 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 17
	outgoing: 20 
	datadep: 
	instructions:
		 0: RETURN %cl_1_16[15.5,] %self[2.0,] 
BB 18
	outgoing: 20 
	datadep: 
	instructions:
		 0: def_%cl_1_17 
		 1: def_%cl_1_18 %cl_1_17[18.0,] 
		 2: RETURN %cl_1_18[18.1,] %self[2.0,] 
BB 20
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: attachment[15.2,4.4,] 
		 8: RETURN %v_10[4.7,] %self[4.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = filter_generic_attachment_errors instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: %self->filter_errors_named def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = initialize_attachments instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->attachments def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->each def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: %self[2.0,2.6,] a[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_a 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->attachable_type def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: ATTRASSIGN a->attachable_class %cl_1_3[3.1,] 
		 3: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = filter_errors_named instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_filter_list 
		 6: 
		 7: %self->errors def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_3->reject def_%v_4 %v_3[2.7,] %self[2.0,2.7,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: err[] filter_list[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_err 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: err->first def_%cl_1_3 err[2.2,] 	 SYMBOL:	 ARGS:
		 2: filter_list->include? def_%cl_1_4 filter_list[] %cl_1_3[3.1,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: COPY TYPE_PASS def_filtered_errors %v_4[2.8,] 
		 10: 
		 11: %self->errors def_%v_5 %self[2.0,2.7,] 	 SYMBOL:	 ARGS:
		 12: %v_5->clear def_%v_6 %v_5[2.11,] 	 SYMBOL:	 ARGS:
		 13: 
		 14: filtered_errors->each def_%v_7 filtered_errors[2.9,] %self[2.0,2.7,2.11,] 	 SYMBOL:	 ARGS:filtered_errors,
CLOSURE BEGIN: %self[2.0,2.7,2.11,] err[2.8,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_err 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%cl_2_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: def_%cl_2_4 err[2.2,] 
		 3: %cl_2_3->add def_%cl_2_5 %cl_2_3[3.1,] %cl_2_4[3.2,] 	 SYMBOL:	 ARGS:Splat,
		 4: RETURN %cl_2_5[3.3,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_6 
		 1: def_%cl_2_7 %cl_2_6[4.0,] 
		 2: RETURN %cl_2_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 15: RETURN %v_7[2.14,] %self[2.0,2.7,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

