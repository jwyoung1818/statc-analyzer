SET IRMethod, name = included
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_model_class 
		 6: 
		 7: (MacroMethods) def_%v_3 
		 8: model_class->extend def_%v_4 model_class[2.5,] %v_3[2.7,] 	 ARGS:%v_3,
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = searchable?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->is_searchable def_%v_3 %self[2.0,] 
		 7: %v_3->! def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->! def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = is_searchable
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_options 
		 6: options[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->is_searchable 
		 2: 
		 3: options->[] def_%v_4 options[3.1,2.5,] 	 ARGS:Symbol,
		 4: BRANCH %v_4[4.3,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: options->[] def_%v_5 options[3.1,2.5,] 	 ARGS:Symbol,
		 1: %v_5->map def_%v_6 %v_5[5.0,] 	 ARGS:
		 2: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_7 
		 1: COPY TYPE_PASS def_%v_6 %v_7[6.0,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: ATTRASSIGN %self->searchable_columns %v_6[6.1,5.1,] 
		 1: 
		 2: (ClassMethods) def_%v_8 
		 3: %self->extend def_%v_9 %self[7.0,4.1,2.0,] %v_8[7.2,] 	 ARGS:%v_8,
		 4: 
		 5: %self->lambda def_%v_10 %self[7.0,7.3,4.1,2.0,] %self[7.0,7.3,4.1,2.0,] 	 ARGS:%self,
CLOSURE BEGIN: search_params[] %self[7.0,7.3,4.1,2.0,] conditions[7.5,] c[] term[] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_search_params 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 10 
	datadep: 
	instructions:
		 0: 
		 1: (Hash) def_%cl_1_3 
		 2: search_params->is_a? def_%cl_1_4 search_params[2.2,] %cl_1_3[3.1,] 	 ARGS:%cl_1_3,
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 6 10 
	datadep: 
	instructions:
		 0: search_params->[] def_%cl_1_5 search_params[2.2,] 	 ARGS:Symbol,
		 1: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%cl_1_5 search_params[2.2,] 
BB 6
	outgoing: 7 8 10 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_term %cl_1_5[5.0,4.0,] 
		 1: 
		 2: COPY TYPE_Array def_%cl_1_6 
		 3: COPY TYPE_PASS def_conditions %cl_1_6[6.2,] 
		 4: 
		 5: %cl_1_5->blank? def_%cl_1_7 %cl_1_5[5.0,4.0,] 	 ARGS:
		 6: BRANCH %cl_1_7[6.5,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_8 
		 1: 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->searchable_columns def_%cl_1_9 %self[2.0,] 	 ARGS:
		 2: %cl_1_9->each def_%cl_1_10 %cl_1_9[8.1,] %self[8.1,2.0,] 	 ARGS:%cl_1_9,
CLOSURE BEGIN: conditions[6.3,] %self[8.1,2.0,] c[8.2,] term[6.0,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_c 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: conditions->empty? def_%cl_2_3 conditions[] 	 ARGS:
		 2: BRANCH %cl_2_3[3.1,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->table_name def_%cl_2_4 %self[2.0,] 	 ARGS:
		 2: COPY TYPE_StringLiteral def_%cl_2_5 
		 3: COPY TYPE_StringLiteral def_%cl_2_6 
		 4: BUILDSTRING def_%cl_2_7 %cl_2_4[4.1,] %cl_2_5[4.2,] c[2.2,] %cl_2_6[4.3,] 
		 5: COPY TYPE_Array def_%cl_2_8 %cl_2_7[4.4,] 
		 6: COPY TYPE_PASS def_conditions %cl_2_8[4.5,] 
		 7: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: conditions->first def_%cl_2_9 conditions[] 	 ARGS:
		 2: COPY TYPE_StringLiteral def_%cl_2_10 
		 3: %self->table_name def_%cl_2_11 %self[2.0,] 	 ARGS:
		 4: COPY TYPE_StringLiteral def_%cl_2_12 
		 5: COPY TYPE_StringLiteral def_%cl_2_13 
		 6: BUILDSTRING def_%cl_2_14 %cl_2_10[5.2,] %cl_2_11[5.3,] %cl_2_12[5.4,] c[2.2,] %cl_2_13[5.5,] 
		 7: %cl_2_9-><< def_%cl_2_15 %cl_2_9[5.1,] %cl_2_14[5.6,] 	 ARGS:%cl_2_14,
		 8: COPY TYPE_PASS def_%cl_2_8 %cl_2_15[5.7,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%cl_2_16 
		 2: COPY TYPE_StringLiteral def_%cl_2_17 
		 3: BUILDSTRING def_%cl_2_18 %cl_2_16[6.1,] term[] %cl_2_17[6.2,] 
		 4: conditions-><< def_%cl_2_19 conditions[4.6,] %cl_2_18[6.3,] 	 ARGS:%cl_2_18,
		 5: RETURN %cl_2_19[6.4,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_2_20 
		 1: def_%cl_2_21 %cl_2_20[7.0,] 
		 2: RETURN %cl_2_21[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: conditions[4.6,] 
		 3: COPY TYPE_PASS def_%cl_1_8 %cl_1_10[8.2,] 
BB 9
	outgoing: 10 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->where def_%cl_1_11 %self[2.0,] conditions[8.2,6.3,] 	 ARGS:conditions,
		 2: RETURN %cl_1_11[9.1,] %self[9.1,2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_1_12 
		 1: def_%cl_1_13 %cl_1_12[10.0,] 
		 2: RETURN %cl_1_13[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: search_params[2.2,] term[6.0,] 
		 6: %self->scope def_%v_11 %self[7.0,7.3,7.5,4.1,2.0,] %v_10[7.5,] 	 ARGS:Symbol,%v_10,
		 7: RETURN %v_11[7.6,] %self[7.0,7.3,7.5,7.6,4.1,2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = searchable_columns
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->searchable_columns def_%v_3 %self[2.0,] 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

