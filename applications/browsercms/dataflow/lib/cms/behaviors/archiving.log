SET IRMethod, name = included instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_model_class 
		 6: 
		 7: (MacroMethods) def_%v_3 
		 8: model_class->extend def_%v_4 model_class[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = archivable? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->is_archivable def_%v_3 %self[2.0,] 
		 7: %v_3->! def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->! def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = is_archivable instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_options 
		 6: options[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->is_archivable 
		 2: 
		 3: (InstanceMethods) def_%v_4 
		 4: %self->include def_%v_5 %self[4.1,2.0,] %v_4[4.3,] 	 SYMBOL:	 ARGS:%v_4,
		 5: 
		 6: def_%v_6 %self[4.1,4.4,2.0,] 
CLOSURE BEGIN: %self[4.1,4.4,2.0,] 
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: HASH-archived- def_%cl_1_3 
		 6: %self->where def_%cl_1_4 %self[2.0,] %cl_1_3[2.5,] 	 SYMBOL:	 ARGS:%cl_1_3,
		 7: RETURN %cl_1_4[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[3.0,] 
		 2: RETURN %cl_1_6[3.1,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: %self->scope def_%v_7 %self[4.1,4.4,2.0,] %v_6[4.6,] 	 SYMBOL:archived,	 ARGS:Symbol,%v_6,
		 8: 
		 9: def_%v_8 %self[4.1,4.4,4.7,2.0,] 
CLOSURE BEGIN: %self[4.1,4.4,4.7,2.0,] 
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: HASH-archived- def_%cl_2_3 
		 6: %self->where def_%cl_2_4 %self[2.0,] %cl_2_3[2.5,] 	 SYMBOL:	 ARGS:%cl_2_3,
		 7: RETURN %cl_2_4[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[3.0,] 
		 2: RETURN %cl_2_6[3.1,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: %self->scope def_%v_9 %self[4.1,4.4,4.7,2.0,] %v_8[4.9,] 	 SYMBOL:not_archived,	 ARGS:Symbol,%v_8,
		 11: RETURN %v_9[4.10,] %self[4.1,4.4,4.7,4.10,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = archive instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: ATTRASSIGN %self->archived 
		 7: 
		 8: COPY TYPE_StringLiteral "Archived" def_%v_3 
		 9: ATTRASSIGN %self->version_comment %v_3[2.8,] 
		 10: 
		 11: %self->save def_%v_4 %self[2.0,2.6,2.9,] 	 SYMBOL:	 ARGS:
		 12: RETURN %v_4[2.11,] %self[2.0,2.6,2.9,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = archive! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: ATTRASSIGN %self->archived 
		 7: 
		 8: COPY TYPE_StringLiteral "Archived" def_%v_3 
		 9: ATTRASSIGN %self->version_comment %v_3[2.8,] 
		 10: 
		 11: %self->save! def_%v_4 %self[2.0,2.6,2.9,] 	 SYMBOL:	 ARGS:
		 12: RETURN %v_4[2.11,] %self[2.0,2.6,2.9,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = unarchive instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: ATTRASSIGN %self->archived 
		 7: 
		 8: COPY TYPE_StringLiteral "Unarchived" def_%v_3 
		 9: ATTRASSIGN %self->version_comment %v_3[2.8,] 
		 10: 
		 11: %self->save def_%v_4 %self[2.0,2.6,2.9,] 	 SYMBOL:	 ARGS:
		 12: RETURN %v_4[2.11,] %self[2.0,2.6,2.9,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = unarchive! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: ATTRASSIGN %self->archived 
		 7: 
		 8: COPY TYPE_StringLiteral "Unarchived" def_%v_3 
		 9: ATTRASSIGN %self->version_comment %v_3[2.8,] 
		 10: 
		 11: %self->save! def_%v_4 %self[2.0,2.6,2.9,] 	 SYMBOL:	 ARGS:
		 12: RETURN %v_4[2.11,] %self[2.0,2.6,2.9,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

