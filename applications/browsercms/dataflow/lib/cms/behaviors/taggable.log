SET IRMethod, name = included
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_model_class 
		 6: 
		 7: (MacroMethods) def_%v_3 
		 8: model_class->extend def_%v_4 model_class[2.5,] %v_3[2.7,] 	 ARGS:%v_3,
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = taggable?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->is_taggable def_%v_3 %self[2.0,] 
		 7: %v_3->! def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->! def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = is_taggable
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_options 
		 6: options[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->is_taggable 
		 2: 
		 3: options->[] def_%v_4 options[3.1,2.5,] 	 ARGS:Symbol,
		 4: BRANCH %v_4[4.3,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_5 
		 1: COPY TYPE_PASS def_%v_4 %v_5[5.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: ATTRASSIGN %self->tag_separator %v_4[5.1,4.3,] 
		 1: 
		 2: COPY TYPE_StringLiteral def_%v_6 
		 3: HASH-as-class_name- def_%v_7 %v_6[6.2,] 
		 4: %self->has_many def_%v_8 %self[6.0,4.1,2.0,] %v_7[6.3,] 	 ARGS:Symbol,%v_7,
		 5: 
		 6: def_%v_9 %self[6.0,6.4,4.1,2.0,] 
CLOSURE BEGIN: %self[6.0,6.4,4.1,2.0,] 
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: (Tag) def_%cl_1_3 
		 6: %cl_1_3->table_name def_%cl_1_4 %cl_1_3[2.5,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%cl_1_5 
		 8: BUILDSTRING def_%cl_1_6 %cl_1_4[2.6,] %cl_1_5[2.7,] 
		 9: %self->order def_%cl_1_7 %self[2.0,] %cl_1_6[2.8,] 	 ARGS:%cl_1_6,
		 10: RETURN %cl_1_7[2.9,] %self[2.0,2.9,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[3.0,] 
		 2: RETURN %cl_1_9[3.1,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 7: COPY TYPE_StringLiteral def_%v_10 
		 8: HASH-class_name-through- def_%v_11 %v_10[6.7,] 
		 9: %self->has_many def_%v_12 %self[6.0,6.4,4.1,2.0,] %v_9[6.6,] %v_11[6.8,] 	 ARGS:Symbol,%v_9,%v_11,
		 10: 
		 11: %self->after_save def_%v_13 %self[6.0,6.4,6.9,4.1,2.0,] 	 ARGS:Symbol,
		 12: 
		 13: (ClassMethods) def_%v_14 
		 14: %self->extend def_%v_15 %self[6.0,6.4,6.9,6.11,4.1,2.0,] %v_14[6.13,] 	 ARGS:%v_14,
		 15: 
		 16: (InstanceMethods) def_%v_16 
		 17: %self->include def_%v_17 %self[6.0,6.4,6.9,6.11,6.14,4.1,2.0,] %v_16[6.16,] 	 ARGS:%v_16,
		 18: RETURN %v_17[6.17,] %self[6.0,6.4,6.9,6.11,6.14,6.17,4.1,2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tagged_with
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_t 
		 6: 
		 7: (Tag) def_%v_3 
		 8: %v_3->table_name def_%v_4 %v_3[2.7,] 	 ARGS:
		 9: COPY TYPE_StringLiteral def_%v_5 
		 10: BUILDSTRING def_%v_6 %v_4[2.8,] %v_5[2.9,] 
		 11: COPY TYPE_Array def_%v_7 %v_6[2.10,] t[2.5,] 
		 12: %self->where def_%v_8 %self[2.0,] %v_7[2.11,] 	 ARGS:%v_7,
		 13: HASH-taggings- def_%v_9 
		 14: %v_8->includes def_%v_10 %v_8[2.12,] %v_9[2.13,] 	 ARGS:%v_9,
		 15: %v_10->references def_%v_11 %v_10[2.14,] 	 ARGS:Symbol,
		 16: RETURN %v_11[2.15,] %self[2.0,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tag_cloud
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Tagging) def_%v_3 
		 7: %self->base_class def_%v_4 %self[2.0,] 	 ARGS:
		 8: %v_4->name def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: %v_3->cloud def_%v_6 %v_3[2.6,] %v_5[2.8,] 	 ARGS:%v_5,
		 10: RETURN %v_6[2.9,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tag_separator
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->tag_separator def_%v_3 %self[2.0,] 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tag_list
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->tag_list def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->tags def_%v_6 %self[2.0,] 	 ARGS:
		 1: %v_6->reload def_%v_7 %v_6[5.0,] 	 ARGS:
		 2: %v_7->map def_%v_8 %v_7[5.1,] 	 ARGS:
		 3: %self->class def_%v_9 %self[5.0,2.0,] 	 ARGS:
		 4: %v_9->tag_separator def_%v_10 %v_9[5.3,] 	 ARGS:
		 5: %v_8->join def_%v_11 %v_8[5.2,] %v_10[5.4,] 	 ARGS:%v_10,
		 6: ATTRASSIGN %self->tag_list %v_11[5.5,] 
		 7: RETURN %v_11[5.5,] %self[5.0,5.3,5.6,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tag_list=
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_tag_names 
		 6: 
		 7: GETFIELD %self->tag_list def_%v_3 %self[2.0,] 
		 8: %v_3->== def_%v_4 %v_3[2.7,] tag_names[2.5,] 	 ARGS:tag_names,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->changed_attributes def_%v_6 %self[2.0,] 	 ARGS:
		 1: COPY TYPE_StringLiteral def_%v_7 
		 2: %self->tag_list def_%v_8 %self[4.0,2.0,] 	 ARGS:
		 3: ATTRASSIGN %v_6->[] %v_7[4.1,] %v_8[4.2,] 
		 4: COPY TYPE_PASS def_%v_5 %v_8[4.2,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->tag_list tag_names[2.5,] 
		 2: RETURN tag_names[2.5,] %self[5.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = save_tags
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->tag_list def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->to_s def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %self->class def_%v_5 %self[2.0,2.6,] 	 ARGS:
		 9: %v_5->tag_separator def_%v_6 %v_5[2.8,] 	 ARGS:
		 10: %v_4->split def_%v_7 %v_4[2.7,] %v_6[2.9,] 	 ARGS:%v_6,
		 11: %v_7->map def_%v_8 %v_7[2.10,] %self[2.0,2.6,2.8,] 	 ARGS:%v_7,
CLOSURE BEGIN: t[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_t 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (Tag) def_%cl_1_3 
		 2: t->strip def_%cl_1_4 t[2.2,] 	 ARGS:
		 3: HASH-name- def_%cl_1_5 %cl_1_4[3.2,] 
		 4: %cl_1_3->find_or_create_by def_%cl_1_6 %cl_1_3[3.1,] %cl_1_5[3.3,] 	 ARGS:%cl_1_5,
		 5: RETURN %cl_1_6[3.4,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 12: COPY TYPE_PASS def_tag_list_tags %v_8[2.11,] 
		 13: 
		 14: %self->taggings def_%v_9 %self[2.0,2.6,2.8,] 	 ARGS:
		 15: %v_9->each def_%v_10 %v_9[2.14,] %self[2.0,2.6,2.8,2.14,] 	 ARGS:%v_9,
CLOSURE BEGIN: tg[] tag_list_tags[2.12,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_tg 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: tg->tag def_%cl_2_3 tg[2.2,] 	 ARGS:
		 2: tag_list_tags->include? def_%cl_2_4 tag_list_tags[] %cl_2_3[3.1,] 	 ARGS:%cl_2_3,
		 3: BRANCH %cl_2_4[3.2,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: tg->tag def_%cl_2_5 tg[2.2,] 	 ARGS:
		 2: tag_list_tags->delete def_%cl_2_6 tag_list_tags[] %cl_2_5[4.1,] 	 ARGS:%cl_2_5,
		 3: 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: tg->destroy def_%cl_2_7 tg[2.2,] 	 ARGS:
		 2: RETURN %cl_2_7[5.1,] %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_2_6[4.2,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_2_8 
		 1: def_%cl_2_9 %cl_2_8[7.0,] 
		 2: RETURN %cl_2_9[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 16: 
		 17: tag_list_tags->each def_%v_11 tag_list_tags[2.12,] %self[2.0,2.6,2.8,2.14,] 	 ARGS:tag_list_tags,
CLOSURE BEGIN: %self[2.0,2.6,2.8,2.14,] t[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_t 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->taggings def_%cl_3_3 %self[2.0,] 	 ARGS:
		 2: HASH-tag-taggable- def_%cl_3_4 t[2.2,] %self[3.1,2.0,] 
		 3: %cl_3_3->create def_%cl_3_5 %cl_3_3[3.1,] %cl_3_4[3.2,] 	 ARGS:%cl_3_4,
		 4: RETURN %cl_3_5[3.3,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_6 
		 1: def_%cl_3_7 %cl_3_6[4.0,] 
		 2: RETURN %cl_3_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 18: 
		 19: ATTRASSIGN %self->tag_list 
		 20: RETURN %self[2.0,2.6,2.8,2.14,2.19,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

