SET IRMethod, name = is_addressable
BB 1
	outgoing: 32 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_options 
		 6: options[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%v_4 
		 2: HASH-as-inverse_of-class_name-validate- def_%v_5 %v_4[4.1,] 
		 3: COPY TYPE_PASS def_has_one_options %v_5[4.2,] 
		 4: 
		 5: options->[] def_%v_6 options[3.1,2.5,] 	 ARGS:Symbol,
		 6: BRANCH %v_6[4.5,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: options->[] def_%v_7 options[3.1,2.5,] 	 ARGS:Symbol,
		 2: %self->before_destroy def_%v_8 %self[2.0,] %v_7[5.1,] 	 ARGS:%v_7,
		 3: 
		 4: %self->after_destroy def_%v_9 %self[5.2,2.0,] 	 ARGS:Symbol,
		 5: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN has_one_options->[] 
		 2: COPY TYPE_Symbol def_%v_9 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->has_one def_%v_10 %self[2.0,] has_one_options[6.1,4.3,] 	 ARGS:Symbol,has_one_options,
		 2: 
		 3: %self->after_save def_%v_11 %self[7.1,2.0,] %self[7.1,2.0,] 	 ARGS:%self,
CLOSURE BEGIN: %self[7.1,2.0,] 
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->section_node def_%cl_1_3 %self[2.0,] 	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 5 9 
	datadep: 
	instructions:
		 0: %self->section_node def_%cl_1_4 %self[2.0,] 	 ARGS:
		 1: %cl_1_4->changed? def_%cl_1_5 %cl_1_4[4.0,] 	 ARGS:
		 2: COPY TYPE_PASS def_%cl_1_3 %cl_1_5[4.1,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_3[4.2,3.1,] 
BB 6
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->section_node def_%cl_1_6 %self[2.0,] 	 ARGS:
		 2: %cl_1_6->save def_%cl_1_7 %cl_1_6[6.1,] 	 ARGS:
		 3: 
BB 7
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 8
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %cl_1_7[6.2,] %self[2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[9.0,] 
		 2: RETURN %cl_1_9[9.1,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 4: 
		 5: %self->after_validation def_%v_12 %self[7.1,7.3,2.0,] %self[7.1,7.3,2.0,] 	 ARGS:%self,
CLOSURE BEGIN: %self[7.1,7.3,2.0,] message[] 
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->section_node def_%cl_2_3 %self[2.0,] 	 ARGS:
		 2: BRANCH %cl_2_3[3.1,] 
BB 4
	outgoing: 5 9 
	datadep: 
	instructions:
		 0: %self->section_node def_%cl_2_4 %self[2.0,] 	 ARGS:
		 1: %cl_2_4->valid? def_%cl_2_5 %cl_2_4[4.0,] 	 ARGS:
		 2: %cl_2_5->! def_%cl_2_6 %cl_2_5[4.1,] 	 ARGS:
		 3: COPY TYPE_PASS def_%cl_2_3 %cl_2_6[4.2,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %cl_2_3[4.3,3.1,] 
BB 6
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->section_node def_%cl_2_7 %self[2.0,] 	 ARGS:
		 2: %cl_2_7->errors def_%cl_2_8 %cl_2_7[6.1,] 	 ARGS:
		 3: %cl_2_8->[] def_%cl_2_9 %cl_2_8[6.2,] 	 ARGS:Symbol,
		 4: %cl_2_9->each def_%cl_2_10 %cl_2_9[6.3,] %self[6.1,2.0,] 	 ARGS:%cl_2_9,
CLOSURE BEGIN: %self[6.1,2.0,] message[6.4,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_message 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%cl_3_3 %self[2.0,] 	 ARGS:
		 2: %cl_3_3->add def_%cl_3_4 %cl_3_3[3.1,] message[2.2,] 	 ARGS:Symbol,message,
		 3: RETURN %cl_3_4[3.2,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_5 
		 1: def_%cl_3_6 %cl_3_5[4.0,] 
		 2: RETURN %cl_3_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 5: 
BB 7
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 8
	outgoing: 11 
	datadep: 
	instructions:
		 0: RETURN %cl_2_10[6.4,] %self[2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: def_%cl_2_11 
		 1: def_%cl_2_12 %cl_2_11[9.0,] 
		 2: RETURN %cl_2_12[9.1,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 6: 
		 7: (Concerns) def_%v_13 
		 8: (inherit Addressable) def_%v_14 %v_13[7.7,] 
		 9: %v_14[7.8,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: %v_13->const_missing def_%v_14 %v_13[7.7,] 	 ARGS:Symbol,
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: %self->include def_%v_15 %self[2.0,] %v_14[8.0,7.8,] 	 ARGS:%v_14,
		 1: 
		 2: (Concerns) def_%v_16 
		 3: (inherit Addressable) def_%v_17 %v_16[9.2,] 
		 4: %v_17[9.3,] 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: %v_16->const_missing def_%v_17 %v_16[9.2,] 	 ARGS:Symbol,
BB 11
	outgoing: 12 13 
	datadep: 
	instructions:
		 0: (inherit ClassMethods) def_%v_18 %v_17[10.0,9.3,] 
		 1: %v_18[11.0,] 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: %v_17->const_missing def_%v_18 %v_17[10.0,9.3,] 	 ARGS:Symbol,
BB 13
	outgoing: 14 15 
	datadep: 
	instructions:
		 0: %self->extend def_%v_19 %self[2.0,] %v_18[12.0,11.0,] 	 ARGS:%v_18,
		 1: 
		 2: (Concerns) def_%v_20 
		 3: (inherit Addressable) def_%v_21 %v_20[13.2,] 
		 4: %v_21[13.3,] 
BB 14
	outgoing: 15 
	datadep: 
	instructions:
		 0: %v_20->const_missing def_%v_21 %v_20[13.2,] 	 ARGS:Symbol,
BB 15
	outgoing: 16 17 
	datadep: 
	instructions:
		 0: (inherit NodeAccessors) def_%v_22 %v_21[14.0,13.3,] 
		 1: %v_22[15.0,] 
BB 16
	outgoing: 17 
	datadep: 
	instructions:
		 0: %v_21->const_missing def_%v_22 %v_21[14.0,13.3,] 	 ARGS:Symbol,
BB 17
	outgoing: 18 19 
	datadep: 
	instructions:
		 0: %self->include def_%v_23 %self[2.0,] %v_22[16.0,15.0,] 	 ARGS:%v_22,
		 1: 
		 2: (Concerns) def_%v_24 
		 3: (inherit Addressable) def_%v_25 %v_24[17.2,] 
		 4: %v_25[17.3,] 
BB 18
	outgoing: 19 
	datadep: 
	instructions:
		 0: %v_24->const_missing def_%v_25 %v_24[17.2,] 	 ARGS:Symbol,
BB 19
	outgoing: 20 21 
	datadep: 
	instructions:
		 0: (inherit MarkAsDirty) def_%v_26 %v_25[18.0,17.3,] 
		 1: %v_26[19.0,] 
BB 20
	outgoing: 21 
	datadep: 
	instructions:
		 0: %v_25->const_missing def_%v_26 %v_25[18.0,17.3,] 	 ARGS:Symbol,
BB 21
	outgoing: 22 23 
	datadep: 
	instructions:
		 0: %self->include def_%v_27 %self[2.0,] %v_26[20.0,19.0,] 	 ARGS:%v_26,
		 1: 
		 2: (Configuration) def_%v_28 
		 3: (inherit ConfigurableTemplate) def_%v_29 %v_28[21.2,] 
		 4: %v_29[21.3,] 
BB 22
	outgoing: 23 
	datadep: 
	instructions:
		 0: %v_28->const_missing def_%v_29 %v_28[21.2,] 	 ARGS:Symbol,
BB 23
	outgoing: 24 25 
	datadep: 
	instructions:
		 0: %self->extend def_%v_30 %self[2.0,] %v_29[22.0,21.3,] 	 ARGS:%v_29,
		 1: 
		 2: options->[] def_%v_31 options[3.1,2.5,] 	 ARGS:Symbol,
		 3: BRANCH %v_31[23.2,] 
BB 24
	outgoing: 26 
	datadep: 
	instructions:
		 0: 
		 1: options->[] def_%v_32 options[3.1,2.5,] 	 ARGS:Symbol,
		 2: ATTRASSIGN %self->path %v_32[24.1,] 
		 3: 
		 4: (GenericSitemapBehavior) def_%v_33 
		 5: %self->include def_%v_34 %self[24.2,2.0,] %v_33[24.4,] 	 ARGS:%v_33,
		 6: 
BB 25
	outgoing: 26 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_34 
BB 26
	outgoing: 27 28 
	datadep: 
	instructions:
		 0: 
		 1: options->[] def_%v_35 options[3.1,2.5,] 	 ARGS:Symbol,
		 2: ATTRASSIGN %self->template %v_35[26.1,] 
		 3: 
		 4: options->[] def_%v_36 options[26.1,3.1,2.5,] 	 ARGS:Symbol,
		 5: BRANCH %v_36[26.4,] 
BB 27
	outgoing: 32 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_37 
		 1: RETURN %v_37[27.0,] %self[26.2,24.2,2.0,] 
BB 28
	outgoing: 29 30 
	datadep: 
	instructions:
		 0: 
		 1: (Addressable) def_%v_38 
		 2: (inherit DynamicPath) def_%v_39 %v_38[28.1,] 
		 3: %v_39[28.2,] 
BB 29
	outgoing: 30 
	datadep: 
	instructions:
		 0: %v_38->const_missing def_%v_39 %v_38[28.1,] 	 ARGS:Symbol,
BB 30
	outgoing: 32 
	datadep: 
	instructions:
		 0: %self->include def_%v_40 %self[26.2,24.2,2.0,] %v_39[29.0,28.2,] 	 ARGS:%v_39,
		 1: RETURN %v_40[30.0,] %self[30.0,26.2,24.2,2.0,] 
BB 32
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = addressable?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = requires_slug?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = included
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_klass 
		 6: 
		 7: klass->before_validation def_%v_3 klass[2.5,] 	 ARGS:Symbol,
		 8: RETURN %v_3[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = partial_for
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = hidden?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = assign_parent_if_needed
BB 1
	outgoing: 14 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->parent def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->parent_id def_%v_4 %self[2.0,] 	 ARGS:
		 1: COPY TYPE_PASS def_%v_3 %v_4[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.6,] 
BB 5
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: RETURN %v_5[5.0,] %self[2.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: (Section) def_%v_6 
		 2: %self->class def_%v_7 %self[2.0,] 	 ARGS:
		 3: %v_7->path def_%v_8 %v_7[6.2,] 	 ARGS:
		 4: %v_6->with_path def_%v_9 %v_6[6.1,] %v_8[6.3,] 	 ARGS:%v_8,
		 5: %v_9->first def_%v_10 %v_9[6.4,] 	 ARGS:
		 6: COPY TYPE_PASS def_new_parent %v_10[6.5,] 
		 7: 
		 8: BRANCH %v_10[6.5,] 
BB 7
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_11 
		 1: 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: %self->logger def_%v_12 %self[2.0,] 	 ARGS:
		 2: COPY TYPE_StringLiteral def_%v_13 
		 3: %self->try def_%v_14 %self[8.1,2.0,] 	 ARGS:Symbol,
		 4: COPY TYPE_StringLiteral def_%v_15 
		 5: %self->class def_%v_16 %self[8.1,8.3,2.0,] 	 ARGS:
		 6: %v_16->path def_%v_17 %v_16[8.5,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_18 
		 8: BUILDSTRING def_%v_19 %v_13[8.2,] %v_14[8.3,] %v_15[8.4,] %v_17[8.6,] %v_18[8.7,] 
		 9: %v_12->warn def_%v_20 %v_12[8.1,] %v_19[8.8,] 	 ARGS:%v_19,
		 10: 
		 11: %self->class def_%v_21 %self[8.1,8.3,8.5,2.0,] 	 ARGS:
		 12: %v_21->name def_%v_22 %v_21[8.11,] 	 ARGS:
		 13: %v_22->demodulize def_%v_23 %v_22[8.12,] 	 ARGS:
		 14: %v_23->pluralize def_%v_24 %v_23[8.13,] 	 ARGS:
		 15: %self->class def_%v_25 %self[8.1,8.3,8.5,8.11,2.0,] 	 ARGS:
		 16: %v_25->path def_%v_26 %v_25[8.15,] 	 ARGS:
		 17: HASH-name-path-hidden-allow_groups- def_%v_27 %v_24[8.14,] %v_26[8.16,] 
		 18: COPY TYPE_PASS def_section_attributes %v_27[8.17,] 
		 19: 
		 20: (Section) def_%v_28 
		 21: %v_28->root def_%v_29 %v_28[8.20,] 	 ARGS:
		 22: %v_29->first def_%v_30 %v_29[8.21,] 	 ARGS:
		 23: COPY TYPE_PASS def_section_parent %v_30[8.22,] 
		 24: 
		 25: BRANCH %v_30[8.22,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN section_attributes->[] section_parent[8.23,] 
		 2: COPY TYPE_PASS def_%v_31 section_parent[8.23,] 
		 3: 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_31 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: (Section) def_%v_32 
		 2: %v_32->create! def_%v_33 %v_32[11.1,] section_attributes[9.1,8.18,] 	 ARGS:section_attributes,
		 3: COPY TYPE_PASS def_new_parent %v_33[11.2,] 
		 4: COPY TYPE_PASS def_%v_11 %v_33[11.2,] 
BB 12
	outgoing: 14 
	datadep: 
	instructions:
		 0: 
		 1: new_parent->id def_%v_34 new_parent[11.3,6.6,] 	 ARGS:
		 2: ATTRASSIGN %self->parent_id %v_34[12.1,] 
		 3: RETURN %v_34[12.1,] %self[12.2,2.0,] 
BB 14
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = requires_slug?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->path def_%v_3 %self[2.0,] 
		 7: %v_3->nil? def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->! def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = path
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->path def_%v_3 %self[2.0,] 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = addressable?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = calculate_path
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_slug 
		 6: 
		 7: %self->path def_%v_3 %self[2.0,] 	 ARGS:
		 8: COPY TYPE_StringLiteral def_%v_4 
		 9: BUILDSTRING def_%v_5 %v_3[2.7,] %v_4[2.8,] slug[2.5,] 
		 10: RETURN %v_5[2.9,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = base_path
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->path def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: BUILDSTRING def_%v_5 %v_3[2.6,] %v_4[2.7,] 
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = with_slug
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_slug 
		 6: 
		 7: (SectionNode) def_%v_3 
		 8: HASH-slug- def_%v_4 slug[2.5,] 
		 9: %v_3->where def_%v_5 %v_3[2.7,] %v_4[2.8,] 	 ARGS:%v_4,
		 10: %self->name def_%v_6 %self[2.0,] 	 ARGS:
		 11: HASH-node_type- def_%v_7 %v_6[2.10,] 
		 12: %v_5->where def_%v_8 %v_5[2.9,] %v_7[2.11,] 	 ARGS:%v_7,
		 13: %v_8->first def_%v_9 %v_8[2.12,] 	 ARGS:
		 14: COPY TYPE_PASS def_section_node %v_9[2.13,] 
		 15: 
		 16: BRANCH %v_9[2.13,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: section_node->node def_%v_10 section_node[2.14,] 	 ARGS:
		 1: RETURN %v_10[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = layout
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->template def_%v_3 %self[2.0,] 
		 7: %self->normalize_layout def_%v_4 %self[2.0,] %self[2.0,] %v_3[2.6,] 	 ARGS:%self,%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = path
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->class def_%v_3 %self[2.0,] 	 ARGS:
		 7: %self->slug def_%v_4 %self[2.0,2.6,] 	 ARGS:
		 8: %v_3->calculate_path def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = slug
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->section_node def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->section_node def_%v_4 %self[2.0,] 	 ARGS:
		 2: %v_4->slug def_%v_5 %v_4[3.1,] 	 ARGS:
		 3: RETURN %v_5[3.2,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = slug=
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_slug 
		 6: 
		 7: %self->section_node def_%v_3 %self[2.0,] 	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->section_node def_%v_4 %self[2.0,] 	 ARGS:
		 2: ATTRASSIGN %v_4->slug slug[2.5,] 
		 3: COPY TYPE_PASS def_%v_5 slug[2.5,] 
		 4: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->slug slug[2.5,] 
		 2: COPY TYPE_PASS def_%v_5 slug[2.5,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->dirty! def_%v_6 %self[4.1,2.0,] 	 ARGS:
		 2: RETURN %v_6[5.1,] %self[5.1,4.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = accessible_to_guests?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_public_sections 
		 6: RECEIVEARG def_parent 
		 7: 
		 8: public_sections->include? def_%v_3 public_sections[2.5,] parent[2.6,] 	 ARGS:parent,
		 9: RETURN %v_3[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = classes_that_require_custom_routes
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->descendants def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->select def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 ARGS:%v_3,
CLOSURE BEGIN: klass[2.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_klass 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: klass->path def_%cl_1_3 klass[2.2,] 	 ARGS:
		 2: %cl_1_3->!= def_%cl_1_4 %cl_1_3[3.1,] 	 ARGS:Nil,
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = descendants
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (ObjectSpace) def_%v_3 
		 7: (inherit Class) def_%v_4 
		 8: %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: CONSTANT def_%v_4 	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_3->each_object def_%v_5 %v_3[2.6,] %v_4[3.0,2.7,] 	 ARGS:%v_4,
		 1: %v_5->select def_%v_6 %v_5[4.0,] %self[2.0,] 	 ARGS:%v_5,
CLOSURE BEGIN: klass[4.1,] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_klass 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: (Concerns) def_%cl_1_3 
		 2: (inherit Addressable) def_%cl_1_4 %cl_1_3[3.1,] 
		 3: %cl_1_4[3.2,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: %cl_1_3->const_missing def_%cl_1_4 %cl_1_3[3.1,] 	 ARGS:Symbol,
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: klass->< def_%cl_1_5 klass[2.2,] %cl_1_4[4.0,3.2,] 	 ARGS:%cl_1_4,
		 1: RETURN %cl_1_5[5.0,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[6.0,] 
		 2: RETURN %cl_1_7[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: RETURN %v_6[4.1,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = destroy_node
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->node def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->destroy def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = landing_page?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = page_title
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ancestors
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_options 
		 6: options[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->node def_%v_4 %self[2.0,] 	 ARGS:
		 2: BRANCH %v_4[4.1,] 
BB 5
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
		 2: %self->node def_%v_7 %self[2.0,] 	 ARGS:
		 3: %v_7->ancestors def_%v_8 %v_7[5.2,] 	 ARGS:
		 4: COPY TYPE_PASS def_ancestor_nodes %v_8[5.3,] 
		 5: 
		 6: %v_8->collect def_%v_9 %v_8[5.3,] %self[5.2,2.0,] 	 ARGS:%v_8,
CLOSURE BEGIN: node[5.6,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_node 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: node->node def_%cl_1_3 node[2.2,] 	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: COPY TYPE_PASS def_ancestors %v_9[5.6,] 
		 8: 
		 9: options->[] def_%v_10 options[3.1,2.5,] 	 ARGS:Symbol,
		 10: BRANCH %v_10[5.9,] 
BB 6
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_6 
		 1: RETURN %v_6[6.0,] %self[2.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: ancestors-><< def_%v_11 ancestors[5.7,] %self[2.0,] 	 ARGS:%self,
		 1: 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_11 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: RETURN ancestors[5.7,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = parent
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->parent def_%v_3 %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: GETFIELD %self->parent def_%v_4 %self[2.0,] 
		 1: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: %self->node def_%v_5 %self[2.0,] 	 ARGS:
		 1: BRANCH %v_5[5.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: %self->node def_%v_6 %self[2.0,] 	 ARGS:
		 1: %v_6->section def_%v_7 %v_6[6.0,] 	 ARGS:
		 2: RETURN %v_7[6.1,] %self[6.0,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = cache_parent
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_section 
		 6: 
		 7: ATTRASSIGN %self->parent section[2.5,] 
		 8: RETURN section[2.5,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = parent_id
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->parent def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->try def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = parent_id=
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_id 
		 6: 
		 7: (Section) def_%v_3 
		 8: %v_3->find def_%v_4 %v_3[2.7,] id[2.5,] 	 ARGS:id,
		 9: ATTRASSIGN %self->parent %v_4[2.8,] 
		 10: 
		 11: 
		 12: GETFIELD %self->slug def_%v_5 %self[2.0,] 
		 13: BRANCH %v_5[2.12,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: GETFIELD %self->slug def_%v_6 %self[2.0,] 
		 1: ATTRASSIGN %self->slug %v_6[3.0,] 
		 2: 
		 3: ATTRASSIGN %self->slug 
		 4: COPY TYPE_Nil def_%v_7 
		 5: RETURN %self[3.1,3.3,2.0,2.9,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,2.9,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = parent=
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_sec 
		 6: 
		 7: %self->node def_%v_3 %self[2.0,] 	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->node def_%v_4 %self[2.0,] 	 ARGS:
		 2: %v_4->move_to_end def_%v_5 %v_4[3.1,] sec[2.5,] 	 ARGS:sec,
		 3: RETURN %v_5[3.2,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->id def_%v_6 %self[2.0,] 	 ARGS:
		 2: HASH-node_id-section- def_%v_7 %v_6[4.1,] sec[2.5,] 
		 3: %self->build_section_node def_%v_8 %self[4.1,2.0,] %v_7[4.2,] 	 ARGS:%v_7,
		 4: RETURN %v_8[4.3,] %self[4.1,4.3,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = partial_for
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->class def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->name def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->demodulize def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: %v_5->underscore def_%v_6 %v_5[2.8,] 	 ARGS:
		 10: RETURN %v_6[2.9,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = node
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->section_node def_%v_3 %self[2.0,] 	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = node=
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_n 
		 6: 
		 7: ATTRASSIGN %self->section_node n[2.5,] 
		 8: RETURN n[2.5,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = included
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_model_class 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = build_node
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_opts 
		 6: 
		 7: %self->build_section_node def_%v_3 %self[2.0,] opts[2.5,] 	 ARGS:opts,
		 8: RETURN %v_3[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = section_id
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->section def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->section def_%v_4 %self[2.0,] 	 ARGS:
		 1: %v_4->id def_%v_5 %v_4[3.0,] 	 ARGS:
		 2: RETURN %v_5[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = section_id=
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_sec_id 
		 6: 
		 7: (Section) def_%v_3 
		 8: %v_3->find def_%v_4 %v_3[2.7,] sec_id[2.5,] 	 ARGS:sec_id,
		 9: ATTRASSIGN %self->section %v_4[2.8,] 
		 10: RETURN %v_4[2.8,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = section
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->parent def_%v_3 %self[2.0,] 	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = section=
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_sec 
		 6: 
		 7: ATTRASSIGN %self->parent sec[2.5,] 
		 8: RETURN sec[2.5,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = dirty!
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Time) def_%v_3 
		 7: %v_3->now def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: ATTRASSIGN %self->updated_at %v_4[2.7,] 
		 9: RETURN %v_4[2.7,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

