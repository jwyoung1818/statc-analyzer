SET IRMethod, name = permitted_params instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->super def_%v_3 %v_0[2.1,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_Array def_%v_4 
		 8: HASH-group_ids- def_%v_5 %v_4[2.7,] 
		 9: COPY TYPE_Array def_%v_6 %v_5[2.8,] 
		 10: %v_3->+ def_%v_7 %v_3[2.6,] %v_6[2.9,] 	 SYMBOL:	 ARGS:%v_6,
		 11: RETURN %v_7[2.10,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = named instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: 
		 7: %self->table_name def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_StringLiteral ".name = ?" def_%v_4 
		 9: BUILDSTRING def_%v_5 %v_3[2.7,] %v_4[2.8,] 
		 10: COPY TYPE_Array def_%v_6 %v_5[2.9,] name[2.5,] 
		 11: %self->where def_%v_7 %self[2.0,2.7,] %v_6[2.10,] 	 SYMBOL:	 ARGS:%v_6,
		 12: RETURN %v_7[2.11,] %self[2.0,2.7,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = with_path instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_path 
		 6: 
		 7: %self->table_name def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_StringLiteral ".path = ?" def_%v_4 
		 9: BUILDSTRING def_%v_5 %v_3[2.7,] %v_4[2.8,] 
		 10: COPY TYPE_Array def_%v_6 %v_5[2.9,] path[2.5,] 
		 11: %self->where def_%v_7 %self[2.0,2.7,] %v_6[2.10,] 	 SYMBOL:	 ARGS:%v_6,
		 12: RETURN %v_7[2.11,] %self[2.0,2.7,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ancestry instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->node def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->ancestry def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ensure_section_node_exists instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->node def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: RETURN %v_4[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->build_section_node def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: ATTRASSIGN %self->node %v_5[4.1,] 
		 3: RETURN %v_5[4.1,] %self[4.1,4.2,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = sections instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->child_nodes def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: (SECTION) def_%v_4 
		 8: %v_3->of_type def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: %v_5->fetch_nodes def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: %v_6->in_order def_%v_7 %v_6[2.9,] 	 SYMBOL:	 ARGS:
		 11: %v_7->collect def_%v_8 %v_7[2.10,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_7,
CLOSURE BEGIN: section_node[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_section_node 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: section_node->node def_%cl_1_3 section_node[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 12: RETURN %v_8[2.11,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = build_section instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Section) def_%v_3 
		 7: HASH-parent- def_%v_4 %self[2.0,] 
		 8: %v_3->new def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = child_nodes instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->node def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->children def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = pages instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->node def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->children def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->collect def_%v_5 %v_4[2.7,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_4,
CLOSURE BEGIN: section_node[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_section_node 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: section_node->page? def_%cl_1_3 section_node[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: section_node->node def_%cl_1_4 section_node[2.2,] 	 SYMBOL:	 ARGS:
		 1: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_1_4[4.0,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[7.0,] 
		 2: RETURN %cl_1_6[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 9: COPY TYPE_PASS def_child_pages %v_5[2.8,] 
		 10: 
		 11: %v_5->compact def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 12: RETURN %v_6[2.11,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = sitemap instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (SectionNode) def_%v_3 
		 7: (HIDDEN_NODE_TYPES) def_%v_4 
		 8: %v_3->not_of_type def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: %v_5->fetch_nodes def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: HASH-order- def_%v_7 
		 11: %v_6->arrange def_%v_8 %v_6[2.9,] %v_7[2.10,] 	 SYMBOL:	 ARGS:%v_7,
		 12: RETURN %v_8[2.11,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = visible_child_nodes instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_options 
		 6: options[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->child_nodes def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: (VISIBLE_NODE_TYPES) def_%v_5 
		 3: %v_4->of_type def_%v_6 %v_4[4.1,] %v_5[4.2,] 	 SYMBOL:	 ARGS:%v_5,
		 4: %v_6->fetch_nodes def_%v_7 %v_6[4.3,] 	 SYMBOL:	 ARGS:
		 5: %v_7->in_order def_%v_8 %v_7[4.4,] 	 SYMBOL:	 ARGS:
		 6: %v_8->to_a def_%v_9 %v_8[4.5,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_PASS def_children %v_9[4.6,] 
		 8: 
		 9: %v_9->select def_%v_10 %v_9[4.6,] %self[4.1,2.0,] 	 SYMBOL:	 ARGS:%v_9,
CLOSURE BEGIN: sn[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_sn 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: sn->visible? def_%cl_1_3 sn[2.2,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: COPY TYPE_PASS def_visible_children %v_10[4.9,] 
		 11: 
		 12: options->[] def_%v_11 options[3.1,2.5,] 	 SYMBOL:limit,	 ARGS:Symbol,
		 13: BRANCH %v_11[4.12,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: options->[] def_%v_13 options[3.1,2.5,] 	 SYMBOL:limit,	 ARGS:Symbol,
		 1: CONSTANT def_%v_12 %v_13[5.0,] 
		 2: visible_children->[] def_%v_14 visible_children[4.10,] %v_12[5.1,] 	 SYMBOL:	 ARGS:%v_12,
		 3: RETURN %v_14[5.2,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN visible_children[4.10,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = master_section_list instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->sections def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->map def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: %self[2.0,2.6,] section[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_section 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->root? def_%cl_1_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: section->name def_%cl_1_4 section[2.2,] 	 SYMBOL:	 ARGS:
		 1: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: %self->name def_%cl_1_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_StringLiteral " / " def_%cl_1_6 
		 2: section->name def_%cl_1_7 section[2.2,] 	 SYMBOL:	 ARGS:
		 3: BUILDSTRING def_%cl_1_8 %cl_1_5[5.0,] %cl_1_6[5.1,] %cl_1_7[5.2,] 
		 4: COPY TYPE_PASS def_%cl_1_4 %cl_1_8[5.3,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: ATTRASSIGN section->full_path %cl_1_4[5.4,4.0,] 
		 1: 
		 2: COPY TYPE_Array def_%cl_1_9 section[6.0,2.2,] 
		 3: section->master_section_list def_%cl_1_10 section[6.0,2.2,] 	 SYMBOL:	 ARGS:
		 4: %cl_1_9-><< def_%cl_1_11 %cl_1_9[6.2,] %cl_1_10[6.3,] 	 SYMBOL:	 ARGS:%cl_1_10,
		 5: RETURN %cl_1_11[6.4,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_12 
		 1: def_%cl_1_13 %cl_1_12[7.0,] 
		 2: RETURN %cl_1_13[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: %v_4->flatten def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_5->compact def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: RETURN %v_6[2.9,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = parent_id instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->parent def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->parent def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_4->id def_%v_5 %v_4[3.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_5[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = parent_id= instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_sec_id 
		 6: 
		 7: (Section) def_%v_3 
		 8: %v_3->find def_%v_4 %v_3[2.7,] sec_id[2.5,] 	 SYMBOL:	 ARGS:sec_id,
		 9: ATTRASSIGN %self->parent %v_4[2.8,] 
		 10: RETURN %v_4[2.8,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = with_ancestors instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_options 
		 6: options[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: HASH-include_self- def_%v_4 
		 2: options->merge! def_%v_5 options[3.1,2.5,] %v_4[4.1,] 	 SYMBOL:	 ARGS:%v_4,
		 3: 
		 4: %self->ancestors def_%v_6 %self[2.0,] options[4.2,3.1,2.5,] 	 SYMBOL:	 ARGS:options,
		 5: RETURN %v_6[4.4,] %self[4.4,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = move_to instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_section 
		 6: 
		 7: %self->root? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Boolean def_%v_4 
		 2: RETURN %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->node def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_5->move_to_end def_%v_6 %v_5[4.1,] section[2.5,] 	 SYMBOL:	 ARGS:section,
		 3: RETURN %v_6[4.2,] %self[4.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = public? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->groups def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "guest" def_%v_4 
		 8: %v_3->find_by_code def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: %v_5->! def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: %v_6->! def_%v_7 %v_6[2.9,] 	 SYMBOL:	 ARGS:
		 11: RETURN %v_7[2.10,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = empty? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->child_nodes def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->empty? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = deletable? instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->root? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->! def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->empty? def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: RETURN %v_5[3.0,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_4[2.7,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = editable_by_group? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_group 
		 6: 
		 7: group->editable_by_section def_%v_3 group[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
		 8: RETURN %v_3[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = status instanceMethod = true
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->status def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 9 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: %self->public? def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: BRANCH %v_6[5.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Symbol def_%v_7 
		 1: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Symbol def_%v_7 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: ATTRASSIGN %self->status %v_7[7.0,6.0,] 
		 1: RETURN %v_7[7.0,6.0,] %self[8.0,2.0,] 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_by_name_path instanceMethod = false
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name_path 
		 6: 
		 7: (Section) def_%v_3 
		 8: %v_3->root def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: %v_4->first def_%v_5 %v_4[2.8,] 	 SYMBOL:	 ARGS:
		 10: COPY TYPE_PASS def_current_section %v_5[2.9,] 
		 11: 
		 12: COPY TYPE_StringLiteral "/" def_%v_6 
		 13: name_path->split def_%v_7 name_path[2.5,] %v_6[2.12,] 	 SYMBOL:	 ARGS:%v_6,
		 14: CONSTANT def_%v_8 
		 15: %v_7->[] def_%v_9 %v_7[2.13,] %v_8[2.14,] 	 SYMBOL:	 ARGS:%v_8,
		 16: BRANCH %v_9[2.15,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_10 
		 1: COPY TYPE_PASS def_%v_9 %v_10[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_path_names %v_9[3.1,2.15,] 
		 1: 
		 2: %v_9->each def_%v_11 %v_9[3.1,2.15,] %self[2.0,] 	 SYMBOL:	 ARGS:%v_9,
CLOSURE BEGIN: current_section[2.10,] %self[2.0,] s[] name[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_name 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: current_section->sections def_%cl_1_3 current_section[] 	 SYMBOL:	 ARGS:
		 2: %cl_1_3->each def_%cl_1_4 %cl_1_3[3.1,] %self[2.0,] 	 SYMBOL:	 ARGS:%cl_1_3,
CLOSURE BEGIN: s[] name[2.2,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_s 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: s->name def_%cl_2_3 s[2.2,] 	 SYMBOL:	 ARGS:
		 2: %cl_2_3->== def_%cl_2_4 %cl_2_3[3.1,] name[] 	 SYMBOL:	 ARGS:name,
		 3: BRANCH %cl_2_4[3.2,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_current_section s[2.2,] 
		 1: COPY TYPE_PASS def_%cl_2_5 s[2.2,] 
		 2: RETURN s[2.2,] %self[2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_2_6 
		 1: def_%cl_2_7 %cl_2_6[7.0,] 
		 2: RETURN %cl_2_7[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: current_section[4.0,] 
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 3: 
		 4: RETURN current_section[2.10,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = first_page_or_link instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (ContentType) def_%v_3 
		 7: %v_3->addressable def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->collect def_%v_5 %v_4[2.7,] 	 SYMBOL:name,	 ARGS:
		 9: (LINK) def_%v_6 
		 10: %v_5->push def_%v_7 %v_5[2.8,] %v_6[2.9,] 	 SYMBOL:	 ARGS:%v_6,
		 11: (PAGE) def_%v_8 
		 12: %v_7->push def_%v_9 %v_7[2.10,] %v_8[2.11,] 	 SYMBOL:	 ARGS:%v_8,
		 13: COPY TYPE_PASS def_types %v_9[2.12,] 
		 14: 
		 15: %self->child_nodes def_%v_10 %self[2.0,] 	 SYMBOL:	 ARGS:
		 16: %v_10->of_type def_%v_11 %v_10[2.15,] types[2.13,] 	 SYMBOL:	 ARGS:types,
		 17: %v_11->fetch_nodes def_%v_12 %v_11[2.16,] 	 SYMBOL:	 ARGS:
		 18: %v_12->in_order def_%v_13 %v_12[2.17,] 	 SYMBOL:	 ARGS:
		 19: %v_13->first def_%v_14 %v_13[2.18,] 	 SYMBOL:	 ARGS:
		 20: COPY TYPE_PASS def_section_node %v_14[2.19,] 
		 21: 
		 22: BRANCH %v_14[2.19,] 
BB 4
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: section_node->node def_%v_15 section_node[2.20,] 	 SYMBOL:	 ARGS:
		 1: RETURN %v_15[4.0,] %self[2.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_16 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->sections def_%v_17 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_17->each def_%v_18 %v_17[6.1,] %self[6.1,2.0,] 	 SYMBOL:	 ARGS:%v_17,
CLOSURE BEGIN: s[] node[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_s 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: s->first_page_or_link def_%cl_1_3 s[2.2,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_node %cl_1_3[3.1,] 
		 3: 
		 4: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: RETURN node[3.2,] %self[2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[7.0,] 
		 2: RETURN %cl_1_6[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: node[3.2,] 
		 3: 
		 4: RETURN %self[6.1,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%v_19 
		 1: def_%v_20 %v_19[7.0,] 
		 2: RETURN %v_20[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = prependable_path instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->path def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "/" def_%v_4 
		 8: %v_3->ends_with? def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->path def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_6[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->path def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "/" def_%v_8 
		 3: BUILDSTRING def_%v_9 %v_7[4.1,] %v_8[4.2,] 
		 4: RETURN %v_9[4.3,] %self[4.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = actual_path instanceMethod = true
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->root? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "/" def_%v_4 
		 2: RETURN %self[2.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->first_page_or_link def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_PASS def_p %v_5[4.1,] 
		 3: 
		 4: BRANCH %v_5[4.1,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: p->path def_%v_6 p[4.2,] 	 SYMBOL:	 ARGS:
		 1: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "#" def_%v_7 
		 1: COPY TYPE_PASS def_%v_6 %v_7[6.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %v_6[6.1,5.0,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = path_not_reserved instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Cms) def_%v_3 
		 7: %v_3->reserved_paths def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %self->path def_%v_5 %self[2.0,] 	 SYMBOL:	 ARGS:
		 9: %v_4->include? def_%v_6 %v_4[2.7,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: BRANCH %v_6[2.9,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%v_7 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: COPY TYPE_StringLiteral "is invalid, '" def_%v_8 
		 3: %self->path def_%v_9 %self[3.1,2.0,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_StringLiteral "' a reserved path" def_%v_10 
		 5: BUILDSTRING def_%v_11 %v_8[3.2,] %v_9[3.3,] %v_10[3.4,] 
		 6: %v_7->add def_%v_12 %v_7[3.1,] %v_11[3.5,] 	 SYMBOL:path,	 ARGS:Symbol,%v_11,
		 7: RETURN %v_12[3.6,] %self[3.1,3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = allow_groups= instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_code 
		 6: code[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Symbol def_code 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: code->== def_%v_3 code[3.0,2.5,] 	 SYMBOL:all,	 ARGS:Symbol,
		 2: BRANCH %v_3[4.1,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: (Group) def_%v_4 
		 2: %v_4->all def_%v_5 %v_4[5.1,] 	 SYMBOL:	 ARGS:
		 3: ATTRASSIGN %self->groups %v_5[5.2,] 
		 4: RETURN %v_5[5.2,] %self[5.3,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = accessible_to_guests? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_public_sections 
		 6: RECEIVEARG def_parent 
		 7: 
		 8: public_sections->include? def_%v_3 public_sections[2.5,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
		 9: RETURN %v_3[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

