SET IRMethod, name = named instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: 
		 7: %self->table_name def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_StringLiteral ".name = ?" def_%v_4 
		 9: BUILDSTRING def_%v_5 %v_3[2.7,] %v_4[2.8,] 
		 10: COPY TYPE_Array def_%v_6 %v_5[2.9,] name[2.5,] 
		 11: %self->where def_%v_7 %self[2.0,2.7,] %v_6[2.10,] 	 SYMBOL:	 ARGS:%v_6,
		 12: RETURN %v_7[2.11,] %self[2.0,2.7,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = of_type instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_type_name 
		 6: 
		 7: (CategoryType) def_%v_3 
		 8: %v_3->table_name def_%v_4 %v_3[2.7,] 	 SYMBOL:	 ARGS:
		 9: COPY TYPE_StringLiteral ".name = ?" def_%v_5 
		 10: BUILDSTRING def_%v_6 %v_4[2.8,] %v_5[2.9,] 
		 11: COPY TYPE_Array def_%v_7 %v_6[2.10,] type_name[2.5,] 
		 12: %self->where def_%v_8 %self[2.0,] %v_7[2.11,] 	 SYMBOL:	 ARGS:%v_7,
		 13: 
		 14: (Category) def_%v_9 
		 15: %v_9->table_name def_%v_10 %v_9[2.14,] 	 SYMBOL:	 ARGS:
		 16: COPY TYPE_StringLiteral ".name" def_%v_11 
		 17: BUILDSTRING def_%v_12 %v_10[2.15,] %v_11[2.16,] 
		 18: %v_8->order def_%v_13 %v_8[2.12,] %v_12[2.17,] 	 SYMBOL:	 ARGS:%v_12,
		 19: %v_13->includes def_%v_14 %v_13[2.18,] 	 SYMBOL:category_type,	 ARGS:Symbol,
		 20: %v_14->references def_%v_15 %v_14[2.19,] 	 SYMBOL:category_type,	 ARGS:Symbol,
		 21: RETURN %v_15[2.20,] %self[2.0,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ancestors instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->lambda def_%v_3 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: cat[] %self[2.0,] parents[] fn[] p[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_cat 
		 3: RECEIVEARG def_parents 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: cat->parent_id def_%cl_1_3 cat[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->class def_%cl_1_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: cat->parent def_%cl_1_5 cat[2.2,] 	 SYMBOL:	 ARGS:
		 3: %cl_1_4->find def_%cl_1_6 %cl_1_4[4.1,] %cl_1_5[4.2,] 	 SYMBOL:	 ARGS:%cl_1_5,
		 4: COPY TYPE_PASS def_p %cl_1_6[4.3,] 
		 5: 
		 6: parents-><< def_%cl_1_7 parents[2.3,] %cl_1_6[4.3,] 	 SYMBOL:	 ARGS:p,
		 7: fn->call def_%cl_1_8 fn[] p[4.4,] %cl_1_7[4.6,] 	 SYMBOL:	 ARGS:p,%cl_1_7,
		 8: 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: parents->reverse def_%cl_1_9 parents[2.3,] 	 SYMBOL:	 ARGS:
		 2: RETURN %cl_1_9[5.1,] %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_1_8[4.7,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_10 
		 1: def_%cl_1_11 %cl_1_10[7.0,] 
		 2: RETURN %cl_1_11[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: p[4.4,] parents[2.3,] 
		 7: COPY TYPE_PASS def_fn %v_3[2.6,] 
		 8: 
		 9: COPY TYPE_Array def_%v_4 
		 10: %v_3->call def_%v_5 %v_3[2.6,] %self[2.0,2.6,] %v_4[2.9,] 	 SYMBOL:	 ARGS:%self,%v_4,
		 11: RETURN %v_5[2.10,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = path instanceMethod = true
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_sep 
		 6: sep[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral " > " def_%v_3 
		 1: COPY TYPE_PASS def_sep %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->ancestors def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %v_4->map def_%v_5 %v_4[4.1,] 	 SYMBOL:name,	 ARGS:
		 3: %self->name def_%v_6 %self[4.1,2.0,] 	 SYMBOL:	 ARGS:
		 4: COPY TYPE_Array def_%v_7 %v_6[4.3,] 
		 5: %v_5->+ def_%v_8 %v_5[4.2,] %v_7[4.4,] 	 SYMBOL:	 ARGS:%v_7,
		 6: %v_8->join def_%v_9 %v_8[4.5,] sep[3.1,2.5,] 	 SYMBOL:	 ARGS:sep,
		 7: RETURN %v_9[4.6,] %self[4.1,4.3,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = category_type_name instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->category_type def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->category_type def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_4->name def_%v_5 %v_4[3.0,] 	 SYMBOL:	 ARGS:
		 2: RETURN %v_5[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = columns_for_index instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "Name" def_%v_3 
		 7: (Category) def_%v_4 
		 8: %v_4->table_name def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: COPY TYPE_StringLiteral ".name" def_%v_6 
		 10: BUILDSTRING def_%v_7 %v_5[2.8,] %v_6[2.9,] 
		 11: HASH-label-method-order- def_%v_8 %v_3[2.6,] %v_7[2.10,] 
		 12: COPY TYPE_StringLiteral "Type" def_%v_9 
		 13: 
		 14: (CategoryType) def_%v_10 
		 15: %v_10->table_name def_%v_11 %v_10[2.14,] 	 SYMBOL:	 ARGS:
		 16: COPY TYPE_StringLiteral ".name" def_%v_12 
		 17: BUILDSTRING def_%v_13 %v_11[2.15,] %v_12[2.16,] 
		 18: HASH-label-method-order- def_%v_14 %v_9[2.12,] %v_13[2.17,] 
		 19: COPY TYPE_StringLiteral "Updated On" def_%v_15 
		 20: 
		 21: (Category) def_%v_16 
		 22: %v_16->table_name def_%v_17 %v_16[2.21,] 	 SYMBOL:	 ARGS:
		 23: COPY TYPE_StringLiteral ".updated_at" def_%v_18 
		 24: BUILDSTRING def_%v_19 %v_17[2.22,] %v_18[2.23,] 
		 25: HASH-label-method-order- def_%v_20 %v_15[2.19,] %v_19[2.24,] 
		 26: COPY TYPE_Array def_%v_21 %v_8[2.11,] %v_14[2.18,] %v_20[2.25,] 
		 27: RETURN %v_21[2.26,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

