SET IRMethod, name = as_json
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_options 
		 6: options[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%v_4 
		 2: HASH-methods- def_%v_5 %v_4[4.1,] 
		 3: %current_module->as_json def_%v_6 %current_module[2.3,] %v_5[4.2,] %v_0[2.1,] 	 ARGS:%v_5,
		 4: RETURN %v_6[4.3,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = as
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->field_type def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_6 
		 8: def_%v_5 %v_6[2.7,] %v_3[2.6,] 
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_8 
		 1: def_%v_7 %v_8[3.0,] %v_3[2.6,] 
		 2: BRANCH %v_7[3.1,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->field_type def_%v_9 %self[2.0,] 	 ARGS:
		 2: %v_9->to_sym def_%v_10 %v_9[4.1,] 	 ARGS:
		 3: COPY TYPE_PASS def_%v_4 %v_10[4.2,] 
		 4: RETURN %v_10[4.2,] %self[4.1,2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Symbol def_%v_4 
		 2: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Symbol def_%v_4 
		 2: RETURN %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = options
BB 1
	outgoing: 22 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_config 
		 6: config[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_config %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->label def_%v_4 %self[2.0,] 	 ARGS:
		 2: HASH-label- def_%v_5 %v_4[4.1,] 
		 3: COPY TYPE_PASS def_opts %v_5[4.2,] 
		 4: 
		 5: %self->field_type def_%v_6 %self[4.1,2.0,] 	 ARGS:
		 6: COPY TYPE_StringLiteral def_%v_7 
		 7: %v_6->!= def_%v_8 %v_6[4.5,] %v_7[4.6,] 	 ARGS:%v_7,
		 8: BRANCH %v_8[4.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: %self->as def_%v_9 %self[2.0,] 	 ARGS:
		 2: ATTRASSIGN opts->[] %v_9[5.1,] 
		 3: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_9 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: config->[] def_%v_10 config[3.1,2.5,] 	 ARGS:Symbol,
		 2: BRANCH %v_10[7.1,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN opts->[] 
		 2: 
		 3: COPY TYPE_StringLiteral def_%v_11 
		 4: ATTRASSIGN opts->[] %v_11[8.3,] 
		 5: 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_11 
BB 10
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: 
		 1: %self->required def_%v_12 %self[2.0,] 	 ARGS:
		 2: %v_12->! def_%v_13 %v_12[10.1,] 	 ARGS:
		 3: %v_13->! def_%v_14 %v_13[10.2,] 	 ARGS:
		 4: ATTRASSIGN opts->[] %v_14[10.3,] 
		 5: 
		 6: %self->instructions def_%v_15 %self[10.1,2.0,] 	 ARGS:
		 7: BRANCH %v_15[10.6,] 
BB 11
	outgoing: 13 
	datadep: 
	instructions:
		 0: %self->instructions def_%v_16 %self[2.0,] 	 ARGS:
		 1: ATTRASSIGN opts->[] %v_16[11.0,] 
		 2: 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_16 
BB 13
	outgoing: 14 15 
	datadep: 
	instructions:
		 0: 
		 1: %self->choices def_%v_17 %self[2.0,] 	 ARGS:
		 2: %v_17->blank? def_%v_18 %v_17[13.1,] 	 ARGS:
		 3: BRANCH %v_18[13.2,] 
BB 14
	outgoing: 16 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_19 
		 1: 
BB 15
	outgoing: 16 
	datadep: 
	instructions:
		 0: 
		 1: %self->parse_choices def_%v_20 %self[2.0,] 	 ARGS:
		 2: ATTRASSIGN opts->[] %v_20[15.1,] 
		 3: 
		 4: %self->required? def_%v_21 %self[15.1,2.0,] 	 ARGS:
		 5: %v_21->! def_%v_22 %v_21[15.4,] 	 ARGS:
		 6: ATTRASSIGN opts->[] %v_22[15.5,] 
		 7: COPY TYPE_PASS def_%v_19 %v_22[15.5,] 
BB 16
	outgoing: 17 18 
	datadep: 
	instructions:
		 0: 
		 1: config->[] def_%v_23 config[3.1,2.5,] 	 ARGS:Symbol,
		 2: BRANCH %v_23[16.1,] 
BB 17
	outgoing: 18 
	datadep: 
	instructions:
		 0: config->[] def_%v_24 config[3.1,2.5,] 	 ARGS:Symbol,
		 1: %self->name def_%v_25 %self[2.0,] 	 ARGS:
		 2: %v_24->send def_%v_26 %v_24[17.0,] %v_25[17.1,] 	 ARGS:%v_25,
		 3: COPY TYPE_PASS def_%v_23 %v_26[17.2,] 
BB 18
	outgoing: 19 20 
	datadep: 
	instructions:
		 0: BRANCH %v_23[17.3,16.1,] 
BB 19
	outgoing: 21 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_27 
		 1: 
BB 20
	outgoing: 21 
	datadep: 
	instructions:
		 0: 
		 1: %self->default_value def_%v_28 %self[2.0,] 	 ARGS:
		 2: HASH-value- def_%v_29 %v_28[20.1,] 
		 3: ATTRASSIGN opts->[] %v_29[20.2,] 
		 4: COPY TYPE_PASS def_%v_27 %v_29[20.2,] 
BB 21
	outgoing: 22 
	datadep: 
	instructions:
		 0: 
		 1: RETURN opts[20.3,15.2,15.6,11.1,10.4,8.1,8.4,5.2,4.3,] %self[2.0,] 
BB 22
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = permitted_params
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %v_0->permitted_params def_%v_3 %v_0[2.1,] 	 ARGS:
		 7: COPY TYPE_Array def_%v_4 
		 8: %v_3->- def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = parse_choices
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->choices def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_Regexp def_%v_4 
		 8: %v_3->split def_%v_5 %v_3[2.6,] 	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

