SET IRMethod, name = parent_section
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->parent def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->parent def_%v_4 %self[2.0,] 	 ARGS:
		 1: %v_4->node def_%v_5 %v_4[3.0,] 	 ARGS:
		 2: RETURN %v_5[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = section=
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_new_section 
		 6: 
		 7: new_section->node def_%v_3 new_section[2.5,] 	 ARGS:
		 8: ATTRASSIGN %self->parent %v_3[2.7,] 
		 9: RETURN %v_3[2.7,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = scope_condition
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->ancestry def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_4 
		 1: %self->ancestry def_%v_5 %self[2.0,] 	 ARGS:
		 2: COPY TYPE_StringLiteral def_%v_6 
		 3: BUILDSTRING def_%v_7 %v_4[3.0,] %v_5[3.1,] %v_6[3.2,] 
		 4: RETURN %v_7[3.3,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_8 
		 1: RETURN %v_8[4.0,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = of_type
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_types 
		 6: 
		 7: %self->table_name def_%v_3 %self[2.0,] 	 ARGS:
		 8: COPY TYPE_StringLiteral def_%v_4 
		 9: BUILDSTRING def_%v_5 %v_3[2.7,] %v_4[2.8,] 
		 10: COPY TYPE_Array def_%v_6 %v_5[2.9,] types[2.5,] 
		 11: %self->where def_%v_7 %self[2.0,2.7,] %v_6[2.10,] 	 ARGS:%v_6,
		 12: RETURN %v_7[2.11,] %self[2.0,2.7,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = in_order
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: %self->order def_%v_4 %self[2.0,] %v_3[2.6,] 	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = fetch_nodes
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->includes def_%v_3 %self[2.0,] 	 ARGS:Symbol,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = not_of_type
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_klass 
		 6: 
		 7: %self->table_name def_%v_3 %self[2.0,] 	 ARGS:
		 8: COPY TYPE_StringLiteral def_%v_4 
		 9: BUILDSTRING def_%v_5 %v_3[2.7,] %v_4[2.8,] 
		 10: %self->where def_%v_6 %self[2.0,2.7,] %v_5[2.9,] klass[2.5,] 	 ARGS:%v_5,klass,
		 11: RETURN %v_6[2.10,] %self[2.0,2.7,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = home?
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->page? def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->node def_%v_4 %self[2.0,] 	 ARGS:
		 1: %v_4->home? def_%v_5 %v_4[3.0,] 	 ARGS:
		 2: RETURN %v_5[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.6,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = visible?
BB 1
	outgoing: 21 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->node def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: %self->node def_%v_5 %self[2.0,] 	 ARGS:
		 3: %v_5->respond_to? def_%v_6 %v_5[3.2,] 	 ARGS:Symbol,
		 4: BRANCH %v_6[3.3,] 
BB 4
	outgoing: 21 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %self->node def_%v_7 %self[2.0,] 	 ARGS:
		 1: %v_7->hidden? def_%v_8 %v_7[6.0,] 	 ARGS:
		 2: COPY TYPE_PASS def_%v_6 %v_8[6.1,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: BRANCH %v_6[6.2,3.3,] 
BB 8
	outgoing: 21 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_9 
		 1: 
		 2: %self->node def_%v_10 %self[2.0,] 	 ARGS:
		 3: %v_10->respond_to? def_%v_11 %v_10[9.2,] 	 ARGS:Symbol,
		 4: BRANCH %v_11[9.3,] 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: %self->node def_%v_12 %self[2.0,] 	 ARGS:
		 1: %v_12->archived? def_%v_13 %v_12[11.0,] 	 ARGS:
		 2: COPY TYPE_PASS def_%v_11 %v_13[11.1,] 
BB 12
	outgoing: 13 14 
	datadep: 
	instructions:
		 0: BRANCH %v_11[11.2,9.3,] 
BB 13
	outgoing: 21 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 14
	outgoing: 16 17 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_14 
		 1: 
		 2: %self->node def_%v_15 %self[2.0,] 	 ARGS:
		 3: %v_15->respond_to? def_%v_16 %v_15[14.2,] 	 ARGS:Symbol,
		 4: BRANCH %v_16[14.3,] 
BB 16
	outgoing: 17 
	datadep: 
	instructions:
		 0: %self->node def_%v_17 %self[2.0,] 	 ARGS:
		 1: %v_17->published? def_%v_18 %v_17[16.0,] 	 ARGS:
		 2: %v_18->! def_%v_19 %v_18[16.1,] 	 ARGS:
		 3: COPY TYPE_PASS def_%v_16 %v_19[16.2,] 
BB 17
	outgoing: 18 19 
	datadep: 
	instructions:
		 0: BRANCH %v_16[16.3,14.3,] 
BB 18
	outgoing: 21 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 19
	outgoing: 21 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_20 
		 1: 
		 2: RETURN %self[2.0,] 
BB 21
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = orphaned?
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->node def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->! def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: %self->node def_%v_5 %self[2.0,] 	 ARGS:
		 1: %v_5->class def_%v_6 %v_5[3.0,] 	 ARGS:
		 2: %v_6->uses_soft_delete? def_%v_7 %v_6[3.1,] 	 ARGS:
		 3: BRANCH %v_7[3.2,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->node def_%v_8 %self[2.0,] 	 ARGS:
		 1: %v_8->deleted? def_%v_9 %v_8[4.0,] 	 ARGS:
		 2: COPY TYPE_PASS def_%v_7 %v_9[4.1,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_7[4.2,3.2,] %self[2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_4[2.7,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = section?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->node_type def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: %v_3->== def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = page?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->node_type def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: %v_3->== def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = link?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->node_type def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: %v_3->== def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = deletable?
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->root? def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
		 2: %self->node def_%v_5 %self[2.0,] 	 ARGS:
		 3: %v_5->respond_to? def_%v_6 %v_5[4.2,] 	 ARGS:Symbol,
		 4: BRANCH %v_6[4.3,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->node def_%v_7 %self[2.0,] 	 ARGS:
		 2: %v_7->deletable? def_%v_8 %v_7[6.1,] 	 ARGS:
		 3: RETURN %v_8[6.2,] %self[6.1,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_9 
		 1: 
		 2: RETURN %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = move_to
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_section 
		 6: RECEIVEARG def_position 
		 7: 
		 8: %self->transaction def_%v_3 %self[2.0,] %self[2.0,] 	 ARGS:%self,
CLOSURE BEGIN: %self[2.0,] section[2.5,] position[2.6,] node_count[2.8,] 
BB 1
	outgoing: 15 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 13 
	datadep: 
	instructions:
		 0: 
		 1: %self->parent def_%cl_1_3 %self[2.0,] 	 ARGS:
		 2: section->node def_%cl_1_4 section[] 	 ARGS:
		 3: %cl_1_3->!= def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 ARGS:%cl_1_4,
		 4: BRANCH %cl_1_5[3.3,] 
BB 4
	outgoing: 6 13 
	datadep: 
	instructions:
		 0: 
		 1: %self->remove_from_list def_%cl_1_6 %self[2.0,] 	 ARGS:
		 2: 
		 3: section->node def_%cl_1_7 section[] 	 ARGS:
		 4: ATTRASSIGN %self->parent %cl_1_7[4.3,] 
		 5: 
		 6: %self->save def_%cl_1_8 %self[4.1,4.4,2.0,] 	 ARGS:
		 7: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_8 
BB 6
	outgoing: 7 8 13 
	datadep: 
	instructions:
		 0: 
		 1: position->< def_%cl_1_9 position[] 	 ARGS:Fixnum,
		 2: BRANCH %cl_1_9[6.1,] 
BB 7
	outgoing: 12 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Fixnum def_position 
		 2: COPY TYPE_Fixnum def_%cl_1_10 
		 3: 
BB 8
	outgoing: 9 10 13 
	datadep: 
	instructions:
		 0: 
		 1: (SectionNode) def_%cl_1_11 
		 2: %self->ancestry def_%cl_1_12 %self[4.4,2.0,] 	 ARGS:
		 3: HASH-ancestry- def_%cl_1_13 %cl_1_12[8.2,] 
		 4: %cl_1_11->where def_%cl_1_14 %cl_1_11[8.1,] %cl_1_13[8.3,] 	 ARGS:%cl_1_13,
		 5: %cl_1_14->count def_%cl_1_15 %cl_1_14[8.4,] 	 ARGS:
		 6: COPY TYPE_PASS def_node_count %cl_1_15[8.5,] 
		 7: 
		 8: position->> def_%cl_1_16 position[] %cl_1_15[8.5,] 	 ARGS:node_count,
		 9: BRANCH %cl_1_16[8.8,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_position node_count[8.6,] 
		 1: COPY TYPE_PASS def_%cl_1_17 node_count[8.6,] 
		 2: 
BB 10
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_17 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%cl_1_10 %cl_1_17[10.0,9.1,] 
BB 12
	outgoing: 13 15 
	datadep: 
	instructions:
		 0: 
		 1: %self->insert_at_position def_%cl_1_18 %self[4.4,2.0,] position[7.1,9.0,] 	 ARGS:position,
		 2: RETURN %cl_1_18[12.1,] %self[12.1,4.4,2.0,] 
BB 13
	outgoing: 15 
	datadep: 
	instructions:
		 0: def_%cl_1_19 
		 1: def_%cl_1_20 %cl_1_19[13.0,] 
		 2: RETURN %cl_1_20[13.1,] %self[4.4,2.0,] 
BB 15
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: position[7.1,9.0,] 
		 9: RETURN %v_3[2.8,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = move_before
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_section_node 
		 6: 
		 7: %self->section def_%v_3 %self[2.0,] 	 ARGS:
		 8: section_node->section def_%v_4 section_node[2.5,] 	 ARGS:
		 9: %v_3->== def_%v_5 %v_3[2.7,] %v_4[2.8,] 	 ARGS:%v_4,
		 10: BRANCH %v_5[2.9,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->position def_%v_6 %self[2.0,] 	 ARGS:
		 1: section_node->position def_%v_7 section_node[2.5,] 	 ARGS:
		 2: %v_6->< def_%v_8 %v_6[3.0,] %v_7[3.1,] 	 ARGS:%v_7,
		 3: COPY TYPE_PASS def_%v_5 %v_8[3.2,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_5[3.3,2.9,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: section_node->position def_%v_9 section_node[2.5,] 	 ARGS:
		 2: %v_9->- def_%v_10 %v_9[5.1,] 	 ARGS:Fixnum,
		 3: COPY TYPE_PASS def_pos %v_10[5.2,] 
		 4: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: section_node->position def_%v_11 section_node[2.5,] 	 ARGS:
		 2: COPY TYPE_PASS def_pos %v_11[6.1,] 
		 3: COPY TYPE_PASS def_%v_10 %v_11[6.1,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: section_node->section def_%v_12 section_node[2.5,] 	 ARGS:
		 2: %self->move_to def_%v_13 %self[2.0,] %v_12[7.1,] pos[6.2,5.3,] 	 ARGS:%v_12,pos,
		 3: RETURN %v_13[7.2,] %self[7.2,2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = move_after
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_section_node 
		 6: 
		 7: %self->section def_%v_3 %self[2.0,] 	 ARGS:
		 8: section_node->section def_%v_4 section_node[2.5,] 	 ARGS:
		 9: %v_3->== def_%v_5 %v_3[2.7,] %v_4[2.8,] 	 ARGS:%v_4,
		 10: BRANCH %v_5[2.9,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->position def_%v_6 %self[2.0,] 	 ARGS:
		 1: section_node->position def_%v_7 section_node[2.5,] 	 ARGS:
		 2: %v_6->< def_%v_8 %v_6[3.0,] %v_7[3.1,] 	 ARGS:%v_7,
		 3: COPY TYPE_PASS def_%v_5 %v_8[3.2,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_5[3.3,2.9,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: section_node->position def_%v_9 section_node[2.5,] 	 ARGS:
		 2: COPY TYPE_PASS def_pos %v_9[5.1,] 
		 3: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: section_node->position def_%v_10 section_node[2.5,] 	 ARGS:
		 2: %v_10->+ def_%v_11 %v_10[6.1,] 	 ARGS:Fixnum,
		 3: COPY TYPE_PASS def_pos %v_11[6.2,] 
		 4: COPY TYPE_PASS def_%v_9 %v_11[6.2,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: section_node->section def_%v_12 section_node[2.5,] 	 ARGS:
		 2: %self->move_to def_%v_13 %self[2.0,] %v_12[7.1,] pos[6.3,5.2,] 	 ARGS:%v_12,pos,
		 3: RETURN %v_13[7.2,] %self[7.2,2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = move_to_beginning
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_sec 
		 6: 
		 7: %self->move_to def_%v_3 %self[2.0,] sec[2.5,] 	 ARGS:sec,Fixnum,
		 8: RETURN %v_3[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = move_to_end
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_sec 
		 6: 
		 7: CONSTANT def_%v_3 	 ARGS:Fixnum,
		 8: %self->move_to def_%v_4 %self[2.0,] sec[2.5,] %v_3[2.7,] 	 ARGS:sec,%v_3,
		 9: RETURN %v_4[2.8,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ancestry_path
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->path_ids def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: %v_3->join def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

