SET IRMethod, name = named
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: 
		 7: HASH-name- def_%v_3 name[2.5,] 
		 8: %self->where def_%v_4 %self[2.0,] %v_3[2.7,] 	 ARGS:%v_3,
		 9: RETURN %v_4[2.8,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = category_map
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->all def_%v_3 %self[2.0,] 	 ARGS:
		 7: (Hash) def_%v_4 
		 8: COPY TYPE_Array def_%v_5 
		 9: %v_4->new def_%v_6 %v_4[2.7,] %v_5[2.8,] 	 ARGS:%v_5,
		 10: %v_3->inject def_%v_7 %v_3[2.6,] %v_6[2.9,] %self[2.0,2.6,] 	 ARGS:%v_6,%v_3,
CLOSURE BEGIN: ct[] %self[2.0,2.6,] map[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_map 
		 3: RECEIVEARG def_ct 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: ct->id def_%cl_1_3 ct[2.3,] 	 ARGS:
		 2: %cl_1_3->to_s def_%cl_1_4 %cl_1_3[3.1,] 	 ARGS:
		 3: ct->category_list def_%cl_1_5 ct[3.1,2.3,] 	 ARGS:
		 4: %cl_1_5->map def_%cl_1_6 %cl_1_5[3.3,] %self[2.0,] 	 ARGS:%cl_1_5,
CLOSURE BEGIN: c[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_c 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: c->path def_%cl_2_3 c[2.2,] 	 ARGS:
		 2: c->id def_%cl_2_4 c[3.1,2.2,] 	 ARGS:
		 3: %cl_2_4->to_s def_%cl_2_5 %cl_2_4[3.2,] 	 ARGS:
		 4: COPY TYPE_Array def_%cl_2_6 %cl_2_3[3.1,] %cl_2_5[3.3,] 
		 5: RETURN %cl_2_6[3.4,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_7 
		 1: def_%cl_2_8 %cl_2_7[4.0,] 
		 2: RETURN %cl_2_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 5: ATTRASSIGN map->[] %cl_1_4[3.2,] %cl_1_6[3.4,] 
		 6: 
		 7: RETURN map[3.5,2.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 11: RETURN %v_7[2.10,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = category_list
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: def_order 
		 6: order[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_3 
		 1: COPY TYPE_PASS def_order %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%v_4 
		 2: COPY TYPE_PASS def_list %v_4[4.1,] 
		 3: 
		 4: %self->lambda def_%v_5 %self[2.0,] %self[2.0,] 	 ARGS:%self,
CLOSURE BEGIN: list[4.2,] cat[] order[3.1,2.5,] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_cat 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: list-><< def_%cl_1_3 list[] cat[2.2,] 	 ARGS:cat,
		 2: 
		 3: cat->children def_%cl_1_4 cat[2.2,] 	 ARGS:
		 4: %cl_1_4->order def_%cl_1_5 %cl_1_4[3.3,] order[] 	 ARGS:order,
		 5: %cl_1_5->each def_%cl_1_6 %cl_1_5[3.4,] %self[2.0,] 	 ARGS:%cl_1_5,
CLOSURE BEGIN: fn[] c[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_c 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: fn->call def_%cl_2_3 fn[] c[2.2,] 	 ARGS:c,
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 6: RETURN %cl_1_6[3.5,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 5: COPY TYPE_PASS def_fn %v_5[4.4,] 
		 6: 
		 7: %self->categories def_%v_6 %self[4.4,2.0,] 	 ARGS:
		 8: %v_6->top_level def_%v_7 %v_6[4.7,] 	 ARGS:
		 9: %v_7->order def_%v_8 %v_7[4.8,] order[3.1,2.5,] 	 ARGS:order,
		 10: %v_8->each def_%v_9 %v_8[4.9,] %self[4.4,4.7,2.0,] 	 ARGS:%v_8,
CLOSURE BEGIN: fn[4.5,] cat[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_cat 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: fn->call def_%cl_3_3 fn[] cat[2.2,] 	 ARGS:cat,
		 2: RETURN %cl_3_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_4 
		 1: def_%cl_3_5 %cl_3_4[4.0,] 
		 2: RETURN %cl_3_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 11: 
		 12: RETURN list[4.2,] %self[4.4,4.7,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = cannot_be_deleted_message
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->categories def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->count def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->zero? def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
		 1: RETURN %v_6[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_7 
		 1: %self->categories def_%v_8 %self[2.0,] 	 ARGS:
		 2: %v_8->count def_%v_9 %v_8[4.1,] 	 ARGS:
		 3: COPY TYPE_StringLiteral def_%v_10 
		 4: COPY TYPE_StringLiteral def_%v_11 
		 5: %self->categories def_%v_12 %self[4.1,2.0,] 	 ARGS:
		 6: %v_12->count def_%v_13 %v_12[4.5,] 	 ARGS:
		 7: %v_11->pluralize_unless_one def_%v_14 %v_11[4.4,] %v_13[4.6,] 	 ARGS:%v_13,
		 8: BUILDSTRING def_%v_15 %v_7[4.0,] %v_9[4.2,] %v_10[4.3,] %v_14[4.7,] 
		 9: RETURN %v_15[4.8,] %self[4.1,4.5,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

