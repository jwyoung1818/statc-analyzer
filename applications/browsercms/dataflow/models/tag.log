SET IRMethod, name = named
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_tag 
		 6: 
		 7: HASH-name- def_%v_3 tag[2.5,] 
		 8: %self->where def_%v_4 %self[2.0,] %v_3[2.7,] 	 ARGS:%v_3,
		 9: RETURN %v_4[2.8,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = counts
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->table_name def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: %self->table_name def_%v_5 %self[2.0,2.6,] 	 ARGS:
		 9: COPY TYPE_StringLiteral def_%v_6 
		 10: %self->table_name def_%v_7 %self[2.0,2.6,2.8,] 	 ARGS:
		 11: COPY TYPE_StringLiteral def_%v_8 
		 12: BUILDSTRING def_%v_9 %v_3[2.6,] %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] %v_8[2.11,] 
		 13: %self->select def_%v_10 %self[2.0,2.6,2.8,2.10,] %v_9[2.12,] 	 ARGS:%v_9,
		 14: %v_10->joins def_%v_11 %v_10[2.13,] 	 ARGS:Symbol,
		 15: 
		 16: %self->table_name def_%v_12 %self[2.0,2.6,2.8,2.10,2.13,] 	 ARGS:
		 17: COPY TYPE_StringLiteral def_%v_13 
		 18: %self->table_name def_%v_14 %self[2.0,2.6,2.8,2.10,2.13,2.16,] 	 ARGS:
		 19: COPY TYPE_StringLiteral def_%v_15 
		 20: BUILDSTRING def_%v_16 %v_12[2.16,] %v_13[2.17,] %v_14[2.18,] %v_15[2.19,] 
		 21: %v_11->group def_%v_17 %v_11[2.14,] %v_16[2.20,] 	 ARGS:%v_16,
		 22: COPY TYPE_StringLiteral def_%v_18 
		 23: 
		 24: %self->table_name def_%v_19 %self[2.0,2.6,2.8,2.10,2.13,2.16,2.18,] 	 ARGS:
		 25: COPY TYPE_StringLiteral def_%v_20 
		 26: BUILDSTRING def_%v_21 %v_18[2.22,] %v_19[2.24,] %v_20[2.25,] 
		 27: %v_17->order def_%v_22 %v_17[2.21,] %v_21[2.26,] 	 ARGS:%v_21,
		 28: RETURN %v_22[2.27,] %self[2.0,2.6,2.8,2.10,2.13,2.16,2.18,2.24,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = cloud
BB 1
	outgoing: 13 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_options 
		 6: options[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: options->delete def_%v_4 options[3.1,2.5,] 	 ARGS:Symbol,
		 2: BRANCH %v_4[4.1,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Fixnum def_%v_4 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: %v_4->- def_%v_5 %v_4[5.0,4.1,] 	 ARGS:Fixnum,
		 1: COPY TYPE_PASS def_sizes %v_5[6.0,] 
		 2: 
		 3: %v_5->< def_%v_6 %v_5[6.0,] 	 ARGS:Fixnum,
		 4: BRANCH %v_6[6.3,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Fixnum def_sizes 
		 1: COPY TYPE_Fixnum def_%v_7 
		 2: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_7 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: 
		 1: %self->counts def_%v_8 %self[2.0,] 	 ARGS:
		 2: %v_8->limit def_%v_9 %v_8[9.1,] sizes[7.0,6.1,] 	 ARGS:sizes,
		 3: COPY TYPE_PASS def_tags %v_9[9.2,] 
		 4: 
		 5: %v_9->blank? def_%v_10 %v_9[9.2,] 	 ARGS:
		 6: BRANCH %v_10[9.5,] 
BB 10
	outgoing: 13 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%v_11 
		 1: RETURN %v_11[10.0,] %self[2.0,] 
BB 11
	outgoing: 13 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_12 
		 1: 
		 2: COPY TYPE_Nil def_min 
		 3: 
		 4: COPY TYPE_Nil def_max 
		 5: 
		 6: tags->each def_%v_13 tags[9.3,] %self[2.0,] 	 ARGS:tags,
CLOSURE BEGIN: t[11.6,] min[11.2,] max[11.4,] 
BB 1
	outgoing: 16 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_t 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 14 
	datadep: 
	instructions:
		 0: 
		 1: t->count def_%cl_1_3 t[2.2,] 	 ARGS:
		 2: %cl_1_3->to_i def_%cl_1_4 %cl_1_3[3.1,] 	 ARGS:
		 3: ATTRASSIGN t->count %cl_1_4[3.2,] 
		 4: 
		 5: min->nil? def_%cl_1_5 min[] 	 ARGS:
		 6: BRANCH %cl_1_5[3.5,] 
BB 4
	outgoing: 5 14 
	datadep: 
	instructions:
		 0: t->count def_%cl_1_6 t[3.3,2.2,] 	 ARGS:
		 1: %cl_1_6->< def_%cl_1_7 %cl_1_6[4.0,] min[] 	 ARGS:min,
		 2: COPY TYPE_PASS def_%cl_1_5 %cl_1_7[4.1,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_5[4.2,3.5,] 
BB 6
	outgoing: 8 14 
	datadep: 
	instructions:
		 0: t->count def_%cl_1_8 t[3.3,2.2,] 	 ARGS:
		 1: COPY TYPE_PASS def_min %cl_1_8[6.0,] 
		 2: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_8 
BB 8
	outgoing: 9 10 14 
	datadep: 
	instructions:
		 0: 
		 1: max->nil? def_%cl_1_9 max[] 	 ARGS:
		 2: BRANCH %cl_1_9[8.1,] 
BB 9
	outgoing: 10 14 
	datadep: 
	instructions:
		 0: t->count def_%cl_1_10 t[3.3,2.2,] 	 ARGS:
		 1: %cl_1_10->> def_%cl_1_11 %cl_1_10[9.0,] min[6.1,] 	 ARGS:min,
		 2: COPY TYPE_PASS def_%cl_1_9 %cl_1_11[9.1,] 
BB 10
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_9[9.2,8.1,] 
BB 11
	outgoing: 13 14 
	datadep: 
	instructions:
		 0: t->count def_%cl_1_12 t[3.3,2.2,] 	 ARGS:
		 1: COPY TYPE_PASS def_max %cl_1_12[11.0,] 
		 2: 
BB 12
	outgoing: 16 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 13
	outgoing: 16 
	datadep: 
	instructions:
		 0: RETURN %cl_1_12[11.0,] %self[2.0,] 
BB 14
	outgoing: 16 
	datadep: 
	instructions:
		 0: def_%cl_1_13 
		 1: def_%cl_1_14 %cl_1_13[14.0,] 
		 2: RETURN %cl_1_14[14.1,] %self[2.0,] 
BB 16
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: min[6.1,] max[11.1,] 
		 7: 
		 8: max->- def_%v_14 max[11.4,11.6,] min[11.2,11.6,] 	 ARGS:min,
		 9: %v_14->/ def_%v_15 %v_14[11.8,] sizes[7.0,6.1,] 	 ARGS:sizes,
		 10: %v_15->+ def_%v_16 %v_15[11.9,] 	 ARGS:Fixnum,
		 11: COPY TYPE_PASS def_divisor %v_16[11.10,] 
		 12: 
		 13: tags->each def_%v_17 tags[11.6,9.3,] %self[2.0,] 	 ARGS:tags,
CLOSURE BEGIN: t[11.13,11.6,] divisor[11.11,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_t 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%cl_2_3 
		 2: t->count def_%cl_2_4 t[2.2,] 	 ARGS:
		 3: %cl_2_4->* def_%cl_2_5 %cl_2_4[3.2,] 	 ARGS:Float,
		 4: %cl_2_5->/ def_%cl_2_6 %cl_2_5[3.3,] divisor[] 	 ARGS:divisor,
		 5: %cl_2_3->% def_%cl_2_7 %cl_2_3[3.1,] %cl_2_6[3.4,] 	 ARGS:%cl_2_6,
		 6: %cl_2_7->to_i def_%cl_2_8 %cl_2_7[3.5,] 	 ARGS:
		 7: ATTRASSIGN t->size %cl_2_8[3.6,] 
		 8: RETURN %cl_2_8[3.6,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_9 
		 1: def_%cl_2_10 %cl_2_9[4.0,] 
		 2: RETURN %cl_2_10[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 14: 
		 15: RETURN tags[11.6,11.13,9.3,] %self[2.0,] 
BB 13
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = tagging_count
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->taggings def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->count def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = columns_for_index
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: HASH-label-method-order- def_%v_5 %v_3[2.6,] %v_4[2.7,] 
		 9: COPY TYPE_StringLiteral def_%v_6 
		 10: HASH-label-method- def_%v_7 %v_6[2.9,] 
		 11: COPY TYPE_StringLiteral def_%v_8 
		 12: COPY TYPE_StringLiteral def_%v_9 
		 13: HASH-label-method-order- def_%v_10 %v_8[2.11,] %v_9[2.12,] 
		 14: COPY TYPE_Array def_%v_11 %v_5[2.8,] %v_7[2.10,] %v_10[2.13,] 
		 15: RETURN %v_11[2.14,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = render
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: GETFIELD %self->content_block def_%v_3 %self[2.0,] 
		 7: %v_3->taggings def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %self->params def_%v_5 %self[2.0,] 	 ARGS:
		 9: %v_5->[] def_%v_6 %v_5[2.8,] 	 ARGS:Symbol,
		 10: HASH-page- def_%v_7 %v_6[2.9,] 
		 11: %v_4->paginate def_%v_8 %v_4[2.7,] %v_7[2.10,] 	 ARGS:%v_7,
		 12: ATTRASSIGN %self->taggings %v_8[2.11,] 
		 13: RETURN %v_8[2.11,] %self[2.0,2.8,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

