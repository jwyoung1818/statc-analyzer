SET IRMethod, name = description
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_description 
		 6: description[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_3 
		 1: COPY TYPE_PASS def_description %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: description->blank? def_%v_4 description[3.1,2.5,] 	 ARGS:
		 2: BRANCH %v_4[4.1,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->description description[3.1,2.5,] 
		 2: COPY TYPE_PASS def_%v_5 description[3.1,2.5,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->description def_%v_6 %self[6.1,2.0,] 
		 2: %v_6->blank? def_%v_7 %v_6[7.1,] 	 ARGS:
		 3: BRANCH %v_7[7.2,] 
BB 8
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%v_8 
		 2: RETURN %v_8[8.1,] %self[6.1,2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_9 
		 1: 
		 2: GETFIELD %self->description def_%v_10 %self[6.1,2.0,] 
		 3: RETURN %v_10[9.2,] %self[6.1,2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = template_path
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->default_template_path def_%v_3 %self[2.0,] 	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = helper_path
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: %self->name def_%v_4 %self[2.0,] 	 ARGS:
		 8: %v_4->underscore def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: COPY TYPE_StringLiteral def_%v_6 
		 10: BUILDSTRING def_%v_7 %v_3[2.6,] %v_5[2.8,] %v_6[2.9,] 
		 11: RETURN %v_7[2.10,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = helper_class
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: BUILDSTRING def_%v_5 %v_3[2.6,] %v_4[2.7,] 
		 9: %v_5->constantize def_%v_6 %v_5[2.8,] 	 ARGS:
		 10: RETURN %v_6[2.9,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = supports_inline_editing?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = has_edit_link?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = types
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->types def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 8 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: (ActiveSupport) def_%v_6 
		 1: (inherit Dependencies) def_%v_7 %v_6[5.0,] 
		 2: %v_7[5.1,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: %v_6->const_missing def_%v_7 %v_6[5.0,] 	 ARGS:Symbol,
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: %v_7->autoload_paths def_%v_8 %v_7[6.0,5.1,] 	 ARGS:
		 1: %v_8->map def_%v_9 %v_8[7.0,] %self[2.0,] 	 ARGS:%v_8,
CLOSURE BEGIN: d[7.1,] %self[2.0,] p[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_d 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Regexp def_%cl_1_3 
		 2: d->=~ def_%cl_1_4 d[2.2,] 	 ARGS:%cl_1_3,
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: (Dir) def_%cl_1_5 
		 2: COPY TYPE_StringLiteral def_%cl_1_6 
		 3: BUILDSTRING def_%cl_1_7 d[2.2,] %cl_1_6[4.2,] 
		 4: %cl_1_5->[] def_%cl_1_8 %cl_1_5[4.1,] %cl_1_7[4.3,] 	 ARGS:%cl_1_7,
		 5: %cl_1_8->map def_%cl_1_9 %cl_1_8[4.4,] %self[2.0,] 	 ARGS:%cl_1_8,
CLOSURE BEGIN: p[4.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_p 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: (File) def_%cl_2_3 
		 2: COPY TYPE_StringLiteral def_%cl_2_4 
		 3: %cl_2_3->basename def_%cl_2_5 %cl_2_3[3.1,] p[2.2,] %cl_2_4[3.2,] 	 ARGS:p,%cl_2_4,
		 4: %cl_2_5->classify def_%cl_2_6 %cl_2_5[3.3,] 	 ARGS:
		 5: %cl_2_6->constantize def_%cl_2_7 %cl_2_6[3.4,] 	 ARGS:
		 6: RETURN %cl_2_7[3.5,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_8 
		 1: def_%cl_2_9 %cl_2_8[4.0,] 
		 2: RETURN %cl_2_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 6: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_1_9[4.5,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_10 
		 1: def_%cl_1_11 %cl_1_10[7.0,] 
		 2: RETURN %cl_1_11[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: %v_9->flatten def_%v_10 %v_9[7.1,] 	 ARGS:
		 3: %v_10->compact def_%v_11 %v_10[7.2,] 	 ARGS:
		 4: %v_11->uniq def_%v_12 %v_11[7.3,] 	 ARGS:
		 5: ATTRASSIGN %self->types %v_12[7.4,] 
		 6: COPY TYPE_PASS def_%v_5 %v_12[7.4,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->types def_%v_13 %self[7.5,2.0,] 
		 2: %v_13->sort! def_%v_14 %v_13[8.1,] %self[7.5,2.0,] 	 ARGS:%v_13,
CLOSURE BEGIN: a[] b[8.2,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_a 
		 3: RECEIVEARG def_b 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: a->name def_%cl_3_3 a[2.2,] 	 ARGS:
		 2: %cl_3_3->downcase def_%cl_3_4 %cl_3_3[3.1,] 	 ARGS:
		 3: b->name def_%cl_3_5 b[2.3,] 	 ARGS:
		 4: %cl_3_5->downcase def_%cl_3_6 %cl_3_5[3.3,] 	 ARGS:
		 5: %cl_3_4-><=> def_%cl_3_7 %cl_3_4[3.2,] %cl_3_6[3.4,] 	 ARGS:%cl_3_6,
		 6: RETURN %cl_3_7[3.5,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_8 
		 1: def_%cl_3_9 %cl_3_8[4.0,] 
		 2: RETURN %cl_3_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: a[2.2,] 
		 3: 
		 4: GETFIELD %self->types def_%v_15 %self[7.5,2.0,] 
		 5: %v_15->select! def_%v_16 %v_15[8.4,] %self[7.5,2.0,] 	 ARGS:%v_15,
CLOSURE BEGIN: %self[7.5,2.0,] type[8.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_4_0 
		 2: RECEIVEARG def_type 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->blacklist def_%cl_4_3 %self[2.0,] 	 ARGS:
		 2: type->name def_%cl_4_4 type[2.2,] 	 ARGS:
		 3: %cl_4_3->include? def_%cl_4_5 %cl_4_3[3.1,] %cl_4_4[3.2,] 	 ARGS:%cl_4_4,
		 4: %cl_4_5->! def_%cl_4_6 %cl_4_5[3.3,] 	 ARGS:
		 5: RETURN %cl_4_6[3.4,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_4_7 
		 1: def_%cl_4_8 %cl_4_7[4.0,] 
		 2: RETURN %cl_4_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 6: 
		 7: GETFIELD %self->types def_%v_17 %self[7.5,2.0,] 
		 8: RETURN %v_17[8.7,] %self[7.5,2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = blacklisted?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_type_name 
		 6: 
		 7: %self->blacklist def_%v_3 %self[2.0,] 	 ARGS:
		 8: type_name->to_s def_%v_4 type_name[2.5,] 	 ARGS:
		 9: %v_4->camelize def_%v_5 %v_4[2.8,] 	 ARGS:
		 10: %v_3->include? def_%v_6 %v_3[2.7,] %v_5[2.9,] 	 ARGS:%v_5,
		 11: RETURN %v_6[2.10,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = blacklist
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->blacklist def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: (Rails) def_%v_6 
		 1: %v_6->configuration def_%v_7 %v_6[5.0,] 	 ARGS:
		 2: %v_7->cms def_%v_8 %v_7[5.1,] 	 ARGS:
		 3: %v_8->content_types def_%v_9 %v_8[5.2,] 	 ARGS:
		 4: %v_9->blacklist def_%v_10 %v_9[5.3,] 	 ARGS:
		 5: %v_10->map def_%v_11 %v_10[5.4,] %self[2.0,] 	 ARGS:%v_10,
CLOSURE BEGIN: underscore_name[5.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_underscore_name 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: underscore_name->to_s def_%cl_1_3 underscore_name[2.2,] 	 ARGS:
		 2: %cl_1_3->camelize def_%cl_1_4 %cl_1_3[3.1,] 	 ARGS:
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 6: ATTRASSIGN %self->blacklist %v_11[5.5,] 
		 7: RETURN %v_11[5.5,] %self[5.6,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = get_subclass
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_type 
		 6: 
		 7: %self->types def_%v_3 %self[2.0,] 	 ARGS:
		 8: %v_3->map def_%v_4 %v_3[2.7,] 	 ARGS:
		 9: %v_4->include? def_%v_5 %v_4[2.8,] type[2.5,] 	 ARGS:type,
		 10: BRANCH %v_5[2.9,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
		 1: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_7 
		 1: %self->raise def_%v_8 %self[2.0,] %v_7[4.0,] 	 ARGS:%v_7,
		 2: COPY TYPE_PASS def_%v_6 %v_8[4.1,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: type->constantize def_%v_9 type[2.5,] 	 ARGS:
		 2: RETURN %v_9[5.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = portlet_type_name
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->type def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->titleize def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = form
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: %self->name def_%v_4 %self[2.0,] 	 ARGS:
		 8: %v_4->tableize def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: COPY TYPE_StringLiteral def_%v_6 
		 10: COPY TYPE_StringLiteral def_%v_7 
		 11: %v_5->sub def_%v_8 %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] 	 ARGS:%v_6,%v_7,
		 12: COPY TYPE_StringLiteral def_%v_9 
		 13: BUILDSTRING def_%v_10 %v_3[2.6,] %v_8[2.11,] %v_9[2.12,] 
		 14: RETURN %v_10[2.13,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = default_template
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (ActionController) def_%v_3 
		 7: (inherit Base) def_%v_4 %v_3[2.6,] 
		 8: %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: %v_4->view_paths def_%v_5 %v_4[3.0,2.7,] 	 ARGS:
		 1: %v_5->map def_%v_6 %v_5[4.0,] %self[2.0,] 	 ARGS:%v_5,
CLOSURE BEGIN: vp[] %self[2.0,] path[4.1,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_vp 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: vp->to_s def_%cl_1_3 vp[2.2,] 	 ARGS:
		 2: %cl_1_3->first def_%cl_1_4 %cl_1_3[3.1,] 	 ARGS:
		 3: COPY TYPE_StringLiteral def_%cl_1_5 
		 4: %cl_1_4->== def_%cl_1_6 %cl_1_4[3.2,] %cl_1_5[3.3,] 	 ARGS:%cl_1_5,
		 5: BRANCH %cl_1_6[3.4,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: vp->to_s def_%cl_1_7 vp[2.2,] 	 ARGS:
		 1: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: (Rails) def_%cl_1_8 
		 1: %cl_1_8->root def_%cl_1_9 %cl_1_8[5.0,] 	 ARGS:
		 2: vp->to_s def_%cl_1_10 vp[2.2,] 	 ARGS:
		 3: %cl_1_9->join def_%cl_1_11 %cl_1_9[5.1,] %cl_1_10[5.2,] 	 ARGS:%cl_1_10,
		 4: COPY TYPE_PASS def_%cl_1_7 %cl_1_11[5.3,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_path %cl_1_7[5.4,4.0,] 
		 1: 
		 2: (Dir) def_%cl_1_12 
		 3: (File) def_%cl_1_13 
		 4: %self->default_template_path def_%cl_1_14 %self[2.0,] 	 ARGS:
		 5: %cl_1_13->join def_%cl_1_15 %cl_1_13[6.3,] path[6.0,] %cl_1_14[6.4,] 	 ARGS:path,%cl_1_14,
		 6: COPY TYPE_StringLiteral def_%cl_1_16 
		 7: %cl_1_15->+ def_%cl_1_17 %cl_1_15[6.5,] %cl_1_16[6.6,] 	 ARGS:%cl_1_16,
		 8: %cl_1_12->[] def_%cl_1_18 %cl_1_12[6.2,] %cl_1_17[6.7,] 	 ARGS:%cl_1_17,
		 9: RETURN %cl_1_18[6.8,] %self[6.4,2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_19 
		 1: def_%cl_1_20 %cl_1_19[7.0,] 
		 2: RETURN %cl_1_20[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: vp[2.2,] 
		 2: %v_6->flatten def_%v_7 %v_6[4.1,] 	 ARGS:
		 3: %v_7->first def_%v_8 %v_7[4.2,] 	 ARGS:
		 4: COPY TYPE_PASS def_template_file %v_8[4.3,] 
		 5: 
		 6: BRANCH %v_8[4.3,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: %self->open def_%v_9 %self[2.0,] template_file[4.4,] %self[2.0,] 	 ARGS:template_file,%self,
CLOSURE BEGIN: f[5.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_f 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: f->read def_%cl_2_3 f[2.2,] 	 ARGS:
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 1: RETURN %v_9[5.0,] %self[5.0,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_10 
		 1: RETURN %v_10[6.0,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_default_template_path
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_s 
		 6: 
		 7: ATTRASSIGN %self->default_template_path s[2.5,] 
		 8: RETURN s[2.5,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = default_template_path
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->default_template_path def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_6 
		 1: %self->name def_%v_7 %self[2.0,] 	 ARGS:
		 2: %v_7->tableize def_%v_8 %v_7[5.1,] 	 ARGS:
		 3: COPY TYPE_StringLiteral def_%v_9 
		 4: COPY TYPE_StringLiteral def_%v_10 
		 5: %v_8->sub def_%v_11 %v_8[5.2,] %v_9[5.3,] %v_10[5.4,] 	 ARGS:%v_9,%v_10,
		 6: COPY TYPE_StringLiteral def_%v_12 
		 7: BUILDSTRING def_%v_13 %v_6[5.0,] %v_11[5.5,] %v_12[5.6,] 
		 8: ATTRASSIGN %self->default_template_path %v_13[5.7,] 
		 9: RETURN %v_13[5.7,] %self[5.1,5.8,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = inline_options
BB 1
	outgoing: 13 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH- def_%v_3 
		 7: COPY TYPE_PASS def_options %v_3[2.6,] 
		 8: 
		 9: %self->class def_%v_4 %self[2.0,] 	 ARGS:
		 10: %v_4->render_inline def_%v_5 %v_4[2.9,] 	 ARGS:
		 11: BRANCH %v_5[2.10,] 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: %self->template def_%v_6 %self[2.0,] 	 ARGS:
		 1: %v_6->nil? def_%v_7 %v_6[3.0,] 	 ARGS:
		 2: BRANCH %v_7[3.1,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->template def_%v_8 %self[2.0,] 	 ARGS:
		 1: %v_8->blank? def_%v_9 %v_8[4.0,] 	 ARGS:
		 2: COPY TYPE_PASS def_%v_7 %v_9[4.1,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %v_7->! def_%v_10 %v_7[4.2,3.1,] 	 ARGS:
		 1: COPY TYPE_PASS def_%v_5 %v_10[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: BRANCH %v_5[5.1,2.10,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: %self->template def_%v_11 %self[2.0,] 	 ARGS:
		 1: ATTRASSIGN options->[] %v_11[7.0,] 
		 2: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_11 
BB 9
	outgoing: 10 11 
	datadep: 
	instructions:
		 0: 
		 1: %self->handler def_%v_12 %self[2.0,] 	 ARGS:
		 2: %v_12->blank? def_%v_13 %v_12[9.1,] 	 ARGS:
		 3: BRANCH %v_13[9.2,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_14 
		 1: 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: %self->handler def_%v_15 %self[2.0,] 	 ARGS:
		 1: ATTRASSIGN options->[] %v_15[11.0,] 
		 2: COPY TYPE_PASS def_%v_14 %v_15[11.0,] 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: 
		 1: RETURN options[11.1,7.1,2.7,] %self[2.0,] 
BB 13
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = handler
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_handler_type 
		 6: 
		 7: %self->define_method def_%v_3 %self[2.0,] %self[2.0,] 	 ARGS:Symbol,%self,
CLOSURE BEGIN: handler_type[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RETURN handler_type[] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_3[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = enable_template_editor
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_enabled 
		 6: 
		 7: %self->render_inline def_%v_3 %self[2.0,] enabled[2.5,] 	 ARGS:enabled,
		 8: RETURN %v_3[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = render_inline
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_args 
		 6: 
		 7: args->length def_%v_3 args[2.5,] 	 ARGS:
		 8: %v_3->> def_%v_4 %v_3[2.7,] 	 ARGS:Fixnum,
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: args->first def_%v_5 args[2.5,] 	 ARGS:
		 2: ATTRASSIGN %self->render_inline %v_5[3.1,] 
		 3: RETURN %v_5[3.1,] %self[3.2,2.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_6 %self[2.0,] 
		 2: %v_6->! def_%v_7 %v_6[4.1,] 	 ARGS:
		 3: BRANCH %v_7[4.2,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->render_inline 
		 2: COPY TYPE_Boolean def_%v_8 
		 3: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: GETFIELD %self->render_inline def_%v_9 %self[2.0,] 
		 2: COPY TYPE_PASS def_%v_8 %v_9[6.1,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %v_8[6.2,5.2,] %self[5.1,2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = type_name
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->type def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->to_s def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->titleize def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = columns_for_index
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: HASH-label-method-order- def_%v_5 %v_3[2.6,] %v_4[2.7,] 
		 9: COPY TYPE_StringLiteral def_%v_6 
		 10: COPY TYPE_StringLiteral def_%v_7 
		 11: HASH-label-method-order- def_%v_8 %v_6[2.9,] %v_7[2.10,] 
		 12: COPY TYPE_StringLiteral def_%v_9 
		 13: COPY TYPE_StringLiteral def_%v_10 
		 14: HASH-label-method-order- def_%v_11 %v_9[2.12,] %v_10[2.13,] 
		 15: COPY TYPE_Array def_%v_12 %v_5[2.8,] %v_8[2.11,] %v_11[2.14,] 
		 16: RETURN %v_12[2.15,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = connectable?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = connected_pages
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Array def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = page_title
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_new_title 
		 6: 
		 7: %self->controller def_%v_3 %self[2.0,] 	 ARGS:
		 8: %v_3->current_page def_%v_4 %v_3[2.7,] 	 ARGS:
		 9: ATTRASSIGN %v_4->title new_title[2.5,] 
		 10: RETURN new_title[2.5,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = instance_name
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->class def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->name def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->demodulize def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: %v_5->underscore def_%v_6 %v_5[2.8,] 	 ARGS:
		 10: COPY TYPE_StringLiteral def_%v_7 
		 11: %self->id def_%v_8 %self[2.0,2.6,] 	 ARGS:
		 12: BUILDSTRING def_%v_9 %v_6[2.9,] %v_7[2.10,] %v_8[2.11,] 
		 13: RETURN %v_9[2.12,] %self[2.0,2.6,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = url_for_success
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->params def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->[] def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: %self->success_url def_%v_5 %self[2.0,2.6,] 	 ARGS:
		 9: %self->request def_%v_6 %self[2.0,2.6,2.8,] 	 ARGS:
		 10: %v_6->referer def_%v_7 %v_6[2.9,] 	 ARGS:
		 11: COPY TYPE_Array def_%v_8 %v_4[2.7,] %v_5[2.8,] %v_7[2.10,] 
		 12: %v_8->detect def_%v_9 %v_8[2.11,] %self[2.0,2.6,2.8,2.9,] 	 ARGS:%v_8,
CLOSURE BEGIN: e[2.12,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_e 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: e->blank? def_%cl_1_3 e[2.2,] 	 ARGS:
		 2: %cl_1_3->! def_%cl_1_4 %cl_1_3[3.1,] 	 ARGS:
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 13: RETURN %v_9[2.12,] %self[2.0,2.6,2.8,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = url_for_failure
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->params def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->[] def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: %self->failure_url def_%v_5 %self[2.0,2.6,] 	 ARGS:
		 9: %self->request def_%v_6 %self[2.0,2.6,2.8,] 	 ARGS:
		 10: %v_6->referer def_%v_7 %v_6[2.9,] 	 ARGS:
		 11: COPY TYPE_Array def_%v_8 %v_4[2.7,] %v_5[2.8,] %v_7[2.10,] 
		 12: %v_8->detect def_%v_9 %v_8[2.11,] %self[2.0,2.6,2.8,2.9,] 	 ARGS:%v_8,
CLOSURE BEGIN: e[2.12,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_e 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: e->blank? def_%cl_1_3 e[2.2,] 	 ARGS:
		 2: %cl_1_3->! def_%cl_1_4 %cl_1_3[3.1,] 	 ARGS:
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 13: RETURN %v_9[2.12,] %self[2.0,2.6,2.8,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = store_params_in_flash
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->instance_name def_%v_3 %self[2.0,] 	 ARGS:
		 7: %self->params def_%v_4 %self[2.0,2.6,] 	 ARGS:
		 8: %self->store_hash_in_flash def_%v_5 %self[2.0,2.6,2.7,] %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_3,%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,2.7,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = store_errors_in_flash
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_errors 
		 6: 
		 7: %self->instance_name def_%v_3 %self[2.0,] 	 ARGS:
		 8: COPY TYPE_StringLiteral def_%v_4 
		 9: BUILDSTRING def_%v_5 %v_3[2.7,] %v_4[2.8,] 
		 10: HASH- def_%v_6 
		 11: errors->inject def_%v_7 errors[2.5,] %v_6[2.10,] %self[2.0,2.7,] 	 ARGS:%v_6,errors,
CLOSURE BEGIN: h[] k[] v[2.11,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_h 
		 3: RECEIVEARG def_%cl_1_1 
		 4: def_%cl_1_2 %cl_1_1[2.3,] 
		 5: def_k %cl_1_2[2.4,] 
		 6: def_v %cl_1_2[2.4,] 
		 7: COPY TYPE_CurrentScope def_%current_scope 
		 8: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN h->[] k[2.5,] v[2.6,] 
		 2: RETURN h[3.1,2.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: h[3.1,2.2,] k[2.5,] 
		 12: %self->store_hash_in_flash def_%v_8 %self[2.0,2.7,] %v_5[2.9,] %v_7[2.11,] 	 ARGS:%v_5,%v_7,
		 13: RETURN %v_8[2.12,] %self[2.0,2.7,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = store_hash_in_flash
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_key 
		 6: RECEIVEARG def_hash 
		 7: 
		 8: %self->flash def_%v_3 %self[2.0,] 	 ARGS:
		 9: (HashWithIndifferentAccess) def_%v_4 
		 10: %v_4->new def_%v_5 %v_4[2.9,] 	 ARGS:
		 11: hash->inject def_%v_6 hash[2.6,] %v_5[2.10,] %self[2.0,2.8,] 	 ARGS:%v_5,hash,
CLOSURE BEGIN: v[2.11,] k[] p[] 
BB 1
	outgoing: 11 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 9 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_p 
		 3: RECEIVEARG def_%cl_1_1 
		 4: def_%cl_1_2 %cl_1_1[2.3,] 
		 5: def_k %cl_1_2[2.4,] 
		 6: def_v %cl_1_2[2.4,] 
		 7: COPY TYPE_CurrentScope def_%current_scope 
		 8: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 9 
	datadep: 
	instructions:
		 0: 
		 1: (StringIO) def_%cl_1_5 
		 2: %cl_1_5->=== def_%cl_1_6 %cl_1_5[3.1,] v[2.6,] 	 ARGS:v,
		 3: BRANCH %cl_1_6[3.2,] 
BB 4
	outgoing: 5 9 
	datadep: 
	instructions:
		 0: (Tempfile) def_%cl_1_7 
		 1: %cl_1_7->=== def_%cl_1_8 %cl_1_7[4.0,] v[2.6,] 	 ARGS:v,
		 2: COPY TYPE_PASS def_%cl_1_6 %cl_1_8[4.1,] 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: BRANCH %cl_1_6[4.2,3.2,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_9 
		 1: 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: k->to_sym def_%cl_1_10 k[2.5,] 	 ARGS:
		 2: ATTRASSIGN p->[] %cl_1_10[7.1,] v[2.6,] 
		 3: COPY TYPE_PASS def_%cl_1_9 v[2.6,] 
BB 8
	outgoing: 11 
	datadep: 
	instructions:
		 0: 
		 1: RETURN p[7.2,2.2,] %self[2.0,] 
BB 9
	outgoing: 11 
	datadep: 
	instructions:
		 0: def_%cl_1_11 
		 1: def_%cl_1_12 %cl_1_11[9.0,] 
		 2: RETURN %cl_1_12[9.1,] %self[2.0,] 
BB 11
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: p[7.2,2.2,] k[2.5,] 
		 12: ATTRASSIGN %v_3->[] key[2.5,] %v_6[2.11,] 
		 13: RETURN %v_6[2.11,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

