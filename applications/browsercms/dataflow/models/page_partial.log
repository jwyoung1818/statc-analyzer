SET IRMethod, name = relative_path instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "partials" def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = file_path instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (File) def_%v_3 
		 7: %self->class def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: %v_4->base_path def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: COPY TYPE_StringLiteral "partials" def_%v_6 
		 10: %self->file_name def_%v_7 %self[2.0,2.7,] 	 SYMBOL:	 ARGS:
		 11: %v_3->join def_%v_8 %v_3[2.6,] %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] 	 SYMBOL:	 ARGS:%v_5,%v_6,%v_7,
		 12: RETURN %v_8[2.11,] %self[2.0,2.7,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = display_name instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_file_name 
		 6: 
		 7: COPY TYPE_StringLiteral "." def_%v_3 
		 8: file_name->split def_%v_4 file_name[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: def_%v_5 %v_4[2.8,] 
		 10: def_%v_6 %v_5[2.9,] 
		 11: def_%v_7 %v_5[2.9,] 
		 12: def_%v_8 %v_5[2.9,] 
		 13: COPY TYPE_PASS def_name %v_6[2.10,] 
		 14: COPY TYPE_PASS def_format %v_7[2.11,] 
		 15: COPY TYPE_PASS def_handler %v_8[2.12,] 
		 16: 
		 17: COPY TYPE_Regexp def_%v_9 
		 18: COPY TYPE_StringLiteral "" def_%v_10 
		 19: %v_6->sub def_%v_11 %v_6[2.10,] %v_10[2.18,] 	 SYMBOL:	 ARGS:%v_9,%v_10,
		 20: %v_11->titleize def_%v_12 %v_11[2.19,] 	 SYMBOL:	 ARGS:
		 21: COPY TYPE_StringLiteral " (" def_%v_13 
		 22: COPY TYPE_StringLiteral "/" def_%v_14 
		 23: COPY TYPE_StringLiteral ")" def_%v_15 
		 24: BUILDSTRING def_%v_16 %v_12[2.20,] %v_13[2.21,] format[2.14,] %v_14[2.22,] handler[2.15,] %v_15[2.23,] 
		 25: RETURN %v_16[2.24,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = prepend_underscore instanceMethod = true
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->blank? def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: %v_4->! def_%v_5 %v_4[2.7,] 	 SYMBOL:	 ARGS:
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %self->name def_%v_6 %self[2.0,] 	 SYMBOL:	 ARGS:
		 1: %v_6->[] def_%v_7 %v_6[3.0,] 	 SYMBOL:	 ARGS:Fixnum,Fixnum,
		 2: COPY TYPE_StringLiteral "_" def_%v_8 
		 3: %v_7->!= def_%v_9 %v_7[3.1,] %v_8[3.2,] 	 SYMBOL:	 ARGS:%v_8,
		 4: COPY TYPE_PASS def_%v_5 %v_9[3.3,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_5[3.4,2.8,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "_" def_%v_10 
		 2: %self->name def_%v_11 %self[2.0,] 	 SYMBOL:	 ARGS:
		 3: BUILDSTRING def_%v_12 %v_10[5.1,] %v_11[5.2,] 
		 4: ATTRASSIGN %self->name %v_12[5.3,] 
		 5: RETURN %v_12[5.3,] %self[5.2,5.4,2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = partial? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: RETURN %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = placeholder instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "_header" def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = hint instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "No spaces allowed. Must start with _." def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

