SET IRMethod, name = with_file_name
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_file_name 
		 6: 
		 7: HASH-name-format-handler- def_%v_3 
		 8: COPY TYPE_PASS def_conditions %v_3[2.7,] 
		 9: 
		 10: COPY TYPE_PASS def_%v_4 file_name[2.5,] 
		 11: BRANCH file_name[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_5 
		 1: file_name->split def_%v_6 file_name[2.5,] %v_5[3.0,] 	 ARGS:%v_5,
		 2: COPY TYPE_PASS def_parts %v_6[3.1,] 
		 3: COPY TYPE_PASS def_%v_7 %v_6[3.1,] 
		 4: %v_6->size def_%v_8 %v_6[3.1,] 	 ARGS:
		 5: COPY TYPE_PASS def_%v_9 %v_8[3.4,] 
		 6: %v_8->== def_%v_10 %v_8[3.4,] 	 ARGS:Fixnum,
		 7: COPY TYPE_PASS def_%v_4 %v_10[3.6,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_4[3.7,2.10,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: parts->[] def_%v_11 parts[3.2,] 	 ARGS:Fixnum,
		 2: ATTRASSIGN conditions->[] %v_11[5.1,] 
		 3: 
		 4: parts->[] def_%v_12 parts[5.1,3.2,] 	 ARGS:Fixnum,
		 5: ATTRASSIGN conditions->[] %v_12[5.4,] 
		 6: 
		 7: parts->[] def_%v_13 parts[5.1,5.4,3.2,] 	 ARGS:Fixnum,
		 8: ATTRASSIGN conditions->[] %v_13[5.7,] 
		 9: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_13 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: %self->where def_%v_14 %self[2.0,] conditions[5.2,5.5,5.8,2.8,] 	 ARGS:conditions,
		 2: RETURN %v_14[7.1,] %self[7.1,2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = title
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->demodulize def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->titleize def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = new_with_defaults
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVECONSTARG def_options 
		 6: options[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: HASH- def_%v_3 
		 1: COPY TYPE_PASS def_options %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%v_4 
		 2: COPY TYPE_StringLiteral def_%v_5 
		 3: %self->default_body def_%v_6 %self[2.0,] 	 ARGS:
		 4: (I18n) def_%v_7 
		 5: %v_7->locale def_%v_8 %v_7[4.4,] 	 ARGS:
		 6: HASH-format-handler-body-locale- def_%v_9 %v_4[4.1,] %v_5[4.2,] %v_6[4.3,] %v_8[4.5,] 
		 7: %v_9->merge def_%v_10 %v_9[4.6,] options[3.1,2.5,] 	 ARGS:options,
		 8: %self->new def_%v_11 %self[4.3,2.0,] %v_10[4.7,] 	 ARGS:%v_10,
		 9: RETURN %v_11[4.8,] %self[4.3,4.8,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_by_file_name
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_file_name 
		 6: 
		 7: %self->with_file_name def_%v_3 %self[2.0,] file_name[2.5,] 	 ARGS:file_name,
		 8: %v_3->first def_%v_4 %v_3[2.7,] 	 ARGS:
		 9: RETURN %v_4[2.8,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = base_path
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (File) def_%v_3 
		 7: (Rails) def_%v_4 
		 8: %v_4->root def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: COPY TYPE_StringLiteral def_%v_6 
		 10: COPY TYPE_StringLiteral def_%v_7 
		 11: %v_3->join def_%v_8 %v_3[2.6,] %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] 	 ARGS:%v_5,%v_6,%v_7,
		 12: RETURN %v_8[2.11,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = file_name
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: %self->format def_%v_5 %self[2.0,2.6,] 	 ARGS:
		 9: COPY TYPE_StringLiteral def_%v_6 
		 10: %self->handler def_%v_7 %self[2.0,2.6,2.8,] 	 ARGS:
		 11: BUILDSTRING def_%v_8 %v_3[2.6,] %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] 
		 12: RETURN %v_8[2.11,] %self[2.0,2.6,2.8,2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = display_name
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->class def_%v_3 %self[2.0,] 	 ARGS:
		 7: %self->file_name def_%v_4 %self[2.0,2.6,] 	 ARGS:
		 8: %v_3->display_name def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = default_body
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_publish_on_save
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: ATTRASSIGN %self->publish_on_save 
		 7: RETURN %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_path
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->class def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->relative_path def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: COPY TYPE_StringLiteral def_%v_5 
		 9: %v_4->+ def_%v_6 %v_4[2.7,] %v_5[2.8,] 	 ARGS:%v_5,
		 10: %self->name def_%v_7 %self[2.0,2.6,] 	 ARGS:
		 11: %v_6->+ def_%v_8 %v_6[2.9,] %v_7[2.10,] 	 ARGS:%v_7,
		 12: ATTRASSIGN %self->path %v_8[2.11,] 
		 13: RETURN %v_8[2.11,] %self[2.0,2.6,2.10,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_defaults
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->locale def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_4 
		 1: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: (I18n) def_%v_5 
		 1: %v_5->locale def_%v_6 %v_5[4.0,] 	 ARGS:
		 2: %v_6->to_s def_%v_7 %v_6[4.1,] 	 ARGS:
		 3: ATTRASSIGN %self->locale %v_7[4.2,] 
		 4: COPY TYPE_PASS def_%v_4 %v_7[4.2,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->partial? def_%v_8 %self[4.3,2.0,] 	 ARGS:
		 2: ATTRASSIGN %self->partial %v_8[5.1,] 
		 3: 
		 4: RETURN %self[5.1,5.2,4.3,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

