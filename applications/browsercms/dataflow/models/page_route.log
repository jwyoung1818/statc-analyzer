SET IRMethod, name = can_be_loaded?
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->database_exists? def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->table_exists? def_%v_4 %self[2.0,] 	 ARGS:
		 1: RETURN %v_4[3.0,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.6,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reload_routes
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (Rails) def_%v_3 
		 7: %v_3->application def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->reload_routes! def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reload_routes
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (PageRoute) def_%v_3 
		 7: %v_3->reload_routes def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = add_condition
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: RECEIVEARG def_value 
		 7: 
		 8: %self->conditions def_%v_3 %self[2.0,] 	 ARGS:
		 9: name->to_s def_%v_4 name[2.5,] 	 ARGS:
		 10: value->to_s def_%v_5 value[2.6,] 	 ARGS:
		 11: HASH-name-value- def_%v_6 %v_4[2.9,] %v_5[2.10,] 
		 12: %v_3->build def_%v_7 %v_3[2.8,] %v_6[2.11,] 	 ARGS:%v_6,
		 13: RETURN %v_7[2.12,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = add_requirement
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: RECEIVEARG def_value 
		 7: 
		 8: %self->requirements def_%v_3 %self[2.0,] 	 ARGS:
		 9: name->to_s def_%v_4 name[2.5,] 	 ARGS:
		 10: value->to_s def_%v_5 value[2.6,] 	 ARGS:
		 11: HASH-name-value- def_%v_6 %v_4[2.9,] %v_5[2.10,] 
		 12: %v_3->build def_%v_7 %v_3[2.8,] %v_6[2.11,] 	 ARGS:%v_6,
		 13: RETURN %v_7[2.12,] %self[2.0,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = conditions_map
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->conditions def_%v_3 %self[2.0,] 	 ARGS:
		 7: HASH- def_%v_4 
		 8: %v_3->inject def_%v_5 %v_3[2.6,] %v_4[2.7,] %self[2.0,2.6,] 	 ARGS:%v_4,%v_3,
CLOSURE BEGIN: e[] acc[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_acc 
		 3: RECEIVEARG def_e 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: e->name def_%cl_1_3 e[2.3,] 	 ARGS:
		 2: %cl_1_3->to_sym def_%cl_1_4 %cl_1_3[3.1,] 	 ARGS:
		 3: e->value def_%cl_1_5 e[3.1,2.3,] 	 ARGS:
		 4: %cl_1_5->to_sym def_%cl_1_6 %cl_1_5[3.3,] 	 ARGS:
		 5: ATTRASSIGN acc->[] %cl_1_4[3.2,] %cl_1_6[3.4,] 
		 6: RETURN acc[3.5,2.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = requirements_map
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->requirements def_%v_3 %self[2.0,] 	 ARGS:
		 7: HASH- def_%v_4 
		 8: %v_3->inject def_%v_5 %v_3[2.6,] %v_4[2.7,] %self[2.0,2.6,] 	 ARGS:%v_4,%v_3,
CLOSURE BEGIN: e[] acc[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_acc 
		 3: RECEIVEARG def_e 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: e->name def_%cl_1_3 e[2.3,] 	 ARGS:
		 2: %cl_1_3->to_sym def_%cl_1_4 %cl_1_3[3.1,] 	 ARGS:
		 3: (Regexp) def_%cl_1_5 
		 4: e->value def_%cl_1_6 e[3.1,2.3,] 	 ARGS:
		 5: %cl_1_5->new def_%cl_1_7 %cl_1_5[3.3,] %cl_1_6[3.4,] 	 ARGS:%cl_1_6,
		 6: ATTRASSIGN acc->[] %cl_1_4[3.2,] %cl_1_7[3.5,] 
		 7: RETURN acc[3.6,2.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[4.0,] 
		 2: RETURN %cl_1_9[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = route_name
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->name def_%v_4 %self[2.0,] 	 ARGS:
		 1: %v_4->to_slug def_%v_5 %v_4[3.0,] 	 ARGS:
		 2: COPY TYPE_StringLiteral def_%v_6 
		 3: COPY TYPE_StringLiteral def_%v_7 
		 4: %v_5->gsub def_%v_8 %v_5[3.1,] %v_6[3.2,] %v_7[3.3,] 	 ARGS:%v_6,%v_7,
		 5: RETURN %v_8[3.4,] %self[3.0,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = via=
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_method 
		 6: 
		 7: method->respond_to? def_%v_3 method[2.5,] 	 ARGS:Symbol,
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: method->each def_%v_4 method[2.5,] %self[2.0,] 	 ARGS:method,
CLOSURE BEGIN: %self[2.0,] m[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_m 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->add_condition def_%cl_1_3 %self[2.0,] m[2.2,] 	 ARGS:Symbol,m,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 2: RETURN %v_4[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->add_condition def_%v_5 %self[2.0,] method[2.5,] 	 ARGS:Symbol,method,
		 2: RETURN %v_5[4.1,] %self[4.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = via
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->conditions def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->collect def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 ARGS:%v_3,
CLOSURE BEGIN: condition[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_condition 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: condition->name def_%cl_1_3 condition[2.2,] 	 ARGS:
		 2: %cl_1_3->to_sym def_%cl_1_4 %cl_1_3[3.1,] 	 ARGS:
		 3: %cl_1_4->== def_%cl_1_5 %cl_1_4[3.2,] 	 ARGS:Symbol,
		 4: BRANCH %cl_1_5[3.3,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: condition->value def_%cl_1_6 condition[2.2,] 	 ARGS:
		 2: %cl_1_6->to_sym def_%cl_1_7 %cl_1_6[4.1,] 	 ARGS:
		 3: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_1_7[4.2,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[7.0,] 
		 2: RETURN %cl_1_9[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 8: COPY TYPE_PASS def_found %v_4[2.7,] 
		 9: 
		 10: %v_4->compact def_%v_5 %v_4[2.7,] 	 ARGS:
		 11: COPY TYPE_PASS def_methods %v_5[2.10,] 
		 12: 
		 13: %v_5->empty? def_%v_6 %v_5[2.10,] 	 ARGS:
		 14: BRANCH %v_6[2.13,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: methods-><< def_%v_7 methods[2.11,] 	 ARGS:Symbol,
		 2: %v_7-><< def_%v_8 %v_7[3.1,] 	 ARGS:Symbol,
		 3: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_8 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: RETURN methods[2.11,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = constraints
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->requirements_map def_%v_3 %self[2.0,] 	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = options_map
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral def_%v_3 
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: HASH-controller-action- def_%v_5 %v_3[2.6,] %v_4[2.7,] 
		 9: COPY TYPE_PASS def_m %v_5[2.8,] 
		 10: 
		 11: %self->id def_%v_6 %self[2.0,] 	 ARGS:
		 12: %v_6->to_s def_%v_7 %v_6[2.11,] 	 ARGS:
		 13: ATTRASSIGN m->[] %v_7[2.12,] 
		 14: 
		 15: %self->requirements_map def_%v_8 %self[2.0,2.11,] 	 ARGS:
		 16: ATTRASSIGN m->[] %v_8[2.15,] 
		 17: 
		 18: %self->conditions_map def_%v_9 %self[2.0,2.11,2.15,] 	 ARGS:
		 19: ATTRASSIGN m->[] %v_9[2.18,] 
		 20: 
		 21: RETURN m[2.9,2.13,2.16,2.19,] %self[2.0,2.11,2.15,2.18,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = page_route_id
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->id def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->to_s def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = execute
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_controller 
		 6: 
		 7: %self->code def_%v_3 %self[2.0,] 	 ARGS:
		 8: %v_3->blank? def_%v_4 %v_3[2.7,] 	 ARGS:
		 9: BRANCH %v_4[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_5 
		 1: RETURN %v_5[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->code def_%v_6 %self[2.0,] 	 ARGS:
		 1: controller->instance_eval def_%v_7 controller[2.5,] %v_6[4.0,] 	 ARGS:%v_6,
		 2: RETURN %v_7[4.1,] %self[4.0,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

