SET IRMethod, name = initialize
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_options 
		 6: 
		 7: options->[] def_%v_3 options[2.5,] 	 ARGS:Symbol,
		 8: ATTRASSIGN %self->name %v_3[2.7,] 
		 9: 
		 10: (EngineAwarePathBuilder) def_%v_4 
		 11: %self->model_class def_%v_5 %self[2.0,2.8,] 	 ARGS:
		 12: %v_4->new def_%v_6 %v_4[2.10,] %v_5[2.11,] 	 ARGS:%v_5,
		 13: ATTRASSIGN %self->path_builder %v_6[2.12,] 
		 14: RETURN %v_6[2.12,] %self[2.0,2.8,2.11,2.13,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = named
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: 
		 7: (ContentType) def_%v_3 
		 8: HASH-name- def_%v_4 name[2.5,] 
		 9: %v_3->new def_%v_5 %v_3[2.7,] %v_4[2.8,] 	 ARGS:%v_4,
		 10: COPY TYPE_Array def_%v_6 %v_5[2.9,] 
		 11: RETURN %v_6[2.10,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = connectable
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->available def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->select def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 ARGS:%v_3,
CLOSURE BEGIN: content_type[2.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_content_type 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: content_type->connectable? def_%cl_1_3 content_type[2.2,] 	 ARGS:
		 2: RETURN %cl_1_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = available_by_module
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH- def_%v_3 
		 7: COPY TYPE_PASS def_modules %v_3[2.6,] 
		 8: 
		 9: %self->available def_%v_4 %self[2.0,] 	 ARGS:
		 10: %v_4->each def_%v_5 %v_4[2.9,] %self[2.0,2.9,] 	 ARGS:%v_4,
CLOSURE BEGIN: content_type[2.10,] modules[2.7,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_content_type 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: content_type->module_name def_%cl_1_3 content_type[2.2,] 	 ARGS:
		 2: modules->[] def_%cl_1_4 modules[] %cl_1_3[3.1,] 	 ARGS:%cl_1_3,
		 3: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_5 
		 1: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: content_type->module_name def_%cl_1_6 content_type[2.2,] 	 ARGS:
		 1: COPY TYPE_Array def_%cl_1_7 
		 2: ATTRASSIGN modules->[] %cl_1_6[5.0,] %cl_1_7[5.1,] 
		 3: COPY TYPE_PASS def_%cl_1_5 %cl_1_7[5.1,] 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: content_type->module_name def_%cl_1_8 content_type[2.2,] 	 ARGS:
		 2: modules->[] def_%cl_1_9 modules[5.2,] %cl_1_8[6.1,] 	 ARGS:%cl_1_8,
		 3: %cl_1_9-><< def_%cl_1_10 %cl_1_9[6.2,] content_type[6.1,2.2,] 	 ARGS:content_type,
		 4: RETURN %cl_1_10[6.3,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_11 
		 1: def_%cl_1_12 %cl_1_11[7.0,] 
		 2: RETURN %cl_1_12[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 11: 
		 12: RETURN modules[2.7,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = available
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (ObjectSpace) def_%v_3 
		 7: (inherit Class) def_%v_4 
		 8: %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: CONSTANT def_%v_4 	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_3->each_object def_%v_5 %v_3[2.6,] %v_4[3.0,2.7,] 	 ARGS:%v_4,
		 1: %v_5->select def_%v_6 %v_5[4.0,] %self[2.0,] 	 ARGS:%v_5,
CLOSURE BEGIN: klass[4.1,] 
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_klass 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 8 
	datadep: 
	instructions:
		 0: 
		 1: (Concerns) def_%cl_1_3 
		 2: (inherit HasContentType) def_%cl_1_4 %cl_1_3[3.1,] 
		 3: %cl_1_4[3.2,] 
BB 4
	outgoing: 5 8 
	datadep: 
	instructions:
		 0: %cl_1_3->const_missing def_%cl_1_4 %cl_1_3[3.1,] 	 ARGS:Symbol,
BB 5
	outgoing: 6 7 8 
	datadep: 
	instructions:
		 0: (inherit InstanceMethods) def_%cl_1_5 %cl_1_4[4.0,3.2,] 
		 1: %cl_1_5[5.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: %cl_1_4->const_missing def_%cl_1_5 %cl_1_4[4.0,3.2,] 	 ARGS:Symbol,
BB 7
	outgoing: 8 10 
	datadep: 
	instructions:
		 0: klass->< def_%cl_1_6 klass[2.2,] %cl_1_5[6.0,5.0,] 	 ARGS:%cl_1_5,
		 1: RETURN %cl_1_6[7.0,] %self[2.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[8.0,] 
		 2: RETURN %cl_1_8[8.1,] %self[2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: COPY TYPE_PASS def_subclasses %v_6[4.1,] 
		 3: 
		 4: (Portlet) def_%v_7 
		 5: %v_6-><< def_%v_8 %v_6[4.1,] %v_7[4.4,] 	 ARGS:%v_7,
		 6: 
		 7: subclasses->uniq! def_%v_9 subclasses[4.2,] %self[2.0,] 	 ARGS:subclasses,
CLOSURE BEGIN: k[4.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_k 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: k->name def_%cl_2_3 k[2.2,] 	 ARGS:
		 2: RETURN %cl_2_3[3.1,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: 
		 9: subclasses->map def_%v_10 subclasses[4.2,4.7,] %self[2.0,] 	 ARGS:subclasses,
CLOSURE BEGIN: klass[4.9,4.1,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_klass 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: (Portlet) def_%cl_3_3 
		 2: klass->< def_%cl_3_4 klass[2.2,] %cl_3_3[3.1,] 	 ARGS:%cl_3_3,
		 3: BRANCH %cl_3_4[3.2,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_3_5 
		 1: RETURN %cl_3_5[4.0,] %self[2.0,] 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: (ContentType) def_%cl_3_6 
		 2: klass->name def_%cl_3_7 klass[2.2,] 	 ARGS:
		 3: HASH-name- def_%cl_3_8 %cl_3_7[5.2,] 
		 4: %cl_3_6->new def_%cl_3_9 %cl_3_6[5.1,] %cl_3_8[5.3,] 	 ARGS:%cl_3_8,
		 5: RETURN %cl_3_9[5.4,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_3_10 
		 1: def_%cl_3_11 %cl_3_10[7.0,] 
		 2: RETURN %cl_3_11[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: %v_10->compact def_%v_11 %v_10[4.9,] 	 ARGS:
		 11: %v_11->sort def_%v_12 %v_11[4.10,] %self[2.0,] 	 ARGS:%v_11,
CLOSURE BEGIN: a[] b[4.11,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_4_0 
		 2: RECEIVEARG def_a 
		 3: RECEIVEARG def_b 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: a->name def_%cl_4_3 a[2.2,] 	 ARGS:
		 2: b->name def_%cl_4_4 b[2.3,] 	 ARGS:
		 3: %cl_4_3-><=> def_%cl_4_5 %cl_4_3[3.1,] %cl_4_4[3.2,] 	 ARGS:%cl_4_4,
		 4: RETURN %cl_4_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_4_6 
		 1: def_%cl_4_7 %cl_4_6[4.0,] 
		 2: RETURN %cl_4_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: a[2.2,] 
		 12: RETURN %v_12[4.11,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = list
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->available def_%v_3 %self[2.0,] 	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = other_connectables
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->available def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->select def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 ARGS:%v_3,
CLOSURE BEGIN: content_type[2.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_content_type 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: content_type->name def_%cl_1_3 content_type[2.2,] 	 ARGS:
		 2: (DEFAULT_CONTENT_TYPE_NAME) def_%cl_1_4 
		 3: %cl_1_3->!= def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 ARGS:%cl_1_4,
		 4: RETURN %cl_1_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = default
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (ContentType) def_%v_3 
		 7: (DEFAULT_CONTENT_TYPE_NAME) def_%v_4 
		 8: HASH-name- def_%v_5 %v_4[2.7,] 
		 9: %v_3->new def_%v_6 %v_3[2.6,] %v_5[2.8,] 	 ARGS:%v_5,
		 10: RETURN %v_6[2.9,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = user_generated_connectables
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->available def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->select def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 ARGS:%v_3,
CLOSURE BEGIN: content_type[2.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_content_type 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: content_type->name def_%cl_1_3 content_type[2.2,] 	 ARGS:
		 2: COPY TYPE_StringLiteral def_%cl_1_4 
		 3: %cl_1_3->starts_with? def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 	 ARGS:%cl_1_4,
		 4: %cl_1_5->! def_%cl_1_6 %cl_1_5[3.3,] 	 ARGS:
		 5: RETURN %cl_1_6[3.4,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_7 
		 1: def_%cl_1_8 %cl_1_7[4.0,] 
		 2: RETURN %cl_1_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = addressable
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->available def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->select def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 ARGS:%v_3,
CLOSURE BEGIN: content_type[2.7,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_content_type 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: content_type->model_class def_%cl_1_3 content_type[2.2,] 	 ARGS:
		 2: %cl_1_3->addressable? def_%cl_1_4 %cl_1_3[3.1,] 	 ARGS:
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_by_key
BB 1
	outgoing: 18 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_key 
		 6: 
		 7: key->tableize def_%v_3 key[2.5,] 	 ARGS:
		 8: %v_3->classify def_%v_4 %v_3[2.7,] 	 ARGS:
		 9: COPY TYPE_PASS def_class_name %v_4[2.8,] 
		 10: 
		 11: COPY TYPE_Nil def_klass 
		 12: 
		 13: COPY TYPE_StringLiteral def_%v_5 
		 14: COPY TYPE_PASS def_prefix %v_5[2.13,] 
		 15: 
		 16: %v_4->starts_with? def_%v_6 %v_4[2.8,] %v_5[2.13,] 	 ARGS:prefix,
		 17: %v_6->! def_%v_7 %v_6[2.16,] 	 ARGS:
		 18: BRANCH %v_7[2.17,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: BUILDSTRING def_%v_8 class_name[2.9,] 
		 2: %v_8->safe_constantize def_%v_9 %v_8[3.1,] 	 ARGS:
		 3: COPY TYPE_PASS def_klass %v_9[3.2,] 
		 4: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_9 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: BRANCH klass[3.3,2.11,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_10 
		 1: 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: class_name->safe_constantize def_%v_11 class_name[2.9,] 	 ARGS:
		 2: COPY TYPE_PASS def_klass %v_11[7.1,] 
		 3: COPY TYPE_PASS def_%v_10 %v_11[7.1,] 
BB 8
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: 
		 1: BRANCH klass[7.2,3.3,2.11,] 
BB 9
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_12 
		 1: 
BB 10
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: 
		 1: class_name->starts_with? def_%v_13 class_name[2.9,] prefix[2.14,] 	 ARGS:prefix,
		 2: BRANCH %v_13[10.1,] 
BB 11
	outgoing: 13 
	datadep: 
	instructions:
		 0: 
		 1: prefix->length def_%v_14 prefix[2.14,] 	 ARGS:
		 2: class_name->length def_%v_15 class_name[2.9,] 	 ARGS:
		 3: class_name->[] def_%v_16 class_name[11.2,2.9,] %v_14[11.1,] %v_15[11.2,] 	 ARGS:%v_14,%v_15,
		 4: %v_16->safe_constantize def_%v_17 %v_16[11.3,] 	 ARGS:
		 5: COPY TYPE_PASS def_klass %v_17[11.4,] 
		 6: 
BB 12
	outgoing: 13 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_17 
BB 13
	outgoing: 14 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_%v_12 %v_17[12.0,11.4,] 
BB 14
	outgoing: 15 16 
	datadep: 
	instructions:
		 0: 
		 1: BRANCH klass[11.5,7.2,3.3,2.11,] 
BB 15
	outgoing: 17 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_18 
		 1: 
BB 16
	outgoing: 17 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%v_19 
		 2: COPY TYPE_StringLiteral def_%v_20 
		 3: COPY TYPE_StringLiteral def_%v_21 
		 4: COPY TYPE_StringLiteral def_%v_22 
		 5: BUILDSTRING def_%v_23 %v_19[16.1,] key[2.5,] %v_20[16.2,] class_name[2.9,] %v_21[16.3,] class_name[2.9,] %v_22[16.4,] 
		 6: %self->raise def_%v_24 %self[2.0,] %v_23[16.5,] 	 ARGS:%v_23,
		 7: COPY TYPE_PASS def_%v_18 %v_24[16.6,] 
BB 17
	outgoing: 18 
	datadep: 
	instructions:
		 0: 
		 1: klass->content_type def_%v_25 klass[11.5,7.2,3.3,2.11,] 	 ARGS:
		 2: RETURN %v_25[17.1,] %self[2.0,] 
BB 18
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = orderable_attributes
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->model_class def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->new def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->attribute_names def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: COPY TYPE_PASS def_attribute_names %v_5[2.8,] 
		 10: 
		 11: COPY TYPE_StringLiteral def_%v_6 
		 12: COPY TYPE_StringLiteral def_%v_7 
		 13: COPY TYPE_StringLiteral def_%v_8 
		 14: COPY TYPE_StringLiteral def_%v_9 
		 15: COPY TYPE_StringLiteral def_%v_10 
		 16: COPY TYPE_Array def_%v_11 %v_6[2.11,] %v_7[2.12,] %v_8[2.13,] %v_9[2.14,] %v_10[2.15,] 
		 17: %v_5->- def_%v_12 %v_5[2.8,] %v_11[2.16,] 	 ARGS:%v_11,
		 18: COPY TYPE_PASS def_attribute_names %v_12[2.17,] 
		 19: RETURN %v_12[2.17,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = save!
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (ActiveSupport) def_%v_3 
		 7: (inherit Deprecation) def_%v_4 %v_3[2.6,] 
		 8: %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_5 
		 1: %v_4->warn def_%v_6 %v_4[3.0,2.7,] %v_5[4.0,] 	 ARGS:%v_5,
		 2: RETURN %v_6[4.1,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = create!
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: (ActiveSupport) def_%v_3 
		 7: (inherit Deprecation) def_%v_4 %v_3[2.6,] 
		 8: %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: %v_3->const_missing def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral def_%v_5 
		 1: %v_4->warn def_%v_6 %v_4[3.0,2.7,] %v_5[4.0,] 	 ARGS:%v_5,
		 2: RETURN %v_6[4.1,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = module_name
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->model_class def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->content_module def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = form
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->model_class def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->respond_to? def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->model_class def_%v_5 %self[2.0,] 	 ARGS:
		 1: %v_5->form def_%v_6 %v_5[3.0,] 	 ARGS:
		 2: RETURN %v_6[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->name def_%v_7 %self[2.0,] 	 ARGS:
		 1: %v_7->underscore def_%v_8 %v_7[4.0,] 	 ARGS:
		 2: %v_8->pluralize def_%v_9 %v_8[4.1,] 	 ARGS:
		 3: COPY TYPE_StringLiteral def_%v_10 
		 4: BUILDSTRING def_%v_11 %v_9[4.2,] %v_10[4.3,] 
		 5: RETURN %v_11[4.4,] %self[4.0,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = display_name
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->model_class def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->respond_to? def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 8 
	datadep: 
	instructions:
		 0: %self->model_class def_%v_5 %self[2.0,] 	 ARGS:
		 1: %v_5->display_name def_%v_6 %v_5[3.0,] 	 ARGS:
		 2: RETURN %v_6[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: (Behaviors) def_%v_7 
		 1: (inherit Connecting) def_%v_8 %v_7[4.0,] 
		 2: %v_8[4.1,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: %v_7->const_missing def_%v_8 %v_7[4.0,] 	 ARGS:Symbol,
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: %self->model_class def_%v_9 %self[2.0,] 	 ARGS:
		 1: %v_8->default_naming_for def_%v_10 %v_8[5.0,4.1,] %v_9[6.0,] 	 ARGS:%v_9,
		 2: RETURN %v_10[6.1,] %self[6.0,2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = display_name_plural
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->model_class def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->respond_to? def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->model_class def_%v_5 %self[2.0,] 	 ARGS:
		 1: %v_5->display_name_plural def_%v_6 %v_5[3.0,] 	 ARGS:
		 2: RETURN %v_6[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: %self->display_name def_%v_7 %self[2.0,] 	 ARGS:
		 1: %v_7->pluralize def_%v_8 %v_7[4.0,] 	 ARGS:
		 2: RETURN %v_8[4.1,] %self[4.0,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = model_class
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->constantize def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = connectable?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->model_class def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->connectable? def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = param_key
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->model_class def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->model_name def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->param_key def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = columns_for_index
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->model_class def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->respond_to? def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->model_class def_%v_5 %self[2.0,] 	 ARGS:
		 2: %v_5->columns_for_index def_%v_6 %v_5[3.1,] 	 ARGS:
		 3: %v_6->map def_%v_7 %v_6[3.2,] %self[3.1,2.0,] 	 ARGS:%v_6,
CLOSURE BEGIN: column[3.3,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_column 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: column->respond_to? def_%cl_1_3 column[2.2,] 	 ARGS:Symbol,
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: column->humanize def_%cl_1_4 column[2.2,] 	 ARGS:
		 1: HASH-label-method- def_%cl_1_5 %cl_1_4[4.0,] column[4.0,2.2,] 
		 2: RETURN %cl_1_4[4.0,] column[4.0,2.2,] %self[2.0,] 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN column[2.2,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[7.0,] 
		 2: RETURN %cl_1_7[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 4: RETURN %v_7[3.3,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral def_%v_8 
		 2: COPY TYPE_StringLiteral def_%v_9 
		 3: HASH-label-method-order- def_%v_10 %v_8[4.1,] %v_9[4.2,] 
		 4: COPY TYPE_StringLiteral def_%v_11 
		 5: COPY TYPE_StringLiteral def_%v_12 
		 6: HASH-label-method-order- def_%v_13 %v_11[4.4,] %v_12[4.5,] 
		 7: COPY TYPE_Array def_%v_14 %v_10[4.3,] %v_13[4.6,] 
		 8: RETURN %v_14[4.7,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = content_block_type
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: %v_3->starts_with? def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->name def_%v_6 %self[2.0,] 	 ARGS:
		 1: %v_6->demodulize def_%v_7 %v_6[3.0,] 	 ARGS:
		 2: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->name def_%v_8 %self[2.0,] 	 ARGS:
		 1: COPY TYPE_PASS def_%v_7 %v_8[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_PASS def_n %v_7[4.1,3.1,] 
		 1: 
		 2: %v_7->pluralize def_%v_9 %v_7[4.1,3.1,] 	 ARGS:
		 3: %v_9->underscore def_%v_10 %v_9[5.2,] 	 ARGS:
		 4: RETURN %v_10[5.3,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = content_block_type_for_list
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->model_class def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->respond_to? def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->model_class def_%v_5 %self[2.0,] 	 ARGS:
		 2: %v_5->content_block_type_for_list def_%v_6 %v_5[3.1,] 	 ARGS:
		 3: RETURN %v_6[3.2,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->content_block_type def_%v_7 %self[2.0,] 	 ARGS:
		 2: RETURN %v_7[4.1,] %self[4.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

