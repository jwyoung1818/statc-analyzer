SET IRMethod, name = initialize
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_model 
		 6: 
		 7: ATTRASSIGN %self->@model %self[2.0,] model[2.5,] 
		 8: RETURN model[2.5,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_s
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->class def_%v_3 %self[2.0,] 
		 7: %v_3->to_s def_%v_4 %v_3[2.6,] 
		 8: %v_4->demodulize def_%v_5 %v_4[2.7,] 
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = exit_hook
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def__target_state 
		 6: 
		 7: def_%v_3 
		 8: %v_3[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%v_3 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_3->logger def_%v_4 %v_3[3.0,2.7,] 
		 1: %self->model def_%v_5 %self[2.0,] 
		 2: COPY def_%v_6 
		 3: def_%v_7 %v_5[4.1,] %v_6[4.2,] %self[4.1,2.0,] 
		 4: %v_4->debug def_%v_8 %v_4[4.0,] %v_7[4.3,] 
		 5: RETURN %v_8[4.4,] %self[4.1,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = enter_hook
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: def_%v_3 
		 7: %v_3[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%v_3 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: %v_3->logger def_%v_4 %v_3[3.0,2.6,] 
		 1: %self->model def_%v_5 %self[2.0,] 
		 2: COPY def_%v_6 
		 3: def_%v_7 %v_5[4.1,] %v_6[4.2,] %self[4.1,2.0,] 
		 4: %v_4->debug def_%v_8 %v_4[4.0,] %v_7[4.3,] 
		 5: RETURN %v_8[4.4,] %self[4.1,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = method_missing
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_predicate 
		 6: def_args 
		 7: 
		 8: predicate->to_s def_%v_3 predicate[2.5,] 
		 9: %v_3->last def_%v_4 %v_3[2.8,] 
		 10: COPY def_%v_5 
		 11: %v_4->== def_%v_6 %v_4[2.9,] %v_5[2.10,] 
		 12: BRANCH %v_6[2.11,] 
BB 3
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: %self->class def_%v_7 %self[2.0,] 
		 2: %v_7->to_s def_%v_8 %v_7[3.1,] 
		 3: %v_8->demodulize def_%v_9 %v_8[3.2,] 
		 4: %v_9->underscore def_%v_10 %v_9[3.3,] 
		 5: predicate->to_s def_%v_11 predicate[2.5,] 
		 6: %v_11->chop def_%v_12 %v_11[3.5,] 
		 7: %v_10->== def_%v_13 %v_10[3.4,] %v_12[3.6,] 
		 8: RETURN %v_13[3.7,] %self[3.1,2.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->block_given? def_%v_14 %self[2.0,] 
		 2: BRANCH %v_14[4.1,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY def_%v_15 predicate[2.5,] 
		 2: def_%v_16 %v_15[5.1,] args[2.6,] 
		 3: def_%v_17 %current_module[2.3,] %v_16[5.2,] %self[2.0,] 
CLOSURE BEGIN: block_args[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: def_block_args 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_4 block_args[2.2,] 
		 2: def_%cl_1_3 %cl_1_0[2.1,] %cl_1_4[3.1,] 
		 3: RETURN %cl_1_3[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 4: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY def_%v_18 predicate[2.5,] 
		 2: def_%v_19 %v_18[6.1,] args[2.6,] 
		 3: def_%v_20 %current_module[2.3,] %v_19[6.2,] %v_0[2.1,] 
		 4: COPY def_%v_17 %v_20[6.3,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %v_17[6.4,5.3,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ==
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_other 
		 6: 
		 7: %self->class def_%v_3 %self[2.0,] 
		 8: other->class def_%v_4 other[2.5,] 
		 9: %v_3->== def_%v_5 %v_3[2.7,] %v_4[2.8,] 
		 10: RETURN %v_5[2.9,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = hash
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->class def_%v_3 %self[2.0,] 
		 7: %v_3->hash def_%v_4 %v_3[2.6,] 
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = included
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_base 
		 6: 
		 7: (ClassMethods) def_%v_3 
		 8: base->extend def_%v_4 base[2.5,] %v_3[2.7,] 
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = has_state
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_field 
		 6: def_options 
		 7: options[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY def_%v_3 
		 1: COPY def_options %v_3[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: options->assert_valid_keys def_%v_4 options[3.1,2.6,] 
		 2: 
		 3: def_%v_5 options[4.1,3.1,2.6,] 
		 4: COPY def_states %v_5[4.3,] 
		 5: BRANCH %v_5[4.3,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY def_%v_6 
		 1: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY def_%v_7 
		 2: %self->raise def_%v_8 %self[2.0,] %v_7[6.1,] 
		 3: COPY def_%v_6 %v_8[6.2,] 
BB 7
	outgoing: 8 9 
	datadep: 
	instructions:
		 0: 
		 1: states->map def_%v_9 states[4.4,] 
		 2: COPY def_states %v_9[7.1,] 
		 3: 
		 4: (Set) def_%v_10 
		 5: def_%v_11 options[3.1,2.6,] 
		 6: %v_10->new def_%v_12 %v_10[7.4,] %v_11[7.5,] 
		 7: states->map def_%v_13 states[7.1,7.2,] %self[2.0,] 
CLOSURE BEGIN: value[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_value 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY def_%cl_1_3 
		 2: def_%cl_1_4 value[2.2,] %cl_1_3[3.1,] 
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 8: def_%v_14 %v_12[7.6,] %v_13[7.7,] 
		 9: COPY def_delegations %v_14[7.8,] 
		 10: 
		 11: def_%v_15 options[3.1,2.6,] 
		 12: BRANCH %v_15[7.11,] 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: states->first def_%v_16 states[7.2,] 
		 1: COPY def_%v_15 %v_16[8.0,] 
BB 9
	outgoing: 10 
	datadep: 
	instructions:
		 0: COPY def_initial_state %v_15[8.1,7.11,] 
		 1: 
		 2: %self->state_writer_method def_%v_17 %self[2.0,] field[2.5,] states[7.2,] %v_15[8.1,7.11,] 
		 3: 
		 4: %self->state_reader_method def_%v_18 %self[9.2,2.0,] field[2.5,] states[7.2,] initial_state[9.0,] 
		 5: 
		 6: delegations->each def_%v_19 delegations[7.9,] %self[9.2,9.4,2.0,] 
CLOSURE BEGIN: field[2.5,] %self[9.2,9.4,2.0,] value[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_value 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY def_%cl_2_3 field[] 
		 2: %self->delegate def_%cl_2_4 %self[2.0,] value[2.2,] %cl_2_3[3.1,] 
		 3: RETURN %cl_2_4[3.2,] %self[3.2,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 7: RETURN %v_19[9.6,] %self[9.2,9.4,2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = state_reader_method
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: RECEIVEARG def_states 
		 7: RECEIVEARG def_initial_state 
		 8: 
		 9: COPY def_%v_3 
		 10: 
		 11: COPY def_%v_4 
		 12: 
		 13: COPY def_%v_5 
		 14: 
		 15: name->inspect def_%v_6 name[2.5,] 
		 16: COPY def_%v_7 
		 17: initial_state->inspect def_%v_8 initial_state[2.7,] 
		 18: COPY def_%v_9 
		 19: 
		 20: states->inspect def_%v_10 states[2.6,] 
		 21: COPY def_%v_11 
		 22: 
		 23: COPY def_%v_12 
		 24: 
		 25: COPY def_%v_13 
		 26: def_%v_14 %v_3[2.9,] name[2.5,2.15,] %v_4[2.11,] name[2.5,2.15,] %v_5[2.13,] %v_6[2.15,] %v_7[2.16,] %v_8[2.17,] %v_9[2.18,] %v_10[2.20,] %v_11[2.21,] name[2.5,2.15,] %v_12[2.23,] name[2.5,2.15,] %v_13[2.25,] 
		 27: %self->module_eval def_%v_15 %self[2.0,] %v_14[2.26,] 
		 28: RETURN %v_15[2.27,] %self[2.0,2.27,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = state_writer_method
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: RECEIVEARG def_states 
		 7: RECEIVEARG def__initial_state 
		 8: 
		 9: COPY def_%v_3 
		 10: 
		 11: COPY def_%v_4 
		 12: 
		 13: COPY def_%v_5 
		 14: 
		 15: COPY def_%v_6 
		 16: 
		 17: COPY def_%v_7 
		 18: 
		 19: states->inspect def_%v_8 states[2.6,] 
		 20: COPY def_%v_9 
		 21: 
		 22: COPY def_%v_10 
		 23: 
		 24: COPY def_%v_11 
		 25: COPY def_%v_12 
		 26: 
		 27: COPY def_%v_13 
		 28: 
		 29: COPY def_%v_14 
		 30: 
		 31: COPY def_%v_15 
		 32: def_%v_16 %v_3[2.9,] name[2.5,] %v_4[2.11,] name[2.5,] %v_5[2.13,] name[2.5,] %v_6[2.15,] name[2.5,] %v_7[2.17,] %v_8[2.19,] %v_9[2.20,] name[2.5,] %v_10[2.22,] name[2.5,] %v_11[2.24,] name[2.5,] %v_12[2.25,] name[2.5,] %v_13[2.27,] name[2.5,] %v_14[2.29,] name[2.5,] %v_15[2.31,] 
		 33: %self->module_eval def_%v_17 %self[2.0,] %v_16[2.32,] 
		 34: RETURN %v_17[2.33,] %self[2.0,2.33,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

