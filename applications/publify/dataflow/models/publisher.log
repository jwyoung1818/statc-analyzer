SET IRMethod, name = initialize
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: def_user RECEIVEARG 
		 6: 
		 7: %self[2.0,] user[2.5,] @user[] 
		 8: RETURN user[2.5,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = new_note
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: 
		 6: def_%v_3 (Note) 
		 7: def_%v_4 %v_3->new %v_3[2.6,] %self[2.0,] 
CLOSURE BEGIN: %self[2.0,] note[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: def_note RECEIVEARG 
		 3: def_%current_scope 
		 4: def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_3 %self[2.0,] @user[] 
		 2: ATTRASSIGN note->author note[2.2,] %cl_1_3[3.1,] 
		 3: 
		 4: def_%cl_1_4 %self[2.0,] @user[3.1,] 
		 5: def_%cl_1_5 %cl_1_4->text_filter %cl_1_4[3.4,] 
		 6: ATTRASSIGN note->text_filter note[3.2,] %cl_1_5[3.5,] 
		 7: RETURN %cl_1_5[3.5,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 8: RETURN %v_4[2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

