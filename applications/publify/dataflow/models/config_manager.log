SET IRMethod, name = append_features
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: def_base RECEIVEARG 
		 6: 
		 7: def_%v_3 %self[2.0,] base[2.5,] %v_0[2.1,] 
		 8: 
		 9: def_%v_4 (ClassMethods) 
		 10: def_%v_5 base->extend base[2.5,] %v_4[2.9,] 
		 11: RETURN %v_5[2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = fields
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%v_5 %self[2.0,] @fields[] 
		 1: def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: def_%v_6 (Hash) 
		 1: def_%v_7 %v_6->new %v_6[5.0,] %self[2.0,] 
CLOSURE BEGIN: 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: def_%current_scope 
		 3: def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_3 (Item) 
		 2: def_%cl_1_4 %cl_1_3->new %cl_1_3[3.1,] 
		 3: RETURN %cl_1_4[3.2,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 2: %self[2.0,] %v_7[5.1,] @fields[3.0,] 
		 3: RETURN %v_7[5.1,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = setting
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: def_name RECEIVEARG 
		 6: def_type 
		 7: type[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_type 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: def_default 
		 1: default[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_default 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_3 (Item) 
		 2: def_%v_4 %v_3->new %v_3[6.1,] 
		 3: def_item %v_4[6.2,] 
		 4: 
		 5: def_%v_5 name->to_s name[2.5,] 
		 6: ATTRASSIGN item->name item[6.3,] %v_5[6.5,] 
		 7: 
		 8: ATTRASSIGN item->ruby_type item[6.3,6.6,] type[3.0,2.6,] 
		 9: 
		 10: ATTRASSIGN item->default item[6.3,6.6,6.8,] default[5.0,4.0,] 
		 11: 
		 12: def_%v_6 %self->fields %self[2.0,] 
		 13: def_%v_7 name->to_s name[6.5,2.5,] 
		 14: %v_6[6.12,] %v_7[6.13,] item[6.3,6.6,6.8,6.10,] 
		 15: 
		 16: def_%v_8 %self->add_setting_accessor %self[6.12,2.0,] item[6.3,6.6,6.8,6.10,] 
		 17: RETURN %v_8[6.16,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = default_for
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: def_key RECEIVEARG 
		 6: 
		 7: def_%v_3 %self->fields %self[2.0,] 
		 8: def_%v_4 key->to_s key[2.5,] 
		 9: def_%v_5 %v_3[2.7,] %v_4[2.8,] 
		 10: def_%v_6 %v_5->default %v_5[2.9,] 
		 11: RETURN %v_6[2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = add_setting_accessor
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: def_item RECEIVEARG 
		 6: 
		 7: def_%v_3 %self->add_setting_reader %self[2.0,] item[2.5,] 
		 8: 
		 9: def_%v_4 %self->add_setting_writer %self[2.0,2.7,] item[2.5,] 
		 10: RETURN %v_4[2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = add_setting_reader
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: def_item RECEIVEARG 
		 6: 
		 7: def_%v_3 item->name item[2.5,] 
		 8: def_%v_4 %self->send %self[2.0,] %v_3[2.7,] %self[2.0,] 
CLOSURE BEGIN: %self[2.0,] item[2.5,2.7,] raw_value[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: def_%current_scope 
		 3: def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_3 %self->settings %self[2.0,] 
		 2: def_%cl_1_4 item->name item[] 
		 3: def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 
		 4: def_raw_value %cl_1_5[3.3,] 
		 5: 
		 6: def_%cl_1_6 %cl_1_5->nil? %cl_1_5[3.3,] 
		 7: BRANCH %cl_1_6[3.6,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: def_%cl_1_7 item->default item[] 
		 1: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN raw_value[3.4,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_1_7[4.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_8 
		 1: def_%cl_1_9 %cl_1_8[7.0,] 
		 2: RETURN %cl_1_9[7.1,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 9: 
		 10: def_%v_5 item->ruby_type item[2.5,2.7,] 
		 11: def_%v_6 %v_5[2.10,] 
		 12: BRANCH %v_6[2.11,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_7 item->name item[2.5,] 
		 2: def_%v_8 
		 3: def_%v_9 %v_7[3.1,] %v_8[3.2,] 
		 4: def_%v_10 %self->send %self[2.0,] %v_9[3.3,] %self[2.0,] 
CLOSURE BEGIN: %self[2.0,] item[3.1,2.5,] raw_value[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: def_%current_scope 
		 3: def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_2_3 %self->settings %self[2.0,] 
		 2: def_%cl_2_4 item->name item[] 
		 3: def_%cl_2_5 %cl_2_3[3.1,] %cl_2_4[3.2,] 
		 4: def_raw_value %cl_2_5[3.3,] 
		 5: 
		 6: def_%cl_2_6 %cl_2_5->nil? %cl_2_5[3.3,] 
		 7: BRANCH %cl_2_6[3.6,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: def_%cl_2_7 item->default item[] 
		 1: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN raw_value[3.4,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_2_7[4.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_2_8 
		 1: def_%cl_2_9 %cl_2_8[7.0,] 
		 2: RETURN %cl_2_9[7.1,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 5: RETURN %v_10[3.4,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = add_setting_writer
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: def_item RECEIVEARG 
		 6: 
		 7: def_%v_3 item->name item[2.5,] 
		 8: def_%v_4 
		 9: def_%v_5 %v_3[2.7,] %v_4[2.8,] 
		 10: def_%v_6 %self->send %self[2.0,] %v_5[2.9,] %self[2.0,] 
CLOSURE BEGIN: %self[2.0,] item[2.5,2.7,] newvalue[] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: def_newvalue RECEIVEARG 
		 3: def_%current_scope 
		 4: def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_3 %self->settings %self[2.0,] 
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_4 %self[2.0,] %cl_1_5[4.0,] 
		 2: def_%cl_1_3 %cl_1_5[4.0,] 
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_6 %self->settings %self[2.0,] 
		 2: def_%cl_1_7 item->name item[] 
		 3: def_%cl_1_8 item->name item[5.2,] 
		 4: def_%cl_1_9 %self->canonicalize %self[5.1,2.0,] %cl_1_8[5.3,] newvalue[2.2,] 
		 5: %cl_1_6[5.1,] %cl_1_7[5.2,] %cl_1_9[5.4,] 
		 6: def_retval %cl_1_9[5.4,] 
		 7: 
		 8: RETURN %cl_1_9[5.4,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_10 
		 1: def_%cl_1_11 %cl_1_10[6.0,] 
		 2: RETURN %cl_1_11[6.1,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 11: RETURN %v_6[2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = canonicalize
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: def_key RECEIVEARG 
		 6: def_value RECEIVEARG 
		 7: 
		 8: def_%v_3 %self->class %self[2.0,] 
		 9: def_%v_4 %v_3->fields %v_3[2.8,] 
		 10: def_%v_5 key->to_s key[2.5,] 
		 11: def_%v_6 %v_4[2.9,] %v_5[2.10,] 
		 12: def_%v_7 %v_6->canonicalize %v_6[2.11,] value[2.6,] 
		 13: RETURN %v_7[2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = canonicalize
BB 1
	outgoing: 29 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: def_value RECEIVEARG 
		 6: 
		 7: def_%v_3 %self->ruby_type %self[2.0,] 
		 8: def_%v_5 %v_3[2.7,] 
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 4 24 
	datadep: 
	instructions:
		 0: def_%v_6 %v_3[2.7,] 
		 1: BRANCH %v_6[3.0,] 
BB 4
	outgoing: 5 25 
	datadep: 
	instructions:
		 0: def_%v_7 %v_3[2.7,] 
		 1: BRANCH %v_7[4.0,] 
BB 5
	outgoing: 6 26 
	datadep: 
	instructions:
		 0: def_%v_8 %v_3[2.7,] 
		 1: BRANCH %v_8[5.0,] 
BB 6
	outgoing: 29 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_4 value[2.5,] 
		 2: RETURN value[2.5,] 
BB 7
	outgoing: 8 15 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_11 
		 2: def_%v_10 %v_11[7.1,] value[2.5,] 
		 3: BRANCH %v_10[7.2,] 
BB 8
	outgoing: 9 16 
	datadep: 
	instructions:
		 0: def_%v_12 value[2.5,] 
		 1: BRANCH %v_12[8.0,] 
BB 9
	outgoing: 10 17 
	datadep: 
	instructions:
		 0: def_%v_14 
		 1: def_%v_13 %v_14[9.0,] value[2.5,] 
		 2: BRANCH %v_13[9.1,] 
BB 10
	outgoing: 11 18 
	datadep: 
	instructions:
		 0: def_%v_15 value[2.5,] 
		 1: BRANCH %v_15[10.0,] 
BB 11
	outgoing: 12 19 
	datadep: 
	instructions:
		 0: def_%v_17 
		 1: def_%v_16 %v_17[11.0,] value[2.5,] 
		 2: BRANCH %v_16[11.1,] 
BB 12
	outgoing: 13 20 
	datadep: 
	instructions:
		 0: def_%v_19 
		 1: def_%v_18 %v_19[12.0,] value[2.5,] 
		 2: BRANCH %v_18[12.1,] 
BB 13
	outgoing: 14 21 
	datadep: 
	instructions:
		 0: def_%v_20 value[2.5,] 
		 1: BRANCH %v_20[13.0,] 
BB 14
	outgoing: 23 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_9 
		 2: 
BB 15
	outgoing: 23 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_9 
		 2: 
BB 16
	outgoing: 23 
	datadep: 
	instructions:
		 0: def_%v_9 
		 1: 
BB 17
	outgoing: 23 
	datadep: 
	instructions:
		 0: def_%v_9 
		 1: 
BB 18
	outgoing: 23 
	datadep: 
	instructions:
		 0: def_%v_9 
		 1: 
BB 19
	outgoing: 23 
	datadep: 
	instructions:
		 0: def_%v_9 
		 1: 
BB 20
	outgoing: 23 
	datadep: 
	instructions:
		 0: def_%v_9 
		 1: 
BB 21
	outgoing: 23 
	datadep: 
	instructions:
		 0: def_%v_9 
		 1: 
BB 23
	outgoing: 29 
	datadep: 
	instructions:
		 0: def_%v_4 %v_9[15.1,16.0,17.0,18.0,19.0,20.0,21.0,14.1,] 
		 1: RETURN %v_4[23.0,] 
BB 24
	outgoing: 29 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_21 value->to_i value[2.5,] 
		 2: def_%v_4 %v_21[24.1,] 
		 3: RETURN %v_21[24.1,] 
BB 25
	outgoing: 29 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_22 value->to_s value[2.5,] 
		 2: def_%v_4 %v_22[25.1,] 
		 3: RETURN %v_22[25.1,] 
BB 26
	outgoing: 29 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_23 value->to_yaml value[2.5,] 
		 2: def_%v_4 %v_23[26.1,] 
		 3: RETURN %v_23[26.1,] 
BB 29
	outgoing: 
	datadep: 
	instructions:

