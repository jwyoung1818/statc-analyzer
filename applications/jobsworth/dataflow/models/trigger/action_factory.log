SET IRMethod, name = initialize
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: def_id 
		 6: id[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY def_id 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: def_name 
		 1: name[4.0,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY def_name 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: def_class_name 
		 1: class_name[6.0,] 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY def_class_name 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->id id[3.0,2.5,] 
		 2: 
		 3: ATTRASSIGN %self->name name[5.0,4.0,] 
		 4: 
		 5: ATTRASSIGN %self->class_name class_name[7.0,6.0,] 
		 6: RETURN class_name[7.0,6.0,] %self[8.1,8.3,8.5,2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = all
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 
		 7: COPY def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%v_5 
		 1: COPY def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: COPY def_%v_6 
		 1: COPY def_%v_7 
		 2: %self->new def_%v_8 %self[2.0,] %v_6[5.0,] %v_7[5.1,] 
		 3: COPY def_%v_9 
		 4: COPY def_%v_10 
		 5: %self->new def_%v_11 %self[5.2,2.0,] %v_9[5.3,] %v_10[5.4,] 
		 6: COPY def_%v_12 
		 7: COPY def_%v_13 
		 8: %self->new def_%v_14 %self[5.2,5.5,2.0,] %v_12[5.6,] %v_13[5.7,] 
		 9: COPY def_%v_15 %v_8[5.2,] %v_11[5.5,] %v_14[5.8,] 
		 10: %v_15[5.9,] 
		 11: RETURN %v_15[5.9,] %self[5.2,5.5,5.8,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_id 
		 6: 
		 7: %self->all def_%v_3 %self[2.0,] 
		 8: %v_3->detect def_%v_4 %v_3[2.7,] %self[2.0,2.7,] 
CLOSURE BEGIN: action[] id[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_action 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: action->id def_%cl_1_3 action[2.2,] 
		 2: id->to_i def_%cl_1_4 id[] 
		 3: %cl_1_3->== def_%cl_1_5 %cl_1_3[3.1,] %cl_1_4[3.2,] 
		 4: RETURN %cl_1_5[3.3,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[4.0,] 
		 2: RETURN %cl_1_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 9: RETURN %v_4[2.8,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = find_by_name
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: 
		 7: %self->all def_%v_3 %self[2.0,] 
		 8: %v_3->detect def_%v_4 %v_3[2.7,] %self[2.0,2.7,] 
CLOSURE BEGIN: action[] name[2.5,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_action 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: action->name def_%cl_1_3 action[2.2,] 
		 2: %cl_1_3->== def_%cl_1_4 %cl_1_3[3.1,] name[] 
		 3: RETURN %cl_1_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 9: RETURN %v_4[2.8,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = build
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: def_params 
		 6: params[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY def_%v_3 
		 1: COPY def_params %v_3[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->class_name def_%v_4 %self[2.0,] 
		 2: %self->eval def_%v_5 %self[4.1,2.0,] %v_4[4.1,] 
		 3: %v_5->new def_%v_6 %v_5[4.2,] params[3.1,2.5,] 
		 4: RETURN %v_6[4.3,] %self[4.1,4.2,2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

