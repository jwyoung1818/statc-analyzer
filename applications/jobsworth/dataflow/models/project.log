SET IRMethod, name = copy_permissions_from
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_project_to_copy 
		 6: RECEIVEARG def_user 
		 7: 
		 8: project_to_copy->project_permissions def_%v_3 project_to_copy[2.5,] 	 ARGS:
		 9: %v_3->each def_%v_4 %v_3[2.8,] %self[2.0,] 	 ARGS:%v_3,
CLOSURE BEGIN: perm[] %self[2.0,] new_permission[2.9,] user[2.6,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_perm 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: perm->dup def_%cl_1_3 perm[2.2,] 	 ARGS:
		 2: COPY TYPE_PASS def_new_permission %cl_1_3[3.1,] 
		 3: 
		 4: %self->id def_%cl_1_4 %self[2.0,] 	 ARGS:
		 5: ATTRASSIGN new_permission->project_id %cl_1_4[3.4,] 
		 6: 
		 7: new_permission->user_id def_%cl_1_5 new_permission[3.2,3.5,] 	 ARGS:
		 8: user->id def_%cl_1_6 user[] 	 ARGS:
		 9: %cl_1_5->== def_%cl_1_7 %cl_1_5[3.7,] %cl_1_6[3.8,] 	 ARGS:%cl_1_6,
		 10: BRANCH %cl_1_7[3.9,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: 
		 1: user->company_id def_%cl_1_8 user[] 	 ARGS:
		 2: ATTRASSIGN new_permission->company_id %cl_1_8[4.1,] 
		 3: 
		 4: COPY TYPE_StringLiteral def_%cl_1_9 
		 5: new_permission->set def_%cl_1_10 new_permission[4.2,3.2,3.5,] %cl_1_9[4.4,] 	 ARGS:%cl_1_9,
		 6: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_1_10 
BB 6
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: 
		 1: new_permission->save! def_%cl_1_11 new_permission[4.2,3.2,3.5,] 	 ARGS:
		 2: RETURN %cl_1_11[6.1,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_12 
		 1: def_%cl_1_13 %cl_1_12[7.0,] 
		 2: RETURN %cl_1_13[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: perm[2.2,] 
		 10: RETURN %v_4[2.9,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = create_default_permissions_for
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_user 
		 6: 
		 7: (ProjectPermission) def_%v_3 
		 8: %v_3->new def_%v_4 %v_3[2.7,] 	 ARGS:
		 9: COPY TYPE_PASS def_project_permission %v_4[2.8,] 
		 10: 
		 11: user->id def_%v_5 user[2.5,] 	 ARGS:
		 12: ATTRASSIGN project_permission->user_id %v_5[2.11,] 
		 13: 
		 14: %self->id def_%v_6 %self[2.0,] 	 ARGS:
		 15: ATTRASSIGN project_permission->project_id %v_6[2.14,] 
		 16: 
		 17: user->company_id def_%v_7 user[2.5,2.11,] 	 ARGS:
		 18: ATTRASSIGN project_permission->company_id %v_7[2.17,] 
		 19: 
		 20: COPY TYPE_StringLiteral def_%v_8 
		 21: project_permission->set def_%v_9 project_permission[2.9,2.12,2.15,2.18,] %v_8[2.20,] 	 ARGS:%v_8,
		 22: 
		 23: project_permission->save def_%v_10 project_permission[2.9,2.12,2.15,2.18,2.21,] 	 ARGS:
		 24: RETURN %v_10[2.23,] %self[2.0,2.14,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = has_users?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->company def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->users def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->size def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: %v_5->>= def_%v_6 %v_5[2.8,] 	 ARGS:Fixnum,
		 10: RETURN %v_6[2.9,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = full_name
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->customer def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->name def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: COPY TYPE_StringLiteral def_%v_5 
		 9: %self->name def_%v_6 %self[2.0,2.6,] 	 ARGS:
		 10: BUILDSTRING def_%v_7 %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] 
		 11: RETURN %v_7[2.10,] %self[2.0,2.6,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_s
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 	 ARGS:
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_css_name
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->underscore def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->dasherize def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: COPY TYPE_Regexp def_%v_6 
		 10: COPY TYPE_StringLiteral def_%v_7 
		 11: %v_5->gsub def_%v_8 %v_5[2.8,] %v_7[2.10,] 	 ARGS:%v_6,%v_7,
		 12: COPY TYPE_StringLiteral def_%v_9 
		 13: %self->customer def_%v_10 %self[2.0,2.6,] 	 ARGS:
		 14: %v_10->name def_%v_11 %v_10[2.13,] 	 ARGS:
		 15: %v_11->underscore def_%v_12 %v_11[2.14,] 	 ARGS:
		 16: %v_12->dasherize def_%v_13 %v_12[2.15,] 	 ARGS:
		 17: COPY TYPE_Regexp def_%v_14 
		 18: COPY TYPE_StringLiteral def_%v_15 
		 19: %v_13->gsub def_%v_16 %v_13[2.16,] %v_15[2.18,] 	 ARGS:%v_14,%v_15,
		 20: BUILDSTRING def_%v_17 %v_8[2.11,] %v_9[2.12,] %v_16[2.19,] 
		 21: RETURN %v_17[2.20,] %self[2.0,2.6,2.13,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = total_estimate
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->tasks def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->sum def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: %v_4->to_i def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = work_done
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->tasks def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->sum def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: %v_4->to_i def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = overtime
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->tasks def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: %v_3->where def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: COPY TYPE_StringLiteral def_%v_6 
		 10: %v_5->sum def_%v_7 %v_5[2.8,] %v_6[2.9,] 	 ARGS:%v_6,
		 11: %v_7->to_i def_%v_8 %v_7[2.10,] 	 ARGS:
		 12: RETURN %v_8[2.11,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = total_tasks_count
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->total_tasks def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->nil? def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->tasks def_%v_5 %self[2.0,] 	 ARGS:
		 2: %v_5->count def_%v_6 %v_5[3.1,] 	 ARGS:
		 3: ATTRASSIGN %self->total_tasks %v_6[3.2,] 
		 4: 
		 5: %self->save def_%v_7 %self[3.1,3.3,2.0,] 	 ARGS:
		 6: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_7 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->total_tasks def_%v_8 %self[3.3,2.0,] 	 ARGS:
		 2: RETURN %v_8[5.1,] %self[5.1,3.3,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = open_tasks_count
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->open_tasks def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->nil? def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->tasks def_%v_5 %self[2.0,] 	 ARGS:
		 2: COPY TYPE_StringLiteral def_%v_6 
		 3: %v_5->where def_%v_7 %v_5[3.1,] %v_6[3.2,] 	 ARGS:%v_6,
		 4: %v_7->count def_%v_8 %v_7[3.3,] 	 ARGS:
		 5: ATTRASSIGN %self->open_tasks %v_8[3.4,] 
		 6: 
		 7: %self->save def_%v_9 %self[3.1,3.5,2.0,] 	 ARGS:
		 8: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_9 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->open_tasks def_%v_10 %self[3.5,2.0,] 	 ARGS:
		 2: RETURN %v_10[5.1,] %self[5.1,3.5,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = total_milestones_count
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->total_milestones def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->nil? def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->milestones def_%v_5 %self[2.0,] 	 ARGS:
		 2: %v_5->count def_%v_6 %v_5[3.1,] 	 ARGS:
		 3: ATTRASSIGN %self->total_milestones %v_6[3.2,] 
		 4: 
		 5: %self->save def_%v_7 %self[3.1,3.3,2.0,] 	 ARGS:
		 6: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_7 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->total_milestones def_%v_8 %self[3.3,2.0,] 	 ARGS:
		 2: RETURN %v_8[5.1,] %self[5.1,3.3,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = open_milestones_count
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->open_milestones def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->nil? def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->milestones def_%v_5 %self[2.0,] 	 ARGS:
		 2: COPY TYPE_StringLiteral def_%v_6 
		 3: %v_5->where def_%v_7 %v_5[3.1,] %v_6[3.2,] 	 ARGS:%v_6,
		 4: %v_7->count def_%v_8 %v_7[3.3,] 	 ARGS:
		 5: ATTRASSIGN %self->open_milestones %v_8[3.4,] 
		 6: 
		 7: %self->save def_%v_9 %self[3.1,3.5,2.0,] 	 ARGS:
		 8: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_9 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->open_milestones def_%v_10 %self[3.5,2.0,] 	 ARGS:
		 2: RETURN %v_10[5.1,] %self[5.1,3.5,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = progress
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_Float def_done_percent 
		 7: 
		 8: %self->total_tasks_count def_%v_3 %self[2.0,] 	 ARGS:
		 9: %v_3->* def_%v_4 %v_3[2.8,] 	 ARGS:Float,
		 10: COPY TYPE_PASS def_total_count %v_4[2.9,] 
		 11: 
		 12: %v_4->>= def_%v_5 %v_4[2.9,] 	 ARGS:Float,
		 13: BRANCH %v_5[2.12,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: 
		 1: %self->open_tasks_count def_%v_6 %self[2.0,] 	 ARGS:
		 2: total_count->- def_%v_7 total_count[2.10,] %v_6[3.1,] 	 ARGS:%v_6,
		 3: COPY TYPE_PASS def_done_count %v_7[3.2,] 
		 4: 
		 5: %v_7->/ def_%v_8 %v_7[3.2,] total_count[3.2,2.10,] 	 ARGS:total_count,
		 6: %v_8->* def_%v_9 %v_8[3.5,] 	 ARGS:Float,
		 7: COPY TYPE_PASS def_done_percent %v_9[3.6,] 
		 8: 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_9 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: RETURN done_percent[3.7,2.6,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = complete?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->completed_at def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->nil? def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->! def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = completed_milestones_count
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->total_milestones_count def_%v_3 %self[2.0,] 	 ARGS:
		 7: %self->open_milestones_count def_%v_4 %self[2.0,2.6,] 	 ARGS:
		 8: %v_3->- def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_project_stats
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->tasks def_%v_3 %self[2.0,] 	 ARGS:
		 7: COPY TYPE_StringLiteral def_%v_4 
		 8: %self->company def_%v_5 %self[2.0,2.6,] 	 ARGS:
		 9: %v_5->critical_values def_%v_6 %v_5[2.8,] 	 ARGS:
		 10: HASH- def_%v_7 %v_4[2.7,] %v_6[2.9,] 
		 11: %v_3->where def_%v_8 %v_3[2.6,] %v_7[2.10,] 	 ARGS:%v_7,
		 12: %v_8->includes def_%v_9 %v_8[2.11,] 	 ARGS:Symbol,
		 13: %v_9->count def_%v_10 %v_9[2.12,] 	 ARGS:
		 14: ATTRASSIGN %self->critical_count %v_10[2.13,] 
		 15: 
		 16: %self->tasks def_%v_11 %self[2.0,2.6,2.8,2.14,] 	 ARGS:
		 17: COPY TYPE_StringLiteral def_%v_12 
		 18: %self->company def_%v_13 %self[2.0,2.6,2.8,2.14,2.16,] 	 ARGS:
		 19: %v_13->normal_values def_%v_14 %v_13[2.18,] 	 ARGS:
		 20: HASH- def_%v_15 %v_12[2.17,] %v_14[2.19,] 
		 21: %v_11->where def_%v_16 %v_11[2.16,] %v_15[2.20,] 	 ARGS:%v_15,
		 22: %v_16->includes def_%v_17 %v_16[2.21,] 	 ARGS:Symbol,
		 23: %v_17->count def_%v_18 %v_17[2.22,] 	 ARGS:
		 24: ATTRASSIGN %self->normal_count %v_18[2.23,] 
		 25: 
		 26: %self->tasks def_%v_19 %self[2.0,2.6,2.8,2.14,2.16,2.18,2.24,] 	 ARGS:
		 27: COPY TYPE_StringLiteral def_%v_20 
		 28: %self->company def_%v_21 %self[2.0,2.6,2.8,2.14,2.16,2.18,2.24,2.26,] 	 ARGS:
		 29: %v_21->low_values def_%v_22 %v_21[2.28,] 	 ARGS:
		 30: HASH- def_%v_23 %v_20[2.27,] %v_22[2.29,] 
		 31: %v_19->where def_%v_24 %v_19[2.26,] %v_23[2.30,] 	 ARGS:%v_23,
		 32: %v_24->includes def_%v_25 %v_24[2.31,] 	 ARGS:Symbol,
		 33: %v_25->count def_%v_26 %v_25[2.32,] 	 ARGS:
		 34: ATTRASSIGN %self->low_count %v_26[2.33,] 
		 35: 
		 36: ATTRASSIGN %self->open_tasks 
		 37: 
		 38: ATTRASSIGN %self->total_tasks 
		 39: RETURN %self[2.0,2.6,2.8,2.14,2.16,2.18,2.24,2.26,2.28,2.34,2.36,2.38,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = billing_enabled?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->company def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->try def_%v_4 %v_3[2.6,] 	 ARGS:Symbol,
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = billable?
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->billing_enabled? def_%v_3 %self[2.0,] 	 ARGS:
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: %self->suppressBilling def_%v_4 %self[2.0,] 	 ARGS:
		 1: %v_4->! def_%v_5 %v_4[3.0,] 	 ARGS:
		 2: RETURN %v_5[3.1,] %self[3.0,2.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_3[2.6,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = no_billing?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->billable? def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->! def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reject_destroy_if_have_tasks
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->tasks def_%v_3 %self[2.0,] 	 ARGS:
		 7: %v_3->count def_%v_4 %v_3[2.6,] 	 ARGS:
		 8: %v_4->zero? def_%v_5 %v_4[2.7,] 	 ARGS:
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%v_6 
		 1: 
		 2: RETURN %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->errors def_%v_7 %self[2.0,] 	 ARGS:
		 2: (I18n) def_%v_8 
		 3: COPY TYPE_StringLiteral def_%v_9 
		 4: %v_8->t def_%v_10 %v_8[4.2,] %v_9[4.3,] 	 ARGS:%v_9,
		 5: %v_7->add def_%v_11 %v_7[4.1,] %v_10[4.4,] 	 ARGS:Symbol,%v_10,
		 6: 
		 7: RETURN %self[4.1,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = update_work_sheets
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->customer_id def_%v_3 %self[2.0,] 	 ARGS:
		 7: %self->customer_id_was def_%v_4 %self[2.0,2.6,] 	 ARGS:
		 8: %v_3->!= def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 ARGS:%v_4,
		 9: BRANCH %v_5[2.8,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: (WorkLog) def_%v_6 
		 2: COPY TYPE_StringLiteral def_%v_7 
		 3: %self->customer_id def_%v_8 %self[2.0,] 	 ARGS:
		 4: BUILDSTRING def_%v_9 %v_7[3.2,] %v_8[3.3,] 
		 5: COPY TYPE_StringLiteral def_%v_10 
		 6: 
		 7: %self->id def_%v_11 %self[3.3,2.0,] 	 ARGS:
		 8: COPY TYPE_StringLiteral def_%v_12 
		 9: %self->customer_id def_%v_13 %self[3.3,3.7,2.0,] 	 ARGS:
		 10: BUILDSTRING def_%v_14 %v_10[3.5,] %v_11[3.7,] %v_12[3.8,] %v_13[3.9,] 
		 11: %v_6->update_all def_%v_15 %v_6[3.1,] %v_9[3.4,] %v_14[3.10,] 	 ARGS:%v_9,%v_14,
		 12: RETURN %v_15[3.11,] %self[3.3,3.7,3.9,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

