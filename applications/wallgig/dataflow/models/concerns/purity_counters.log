SET IRMethod, name = not_empty instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "sfw_" def_%v_3 
		 7: %self->collection_name def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_StringLiteral "_count > 0 OR sketchy_" def_%v_5 
		 9: %self->collection_name def_%v_6 %self[2.0,2.7,] 	 SYMBOL:	 ARGS:
		 10: COPY TYPE_StringLiteral "_count > 0 OR nsfw_" def_%v_7 
		 11: %self->collection_name def_%v_8 %self[2.0,2.7,2.9,] 	 SYMBOL:	 ARGS:
		 12: COPY TYPE_StringLiteral "_count > 0" def_%v_9 
		 13: BUILDSTRING def_%v_10 %v_3[2.6,] %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] %v_8[2.11,] %v_9[2.12,] 
		 14: %self->where def_%v_11 %self[2.0,2.7,2.9,2.11,] %v_10[2.13,] 	 SYMBOL:	 ARGS:%v_10,
		 15: RETURN %v_11[2.14,] %self[2.0,2.7,2.9,2.11,2.14,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = not_empty_for_purities instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->purities def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->map def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: %self[2.0,2.6,] p[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_p 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->counter_name_for def_%cl_1_3 %self[2.0,] p[2.2,] 	 SYMBOL:	 ARGS:p,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: COPY TYPE_StringLiteral " + " def_%v_5 
		 9: %v_4->join def_%v_6 %v_4[2.7,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: RETURN %v_6[2.9,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = not_empty instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: COPY TYPE_StringLiteral "sfw_" def_%v_3 
		 7: %self->collection_name def_%v_4 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: COPY TYPE_StringLiteral "_count > 0 OR sketchy_" def_%v_5 
		 9: %self->collection_name def_%v_6 %self[2.0,2.7,] 	 SYMBOL:	 ARGS:
		 10: COPY TYPE_StringLiteral "_count > 0 OR nsfw_" def_%v_7 
		 11: %self->collection_name def_%v_8 %self[2.0,2.7,2.9,] 	 SYMBOL:	 ARGS:
		 12: COPY TYPE_StringLiteral "_count > 0" def_%v_9 
		 13: BUILDSTRING def_%v_10 %v_3[2.6,] %v_4[2.7,] %v_5[2.8,] %v_6[2.9,] %v_7[2.10,] %v_8[2.11,] %v_9[2.12,] 
		 14: %self->where def_%v_11 %self[2.0,2.7,2.9,2.11,] %v_10[2.13,] 	 SYMBOL:	 ARGS:%v_10,
		 15: RETURN %v_11[2.14,] %self[2.0,2.7,2.9,2.11,2.14,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = not_empty_for_purities instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->purities def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->map def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: %self[2.0,2.6,] p[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_p 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->counter_name_for def_%cl_1_3 %self[2.0,] p[2.2,] 	 SYMBOL:	 ARGS:p,
		 2: RETURN %cl_1_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_4 
		 1: def_%cl_1_5 %cl_1_4[4.0,] 
		 2: RETURN %cl_1_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: COPY TYPE_StringLiteral " + " def_%v_5 
		 9: %v_4->join def_%v_6 %v_4[2.7,] %v_5[2.8,] 	 SYMBOL:	 ARGS:%v_5,
		 10: RETURN %v_6[2.9,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = included instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_base 
		 6: 
		 7: (ClassMethods) def_%v_3 
		 8: base->extend def_%v_4 base[2.5,] %v_3[2.7,] 	 SYMBOL:	 ARGS:%v_3,
		 9: RETURN %v_4[2.8,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = has_purity_counters instanceMethod = true
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_collection_name 
		 6: 
		 7: def_%v_3 %self[2.0,] 
CLOSURE BEGIN: collection_name[2.5,] %self[2.0,] 
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: COPY TYPE_StringLiteral "sfw_" def_%cl_1_3 
		 6: COPY TYPE_StringLiteral "_count > 0 OR sketchy_" def_%cl_1_4 
		 7: COPY TYPE_StringLiteral "_count > 0 OR nsfw_" def_%cl_1_5 
		 8: COPY TYPE_StringLiteral "_count > 0" def_%cl_1_6 
		 9: BUILDSTRING def_%cl_1_7 %cl_1_3[2.5,] collection_name[] %cl_1_4[2.6,] collection_name[] %cl_1_5[2.7,] collection_name[] %cl_1_6[2.8,] 
		 10: %self->where def_%cl_1_8 %self[2.0,] %cl_1_7[2.9,] 	 SYMBOL:	 ARGS:%cl_1_7,
		 11: RETURN %cl_1_8[2.10,] %self[2.0,2.10,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: def_%cl_1_9 
		 1: def_%cl_1_10 %cl_1_9[3.0,] 
		 2: RETURN %cl_1_10[3.1,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: %self->scope def_%v_4 %self[2.0,] %v_3[2.7,] 	 SYMBOL:not_empty,	 ARGS:Symbol,%v_3,
		 9: 
		 10: def_%v_5 %self[2.0,2.8,] 
CLOSURE BEGIN: sum_gte[] purities[] %self[2.0,2.8,] p[] 
BB 1
	outgoing: 10 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: RECEIVEARG def_purities 
		 5: RECEIVECONSTARG def_sum_gte 
		 6: sum_gte[2.5,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: COPY TYPE_Fixnum def_sum_gte 
BB 4
	outgoing: 5 6 8 
	datadep: 
	instructions:
		 0: 
		 1: sum_gte->> def_%cl_2_3 sum_gte[3.0,2.5,] 	 SYMBOL:	 ARGS:Fixnum,
		 2: BRANCH %cl_2_3[4.1,] 
BB 5
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: purities->map def_%cl_2_4 purities[2.4,] %self[2.0,] 	 SYMBOL:	 ARGS:purities,
CLOSURE BEGIN: %self[2.0,] p[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: RECEIVEARG def_p 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->counter_name_for def_%cl_3_3 %self[2.0,] p[2.2,] 	 SYMBOL:	 ARGS:p,
		 2: RETURN %cl_3_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_3_4 
		 1: def_%cl_3_5 %cl_3_4[4.0,] 
		 2: RETURN %cl_3_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: COPY TYPE_StringLiteral " + " def_%cl_2_5 
		 3: %cl_2_4->join def_%cl_2_6 %cl_2_4[5.1,] %cl_2_5[5.2,] 	 SYMBOL:	 ARGS:%cl_2_5,
		 4: COPY TYPE_PASS def_purities %cl_2_6[5.3,] 
		 5: 
		 6: COPY TYPE_StringLiteral "(" def_%cl_2_7 
		 7: COPY TYPE_StringLiteral ") >= ?" def_%cl_2_8 
		 8: BUILDSTRING def_%cl_2_9 %cl_2_7[5.6,] %cl_2_6[5.3,] %cl_2_8[5.7,] 
		 9: COPY TYPE_Array def_%cl_2_10 %cl_2_9[5.8,] sum_gte[3.0,2.5,] 
		 10: %self->where def_%cl_2_11 %self[2.0,] %cl_2_10[5.9,] 	 SYMBOL:	 ARGS:%cl_2_10,
		 11: 
BB 6
	outgoing: 8 10 
	datadep: 
	instructions:
		 0: 
		 1: purities->map def_%cl_2_12 purities[2.4,] %self[2.0,] 	 SYMBOL:	 ARGS:purities,
CLOSURE BEGIN: %self[2.0,] p[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_4_0 
		 2: RECEIVEARG def_p 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->counter_name_for def_%cl_4_3 %self[2.0,] p[2.2,] 	 SYMBOL:	 ARGS:p,
		 2: COPY TYPE_StringLiteral " > 0" def_%cl_4_4 
		 3: BUILDSTRING def_%cl_4_5 %cl_4_3[3.1,] %cl_4_4[3.2,] 
		 4: RETURN %cl_4_5[3.3,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_4_6 
		 1: def_%cl_4_7 %cl_4_6[4.0,] 
		 2: RETURN %cl_4_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: COPY TYPE_StringLiteral " OR " def_%cl_2_13 
		 3: %cl_2_12->join def_%cl_2_14 %cl_2_12[6.1,] %cl_2_13[6.2,] 	 SYMBOL:	 ARGS:%cl_2_13,
		 4: COPY TYPE_PASS def_purities %cl_2_14[6.3,] 
		 5: 
		 6: COPY TYPE_StringLiteral "(" def_%cl_2_15 
		 7: COPY TYPE_StringLiteral ")" def_%cl_2_16 
		 8: BUILDSTRING def_%cl_2_17 %cl_2_15[6.6,] %cl_2_14[6.3,] %cl_2_16[6.7,] 
		 9: %self->where def_%cl_2_18 %self[2.0,] %cl_2_17[6.8,] 	 SYMBOL:	 ARGS:%cl_2_17,
		 10: RETURN %cl_2_18[6.9,] %self[6.9,2.0,] 
BB 7
	outgoing: 10 
	datadep: 
	instructions:
		 0: RETURN %cl_2_11[5.10,] %self[2.0,] 
BB 8
	outgoing: 10 
	datadep: 
	instructions:
		 0: def_%cl_2_19 
		 1: def_%cl_2_20 %cl_2_19[8.0,] 
		 2: RETURN %cl_2_20[8.1,] %self[2.0,] 
BB 10
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: sum_gte[3.0,2.5,] 
		 11: COPY TYPE_PASS def_%v_6 %v_5[2.10,] 
		 12: %self->scope def_%v_7 %self[2.0,2.8,] %v_5[2.10,] 	 SYMBOL:not_empty_for_purities,	 ARGS:Symbol,%v_6,
		 13: 
		 14: COPY TYPE_StringLiteral "most_" def_%v_8 
		 15: COPY TYPE_StringLiteral "_first" def_%v_9 
		 16: BUILDSTRING def_%v_10 %v_8[2.14,] collection_name[2.5,] %v_9[2.15,] 
		 17: COPY TYPE_DynamicSymbol def_%v_11 %v_10[2.16,] 
		 18: COPY TYPE_PASS def_%v_12 %v_11[2.17,] 
		 19: def_%v_13 %self[2.0,2.8,2.12,] 
CLOSURE BEGIN: purities[2.10,] %self[2.0,2.8,2.12,] p[] 
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 5 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_5_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: RECEIVEARG def_purities 
		 5: 
		 6: purities->map def_%cl_5_3 purities[2.4,] %self[2.0,] 	 SYMBOL:	 ARGS:purities,
CLOSURE BEGIN: %self[2.0,] p[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_6_0 
		 2: RECEIVEARG def_p 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->counter_name_for def_%cl_6_3 %self[2.0,] p[2.2,] 	 SYMBOL:	 ARGS:p,
		 2: RETURN %cl_6_3[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_6_4 
		 1: def_%cl_6_5 %cl_6_4[4.0,] 
		 2: RETURN %cl_6_5[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 7: COPY TYPE_StringLiteral " + " def_%cl_5_4 
		 8: %cl_5_3->join def_%cl_5_5 %cl_5_3[2.6,] %cl_5_4[2.7,] 	 SYMBOL:	 ARGS:%cl_5_4,
		 9: COPY TYPE_PASS def_purities %cl_5_5[2.8,] 
		 10: 
		 11: COPY TYPE_StringLiteral "(" def_%cl_5_6 
		 12: COPY TYPE_StringLiteral ") DESC" def_%cl_5_7 
		 13: BUILDSTRING def_%cl_5_8 %cl_5_6[2.11,] %cl_5_5[2.8,] %cl_5_7[2.12,] 
		 14: %self->order def_%cl_5_9 %self[2.0,] %cl_5_8[2.13,] 	 SYMBOL:	 ARGS:%cl_5_8,
		 15: RETURN %cl_5_9[2.14,] %self[2.0,2.14,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: def_%cl_5_10 
		 1: def_%cl_5_11 %cl_5_10[3.0,] 
		 2: RETURN %cl_5_11[3.1,] %self[2.0,] 
BB 5
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 20: COPY TYPE_PASS def_%v_14 %v_13[2.19,] 
		 21: %self->scope def_%v_15 %self[2.0,2.8,2.12,] %v_11[2.17,] %v_13[2.19,] 	 SYMBOL:	 ARGS:%v_12,%v_14,
		 22: 
		 23: %self->define_singleton_method def_%v_16 %self[2.0,2.8,2.12,2.21,] %self[2.0,2.8,2.12,2.21,] 	 SYMBOL:counter_name_for,	 ARGS:Symbol,%self,
CLOSURE BEGIN: purity[] collection_name[2.5,] 
BB 1
	outgoing: 12 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_7_0 
		 2: RECEIVEARG def_purity 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 10 
	datadep: 
	instructions:
		 0: 
		 1: purity->respond_to? def_%cl_7_3 purity[2.2,] 	 SYMBOL:purity,	 ARGS:Symbol,
		 2: BRANCH %cl_7_3[3.1,] 
BB 4
	outgoing: 6 10 
	datadep: 
	instructions:
		 0: purity->purity def_%cl_7_4 purity[2.2,] 	 SYMBOL:	 ARGS:
		 1: COPY TYPE_PASS def_purity %cl_7_4[4.0,] 
		 2: 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Nil def_%cl_7_4 
BB 6
	outgoing: 7 8 10 
	datadep: 
	instructions:
		 0: 
		 1: purity->present? def_%cl_7_5 purity[4.1,2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_7_5[6.1,] 
BB 7
	outgoing: 9 10 
	datadep: 
	instructions:
		 0: COPY TYPE_StringLiteral "_" def_%cl_7_6 
		 1: COPY TYPE_StringLiteral "_count" def_%cl_7_7 
		 2: BUILDSTRING def_%cl_7_8 purity[4.1,2.2,] %cl_7_6[7.0,] collection_name[] %cl_7_7[7.1,] 
		 3: 
BB 8
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 9
	outgoing: 12 
	datadep: 
	instructions:
		 0: RETURN %cl_7_8[7.2,] %self[2.0,] 
BB 10
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%cl_7_9 
		 1: def_%cl_7_10 %cl_7_9[10.0,] 
		 2: RETURN %cl_7_10[10.1,] %self[2.0,] 
BB 12
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 24: 
		 25: COPY TYPE_StringLiteral "_count_for" def_%v_17 
		 26: BUILDSTRING def_%v_18 collection_name[2.5,] %v_17[2.25,] 
		 27: COPY TYPE_DynamicSymbol def_%v_19 %v_18[2.26,] 
		 28: %self->define_method def_%v_20 %self[2.0,2.8,2.12,2.21,2.23,] %v_19[2.27,] %self[2.0,2.8,2.12,2.21,2.23,] 	 SYMBOL:	 ARGS:%v_19,%self,
CLOSURE BEGIN: purities[2.10,2.19,] %self[2.0,2.8,2.12,2.21,2.23,] purity[2.23,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_8_0 
		 2: RECEIVEARG def_purities 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: purities->map def_%cl_8_3 purities[2.2,] %self[2.0,] 	 SYMBOL:	 ARGS:purities,
CLOSURE BEGIN: %self[2.0,] purity[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_9_0 
		 2: RECEIVEARG def_purity 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: %self->class def_%cl_9_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 2: %cl_9_3->counter_name_for def_%cl_9_4 %cl_9_3[3.1,] purity[2.2,] 	 SYMBOL:	 ARGS:purity,
		 3: %self->read_attribute def_%cl_9_5 %self[3.1,2.0,] %cl_9_4[3.2,] 	 SYMBOL:	 ARGS:%cl_9_4,
		 4: RETURN %cl_9_5[3.3,] %self[3.1,3.3,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_9_6 
		 1: def_%cl_9_7 %cl_9_6[4.0,] 
		 2: RETURN %cl_9_7[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 2: %cl_8_3->reduce def_%cl_8_4 %cl_8_3[3.1,] 	 SYMBOL:+,	 ARGS:Symbol,
		 3: RETURN %cl_8_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_8_5 
		 1: def_%cl_8_6 %cl_8_5[4.0,] 
		 2: RETURN %cl_8_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 29: 
		 30: COPY TYPE_StringLiteral "_count" def_%v_21 
		 31: BUILDSTRING def_%v_22 collection_name[2.5,] %v_21[2.30,] 
		 32: COPY TYPE_DynamicSymbol def_%v_23 %v_22[2.31,] 
		 33: %self->define_method def_%v_24 %self[2.0,2.8,2.12,2.21,2.23,2.28,] %v_23[2.32,] %self[2.0,2.8,2.12,2.21,2.23,2.28,] 	 SYMBOL:	 ARGS:%v_23,%self,
CLOSURE BEGIN: collection_name[2.5,] %self[2.0,2.8,2.12,2.21,2.23,2.28,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_10_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_StringLiteral "_count_for" def_%cl_10_3 
		 2: BUILDSTRING def_%cl_10_4 collection_name[] %cl_10_3[3.1,] 
		 3: COPY TYPE_Array def_%cl_10_5 
		 4: %self->send def_%cl_10_6 %self[2.0,] %cl_10_4[3.2,] %cl_10_5[3.3,] 	 SYMBOL:	 ARGS:%cl_10_4,%cl_10_5,
		 5: RETURN %cl_10_6[3.4,] %self[3.4,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_10_7 
		 1: def_%cl_10_8 %cl_10_7[4.0,] 
		 2: RETURN %cl_10_8[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 34: RETURN %v_24[2.33,] %self[2.0,2.8,2.12,2.21,2.23,2.28,2.33,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%v_25 
		 1: def_%v_26 %v_25[4.0,] 
		 2: RETURN %v_26[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

