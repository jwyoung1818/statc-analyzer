SET IRMethod, name = ordered instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-position- def_%v_3 
		 7: %self->order def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = latest instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-last_added_at- def_%v_3 
		 7: %self->order def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ordered instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-position- def_%v_3 
		 7: %self->order def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = latest instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-last_added_at- def_%v_3 
		 7: %self->order def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ordered instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-position- def_%v_3 
		 7: %self->order def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = latest instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH-last_added_at- def_%v_3 
		 7: %self->order def_%v_4 %self[2.0,] %v_3[2.6,] 	 SYMBOL:	 ARGS:%v_3,
		 8: RETURN %v_4[2.7,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ensure_consistency! instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->connection def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "
      UPDATE collections c
      SET
        sfw_wallpapers_count = (
          SELECT COUNT(*)
          FROM wallpapers w
          WHERE w.id IN ( SELECT cw.wallpaper_id FROM collections_wallpapers cw WHERE cw.collection_id = c.id )
            AND w.purity = 'sfw'
        ),
        sketchy_wallpapers_count = (
          SELECT COUNT(*)
          FROM wallpapers w
          WHERE w.id IN ( SELECT cw.wallpaper_id FROM collections_wallpapers cw WHERE cw.collection_id = c.id )
            AND w.purity = 'sketchy'
        ),
        nsfw_wallpapers_count = (
          SELECT COUNT(*)
          FROM wallpapers w
          WHERE w.id IN ( SELECT cw.wallpaper_id FROM collections_wallpapers cw WHERE cw.collection_id = c.id )
            AND w.purity = 'nsfw'
        )
    " def_%v_4 
		 8: %v_3->execute def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = ensure_in_list! instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->all def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->each def_%v_4 %v_3[2.6,] %self[2.0,2.6,] 	 SYMBOL:	 ARGS:%v_3,
CLOSURE BEGIN: collection[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_collection 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: collection->not_in_list? def_%cl_1_3 collection[2.2,] 	 SYMBOL:	 ARGS:
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: collection->insert_to_list def_%cl_1_4 collection[2.2,] 	 SYMBOL:	 ARGS:
		 1: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_1_4[4.0,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[7.0,] 
		 2: RETURN %cl_1_6[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = reset_list_position! instanceMethod = false
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->all def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: HASH-position- def_%v_4 
		 8: %v_3->update_all def_%v_5 %v_3[2.6,] %v_4[2.7,] 	 SYMBOL:	 ARGS:%v_4,
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = insert_to_list instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->insert_at def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:Fixnum,
		 7: RETURN %v_3[2.6,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = private? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->public? def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: %v_3->! def_%v_4 %v_3[2.6,] 	 SYMBOL:	 ARGS:
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_param instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: %self->id def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 7: COPY TYPE_StringLiteral "-" def_%v_4 
		 8: %self->name def_%v_5 %self[2.0,2.6,] 	 SYMBOL:	 ARGS:
		 9: %v_5->parameterize def_%v_6 %v_5[2.8,] 	 SYMBOL:	 ARGS:
		 10: BUILDSTRING def_%v_7 %v_3[2.6,] %v_4[2.7,] %v_6[2.9,] 
		 11: RETURN %v_7[2.10,] %self[2.0,2.6,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = collected? instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_wallpaper 
		 6: 
		 7: %self->collections_wallpapers def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: wallpaper->id def_%v_4 wallpaper[2.5,] 	 SYMBOL:	 ARGS:
		 9: HASH-wallpaper_id- def_%v_5 %v_4[2.8,] 
		 10: %v_3->where def_%v_6 %v_3[2.7,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_5,
		 11: %v_6->exists? def_%v_7 %v_6[2.10,] 	 SYMBOL:	 ARGS:
		 12: RETURN %v_7[2.11,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = uncollect! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_wallpaper 
		 6: 
		 7: %self->collections_wallpapers def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: wallpaper->id def_%v_4 wallpaper[2.5,] 	 SYMBOL:	 ARGS:
		 9: HASH-wallpaper_id- def_%v_5 %v_4[2.8,] 
		 10: %v_3->find_by! def_%v_6 %v_3[2.7,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_5,
		 11: %v_6->destroy def_%v_7 %v_6[2.10,] 	 SYMBOL:	 ARGS:
		 12: 
		 13: %self->touch def_%v_8 %self[2.0,2.7,] 	 SYMBOL:	 ARGS:
		 14: 
		 15: %self->class def_%v_9 %self[2.0,2.7,2.13,] 	 SYMBOL:	 ARGS:
		 16: %self->class def_%v_10 %self[2.0,2.7,2.13,2.15,] 	 SYMBOL:	 ARGS:
		 17: %v_10->counter_name_for def_%v_11 %v_10[2.16,] wallpaper[2.5,2.8,] 	 SYMBOL:	 ARGS:wallpaper,
		 18: %self->id def_%v_12 %self[2.0,2.7,2.13,2.15,2.16,] 	 SYMBOL:	 ARGS:
		 19: %v_9->decrement_counter def_%v_13 %v_9[2.15,] %v_11[2.17,] %v_12[2.18,] 	 SYMBOL:	 ARGS:%v_11,%v_12,
		 20: RETURN %v_13[2.19,] %self[2.0,2.7,2.13,2.15,2.16,2.18,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = collect! instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_wallpaper 
		 6: 
		 7: %self->collections_wallpapers def_%v_3 %self[2.0,] 	 SYMBOL:	 ARGS:
		 8: wallpaper->id def_%v_4 wallpaper[2.5,] 	 SYMBOL:	 ARGS:
		 9: HASH-wallpaper_id- def_%v_5 %v_4[2.8,] 
		 10: %v_3->create! def_%v_6 %v_3[2.7,] %v_5[2.9,] 	 SYMBOL:	 ARGS:%v_5,
		 11: 
		 12: %self->touch def_%v_7 %self[2.0,2.7,] 	 SYMBOL:last_added_at,	 ARGS:Symbol,
		 13: 
		 14: %self->class def_%v_8 %self[2.0,2.7,2.12,] 	 SYMBOL:	 ARGS:
		 15: %self->class def_%v_9 %self[2.0,2.7,2.12,2.14,] 	 SYMBOL:	 ARGS:
		 16: %v_9->counter_name_for def_%v_10 %v_9[2.15,] wallpaper[2.5,2.8,] 	 SYMBOL:	 ARGS:wallpaper,
		 17: %self->id def_%v_11 %self[2.0,2.7,2.12,2.14,2.15,] 	 SYMBOL:	 ARGS:
		 18: %v_8->increment_counter def_%v_12 %v_8[2.14,] %v_10[2.16,] %v_11[2.17,] 	 SYMBOL:	 ARGS:%v_10,%v_11,
		 19: RETURN %v_12[2.18,] %self[2.0,2.7,2.12,2.14,2.15,2.17,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

