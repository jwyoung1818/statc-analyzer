SET IRMethod, name = initialize instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: RECEIVEARG def_wallpaper 
		 6: 
		 7: ATTRASSIGN %self->wallpaper wallpaper[2.5,] 
		 8: RETURN wallpaper[2.5,] %self[2.0,2.7,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = collection instanceMethod = true
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: COPY TYPE_PASS def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: GETFIELD %self->collection def_%v_5 %self[2.0,] 
		 1: COPY TYPE_PASS def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: (ScreenResolution) def_%v_6 
		 1: COPY TYPE_StringLiteral "width <= :width AND height <= :height" def_%v_7 
		 2: GETFIELD %self->wallpaper def_%v_8 %self[2.0,] 
		 3: %v_8->image_width def_%v_9 %v_8[5.2,] 	 SYMBOL:	 ARGS:
		 4: GETFIELD %self->wallpaper def_%v_10 %self[2.0,] 
		 5: %v_10->image_height def_%v_11 %v_10[5.4,] 	 SYMBOL:	 ARGS:
		 6: HASH-width-height- def_%v_12 %v_9[5.3,] %v_11[5.5,] 
		 7: %v_6->where def_%v_13 %v_6[5.0,] %v_7[5.1,] %v_12[5.6,] 	 SYMBOL:	 ARGS:%v_7,%v_12,
		 8: ATTRASSIGN %self->collection %v_13[5.7,] 
		 9: RETURN %v_13[5.7,] %self[5.8,2.0,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] %self[2.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = array_for_options instanceMethod = true
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY TYPE_CurrentScope def_%current_scope 
		 3: COPY TYPE_ScopeModule def_%current_module 
		 4: 
		 5: 
		 6: HASH- def_%v_3 
		 7: COPY TYPE_PASS def_unflattened_options %v_3[2.6,] 
		 8: 
		 9: %self->each def_%v_4 %self[2.0,] %self[2.0,] 	 SYMBOL:	 ARGS:%self,
CLOSURE BEGIN: r[] unflattened_options[2.7,] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_r 
		 3: COPY TYPE_CurrentScope def_%current_scope 
		 4: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: r->category_text def_%cl_1_4 r[2.2,] 	 SYMBOL:	 ARGS:
		 2: unflattened_options->[] def_%cl_1_3 unflattened_options[] %cl_1_4[3.1,] 	 SYMBOL:	 ARGS:%cl_1_4,
		 3: BRANCH %cl_1_3[3.2,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: COPY TYPE_Array def_%cl_1_5 
		 1: unflattened_options->[]= def_%cl_1_3 unflattened_options[] %cl_1_4[3.1,] %cl_1_5[4.0,] 	 SYMBOL:	 ARGS:%cl_1_4,%cl_1_5,
		 2: COPY TYPE_PASS def_%cl_1_3 %cl_1_5[4.0,] 
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: 
		 1: r->category_text def_%cl_1_6 r[2.2,] 	 SYMBOL:	 ARGS:
		 2: unflattened_options->[] def_%cl_1_7 unflattened_options[4.1,] %cl_1_6[5.1,] 	 SYMBOL:	 ARGS:%cl_1_6,
		 3: r->to_s def_%cl_1_8 r[5.1,2.2,] 	 SYMBOL:	 ARGS:
		 4: r->to_param def_%cl_1_9 r[5.1,5.3,2.2,] 	 SYMBOL:	 ARGS:
		 5: r->width def_%cl_1_10 r[5.1,5.3,5.4,2.2,] 	 SYMBOL:	 ARGS:
		 6: r->height def_%cl_1_11 r[5.1,5.3,5.4,5.5,2.2,] 	 SYMBOL:	 ARGS:
		 7: HASH-width-height- def_%cl_1_12 %cl_1_10[5.5,] %cl_1_11[5.6,] 
		 8: HASH-data- def_%cl_1_13 %cl_1_12[5.7,] 
		 9: COPY TYPE_Array def_%cl_1_14 %cl_1_8[5.3,] %cl_1_9[5.4,] %cl_1_13[5.8,] 
		 10: %cl_1_7-><< def_%cl_1_15 %cl_1_7[5.2,] %cl_1_14[5.9,] 	 SYMBOL:	 ARGS:%cl_1_14,
		 11: RETURN %cl_1_15[5.10,] %self[2.0,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_16 
		 1: def_%cl_1_17 %cl_1_16[6.0,] 
		 2: RETURN %cl_1_17[6.1,] %self[2.0,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: 
		 10: 
		 11: COPY TYPE_Array def_%v_5 
		 12: COPY TYPE_PASS def_options %v_5[2.11,] 
		 13: 
		 14: unflattened_options->each_pair def_%v_6 unflattened_options[2.7,] %self[2.0,2.9,] 	 SYMBOL:	 ARGS:unflattened_options,
CLOSURE BEGIN: cat[] opts[] options[2.12,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: RECEIVEARG def_cat 
		 3: RECEIVEARG def_opts 
		 4: COPY TYPE_CurrentScope def_%current_scope 
		 5: COPY TYPE_ScopeModule def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: COPY TYPE_Array def_%cl_2_3 cat[2.2,] opts[2.3,] 
		 2: options-><< def_%cl_2_4 options[] %cl_2_3[3.1,] 	 SYMBOL:	 ARGS:%cl_2_3,
		 3: RETURN %cl_2_4[3.2,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[4.0,] 
		 2: RETURN %cl_2_6[4.1,] %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END: opts[2.3,] 
		 15: 
		 16: RETURN options[2.12,] %self[2.0,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

