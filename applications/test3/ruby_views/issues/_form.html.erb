 labelled_fields_for :issue, @issue do |f| 
 call_hook(:view_issues_form_details_top, { :issue => @issue, :form => f }) 
 hidden_field_tag 'form_update_triggered_by', '' 
 hidden_field_tag 'back_url', params[:back_url], :id => nil if params[:back_url].present? 
 if @issue.safe_attribute? 'is_private' 
 f.check_box :is_private, :no_label => true 
 l(:field_is_private) 
 end 
 projects = @issue.allowed_target_projects(User.current, @project) 
 if (@issue.safe_attribute?('project_id') || @issue.project_id_changed?) && (@project.nil? || projects.length > 1 || @issue.copy?) 
 f.select :project_id, project_tree_options_for_select(projects, :selected => @issue.project), {:required => true},
                :onchange => "updateIssueFrom('#{escape_javascript update_issue_form_path(@project, @issue)}', this)" 
 end 
 if @issue.safe_attribute?('tracker_id') || (@issue.persisted? && @issue.tracker_id_changed?) 
 f.select :tracker_id, trackers_options_for_select(@issue), {:required => true},
                :onchange => "updateIssueFrom('#{escape_javascript update_issue_form_path(@project, @issue)}', this)" 
 end 
 if @issue.safe_attribute? 'subject' 
 f.text_field :subject, :size => 80, :maxlength => 255, :required => true 
 end 
 if @issue.safe_attribute? 'description' 
 f.label_for_field :description, :required => @issue.required_attribute?('description') 
 link_to_function content_tag(:span, l(:button_edit), :class => 'icon icon-edit'), '$(this).hide(); $("#issue_description_and_toolbar").show()' unless @issue.new_record? 
 content_tag 'span', :id => "issue_description_and_toolbar", :style => (@issue.new_record? ? nil : 'display:none') do 
 f.text_area :description,
                   :cols => 60,
                   :rows => [[10, @issue.description.to_s.length / 50].max, 20].min,
                   :accesskey => accesskey(:edit),
                   :class => 'wiki-edit',
                   :no_label => true 
 end 
 wikitoolbar_for 'issue_description' 
 end 
 render :partial => 'issues/attributes' 
 call_hook(:view_issues_form_details_bottom, { :issue => @issue, :form => f }) 
 end 
 heads_for_wiki_formatter 
 javascript_tag do 
 end 
