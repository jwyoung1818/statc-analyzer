 title [l(:label_role_plural), roles_path], l(:label_permissions_report) 
 form_tag(permissions_roles_path, :id => 'permissions_form') do 
 hidden_field_tag 'permissions[0]', '', :id => nil 
l(:label_permissions)
 @roles.each do |role| 
 link_to_function('',
                             "toggleCheckboxesBySelector('input.role-#{role.id}')",
                             :title => "#{l(:button_check_all)}/#{l(:button_uncheck_all)}",
                             :class => 'icon-only icon-checked') 
 content_tag(role.builtin? ? 'em' : 'span', role.name) 
 end 
 perms_by_module = @permissions.group_by {|p| p.project_module.to_s} 
 perms_by_module.keys.sort.each do |mod| 
 unless mod.blank? 
 l_or_humanize(mod, :prefix => 'project_module_') 
 @roles.each do |role| 
 role.name 
 end 
 end 
 perms_by_module[mod].each do |permission| 
 humanized_perm_name = l_or_humanize(permission.name, :prefix => 'permission_') 
 permission.name 
 link_to_function('',
                                 "toggleCheckboxesBySelector('.permission-#{permission.name} input')",
                                 :title => "#{l(:button_check_all)}/#{l(:button_uncheck_all)}",
                                 :class => 'icon-only icon-checked') 
 humanized_perm_name 
 @roles.each do |role| 
 if role.setable_permissions.include? permission 
 "#{humanized_perm_name} (#{role.name})" 
 check_box_tag "permissions[#{role.id}][]", permission.name, (role.permissions.include? permission.name), :id => nil, :class => "role-#{role.id}" 
 else 
 end 
 end 
 end 
 end 
 check_all_links 'permissions_form' 
 submit_tag l(:button_save) 
 end 
