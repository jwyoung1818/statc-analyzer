 link_to(l(:button_edit), edit_user_path(@user), :class => 'icon icon-edit') if User.current.admin? && @user.logged? 
 avatar @user, :size => "50" 
 @user.name 
 if User.current.admin? 
l(:field_login)
 @user.login 
 end 
 unless @user.pref.hide_mail 
l(:field_mail)
 mail_to(@user.mail, nil, :encode => 'javascript') 
 end 
 @user.visible_custom_field_values.each do |custom_value| 
 if !custom_value.value.blank? 
 custom_value.custom_field.name 
 show_value(custom_value) 
 end 
 end 
l(:label_registered_on)
 format_date(@user.created_on) 
 unless @user.last_login_on.nil? 
l(:field_last_login_on)
 format_date(@user.last_login_on) 
 end 
l(:label_issue_plural)
 link_to l(:label_assigned_issues),
        issues_path(:set_filter => 1, :assigned_to_id => ([@user.id] + @user.group_ids).join("|"), :sort => 'priority:desc,updated_on:desc') 
 Issue.visible.open.assigned_to(@user).count 
 link_to l(:label_reported_issues),
        issues_path(:set_filter => 1, :status_id => '*', :author_id => @user.id) 
 Issue.visible.where(:author_id => @user.id).count 
 unless @memberships.empty? 
l(:label_project_plural)
 for membership in @memberships 
 link_to_project(membership.project) 
 membership.roles.sort.collect(&:to_s).join(', ') 
 format_date(membership.created_on) 
 end 
 end 
 call_hook :view_account_left_bottom, :user => @user 
 unless @events_by_day.empty? 
 link_to l(:label_activity), :controller => 'activities',
                :action => 'index', :id => nil, :user_id => @user,
                :from => @events_by_day.keys.first 
 @events_by_day.keys.sort.reverse_each do |day| 
 format_activity_day(day) 
 sort_activity_events(@events_by_day[day]).each do |e, in_group| 
 e.event_type 
 e.event_type 
 "grouped" if in_group 
 User.current.logged? && e.respond_to?(:event_author) && User.current == e.event_author ? 'me' : nil 
 format_time(e.event_datetime, false) 
 content_tag('span', e.project, :class => 'project') 
 link_to format_activity_title(e.event_title), e.event_url 
 "grouped" if in_group 
 format_activity_description(e.event_description) 
 end 
 end 
 other_formats_links do |f| 
 f.link_to 'Atom', :url => {:controller => 'activities', :action => 'index', :id => nil, :user_id => @user, :key => User.current.rss_key} 
 end 
 content_for :header_tags do 
 auto_discovery_link_tag(:atom, :controller => 'activities', :action => 'index', :user_id => @user, :format => :atom, :key => User.current.rss_key) 
 end 
 end 
 call_hook :view_account_right_bottom, :user => @user 
 html_title @user.name 
