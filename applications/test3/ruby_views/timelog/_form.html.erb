 error_messages_for 'time_entry' 
 back_url_hidden_field_tag 
 if @time_entry.new_record? && params[:project_id] 
 hidden_field_tag 'project_id', params[:project_id] 
 elsif @time_entry.new_record? && params[:issue_id] 
 hidden_field_tag 'issue_id', params[:issue_id] 
 else 
 f.select :project_id, project_tree_options_for_select(Project.allowed_to(:log_time).to_a, :selected => @time_entry.project, :include_blank => true), :required => true 
 end 
 f.text_field :issue_id, :size => 6, :required => Setting.timelog_required_fields.include?('issue_id') 
  link_to_issue(@time_entry.issue) if @time_entry.issue.try(:visible?) 
 f.date_field :spent_on, :size => 10, :required => true 
 calendar_for('time_entry_spent_on') 
 f.hours_field :hours, :size => 6, :required => true 
 f.text_field :comments, :size => 100, :maxlength => 1024, :required => Setting.timelog_required_fields.include?('comments') 
 f.select :activity_id, activity_collection_for_select_options(@time_entry), :required => true 
 @time_entry.custom_field_values.each do |value| 
 custom_field_tag_with_label :time_entry, value 
 end 
 call_hook(:view_timelog_edit_form_bottom, { :time_entry => @time_entry, :form => f }) 
 javascript_tag do 
 escape_javascript(@time_entry.new_record? ? new_time_entry_path(:format => 'js') : edit_time_entry_path(:format => 'js')) 
 j auto_complete_issues_path 
 if @time_entry.new_record? && @project 
 @project.id 
 else 
 end 
 end 
