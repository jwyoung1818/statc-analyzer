 error_messages_for 'query' 
 hidden_field_tag 'gantt', '1' if params[:gantt] 
l(:field_name)
 text_field 'query', 'name', :size => 80 
 if User.current.admin? || User.current.allowed_to?(:manage_public_queries, @query.project) 
l(:field_visible)
 radio_button 'query', 'visibility', Query::VISIBILITY_PRIVATE 
 l(:label_visibility_private) 
 radio_button 'query', 'visibility', Query::VISIBILITY_PUBLIC 
 l(:label_visibility_public) 
 radio_button 'query', 'visibility', Query::VISIBILITY_ROLES 
 l(:label_visibility_roles) 
 Role.givable.sorted.each do |role| 
 check_box_tag 'query[role_ids][]', role.id, @query.roles.include?(role), :id => nil 
 role.name 
 end 
 hidden_field_tag 'query[role_ids][]', '' 
 end 
l(:field_is_for_all)
 check_box_tag 'query_is_for_all', 1, @query.project.nil?, :class => (User.current.admin? ? '' : 'disable-unless-private') 
 unless params[:gantt] 
 l(:label_options) 
l(:label_default_columns)
 check_box_tag 'default_columns', 1, @query.has_default_columns?, :id => 'query_default_columns',
      :data => {:disables => "#columns, .block_columns input"} 
 l(:field_group_by) 
 select 'query', 'group_by', @query.groupable_columns.collect {|c| [c.caption, c.name.to_s]}, :include_blank => true 
 l(:button_show) 
 available_block_columns_tags(@query) 
 l(:label_total_plural) 
 available_totalable_columns_tags(@query) 
 else 
 l(:label_options) 
 l(:button_show) 
 check_box_tag "query[draw_relations]", "1", @query.draw_relations 
 l(:label_related_issues) 
 check_box_tag "query[draw_progress_line]", "1", @query.draw_progress_line 
 l(:label_gantt_progress_line) 
 end 
 l(:label_filter_plural) 
 render :partial => 'queries/filters', :locals => {:query => query}
 unless params[:gantt] 
 l(:label_sort) 
 3.times do |i| 
 content_tag(:span, "#{i+1}:", :class => 'query_sort_criteria_count')
 label_tag "query_sort_criteria_attribute_" + i.to_s,
              l(:description_query_sort_criteria_attribute), :class => "hidden-for-sighted" 
 select_tag("query[sort_criteria][#{i}][]",
               options_for_select([[]] + query.available_columns.select(&:sortable?).collect {|column| [column.caption, column.name.to_s]}, @query.sort_criteria_key(i)),
               :id => "query_sort_criteria_attribute_" + i.to_s)
 label_tag "query_sort_criteria_direction_" + i.to_s,
              l(:description_query_sort_criteria_direction), :class => "hidden-for-sighted" 
 select_tag("query[sort_criteria][#{i}][]",
                options_for_select([[], [l(:label_ascending), 'asc'], [l(:label_descending), 'desc']], @query.sort_criteria_order(i)),
                :id => "query_sort_criteria_direction_" + i.to_s) 
 end 
 end 
 unless params[:gantt] 
 content_tag 'fieldset', :id => 'columns' do 
 l(:field_column_names) 
 render_query_columns_selection(query) 
 end 
 end 
 javascript_tag do 
 end 
