SET IRMethod, name = initialize
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: def_klass RECEIVEARG 
		 6: 
		 7: ATTRASSIGN %self->klass %self[2.0,] klass[2.5,] 
		 8: 
		 9: ATTRASSIGN %self->generation_attempts %self[2.0,2.7,] 
		 10: RETURN 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = generate
BB 1
	outgoing: 13 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: 
BB 3
	outgoing: 4 5 
	datadep: 
	instructions:
		 0: def_%v_4 %self->candidate_id %self[2.0,] 
		 1: def_generated_id %v_4[3.0,] 
		 2: BRANCH %v_4[3.0,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: def_%v_5 generated_id->valid? generated_id[3.1,] 
		 1: def_%v_4 %v_5[4.0,] 
BB 5
	outgoing: 6 11 
	datadep: 
	instructions:
		 0: BRANCH %v_4[4.1,3.0,] 
BB 6
	outgoing: 7 8 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: def_%v_6 %self->generation_attempts %self[2.0,] 
		 3: def_%v_8 %v_6[6.2,] 
		 4: def_%v_7 %self[6.2,2.0,] %v_8[6.3,] 
		 5: 
		 6: def_%v_9 %self->generation_attempts %self[6.2,2.0,] 
		 7: def_%v_10 %v_9[6.6,] 
		 8: BRANCH %v_10[6.7,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%v_11 
		 1: def_%v_12 %self->raise %self[2.0,] %v_11[7.0,] 
		 2: 
BB 8
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%v_12 
BB 9
	outgoing: 3 
	datadep: 
	instructions:
		 0: 
BB 11
	outgoing: 13 
	datadep: 
	instructions:
		 0: def_%v_3 
		 1: 
		 2: def_%v_13 generated_id->to_s generated_id[3.1,] 
		 3: RETURN %v_13[11.2,] 
BB 13
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = candidate_id
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: 
		 6: def_%v_3 (CandidateId) 
		 7: def_%v_4 %self->klass %self[2.0,] 
		 8: def_%v_5 %v_3->new %v_3[2.6,] %v_4[2.7,] 
		 9: RETURN %v_5[2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = initialize
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: def_klass RECEIVEARG 
		 6: 
		 7: ATTRASSIGN %self->klass %self[2.0,] klass[2.5,] 
		 8: 
		 9: def_%v_3 %self->generate_id %self[2.0,2.7,] 
		 10: ATTRASSIGN %self->id %self[2.0,2.7,2.9,] %v_3[2.9,] 
		 11: RETURN %v_3[2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = to_s
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: 
		 6: def_%v_3 %self->id %self[2.0,] 
		 7: RETURN %v_3[2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = generate_id
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: 
		 6: def_%v_3 (Utils) 
		 7: def_%v_4 %v_3[2.6,] 
		 8: def_%v_5 %v_4->downcase %v_4[2.7,] 
		 9: RETURN %v_5[2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = valid?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: 
		 6: def_%v_3 %self->klass %self[2.0,] 
		 7: def_%v_4 %self->id %self[2.0,2.6,] 
		 8: def_%v_5 %v_4[2.7,] 
		 9: def_%v_6 %v_3->exists? %v_3[2.6,] %v_5[2.8,] 
		 10: def_%v_7 %v_6->! %v_6[2.9,] 
		 11: RETURN %v_7[2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

