SET IRMethod, name = assign_short_id
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:3, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 26)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = search_const(scope<1> ;name: ShortId, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_4 = call_0o(%self ;n:class, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_5 = call_1o(%v_3, %v_4 ;n:new, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_3[2.6 ] %v_4[2.7 ] ) 
		%v_6 = call_0o(%v_5 ;n:generate, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_5[2.8 ] ) 
		attr_assign(%self, %v_6 ;n:short_id=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	%self[2.0 2.7 ] %v_6[2.9 ] ) #<%self>#	-- [PUT:%self].short_id 
		return(%v_6)		--org.jruby.ir.instructions.ReturnInstr(	%v_6[2.9 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = check_for_both_deleted
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:8, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 4		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 30)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:deleted_by_author?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		b_false(LBL_2:11, %v_3)		--org.jruby.ir.instructions.BFalseInstr(	%v_3[2.6 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 4		
	Vars Live on Exit:  0		
	outgoing edges:4, 
	Instructions:
		%v_4 = call_0o(%self ;n:deleted_by_recipient?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_3 = copy(%v_4)		--org.jruby.ir.instructions.CopyInstr(	%v_4[3.0 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0 4		
	outgoing edges:5, 6, 
	Instructions:
		b_false(LBL_0:16, %v_3)		--org.jruby.ir.instructions.BFalseInstr(	%v_3[3.1 2.6 ] ) 
PRINT info for BB 5:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:8, 
	Instructions:
		line_num(;n: 31)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_5 = call_0o(%self ;n:destroy, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		return(%v_5)		--org.jruby.ir.instructions.ReturnInstr(	%v_5[5.1 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:8, 
	Instructions:
		return(nil)		--org.jruby.ir.instructions.ReturnInstr(	) 
PRINT info for BB 8:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = update_unread_counts
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:3, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 36)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:recipient, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_4 = call_0o(%v_3 ;n:update_unread_message_count!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		return(%v_4)		--org.jruby.ir.instructions.ReturnInstr(	%v_4[2.7 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = deliver_email_notifications
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:21, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 40)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = search_const(scope<1> ;name: Rails, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_4 = call_0o(%v_3 ;n:env, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		%v_5 = call_0o(%v_4 ;n:development?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_4[2.7 ] ) 
		b_false(LBL_0:12, %v_5)		--org.jruby.ir.instructions.BFalseInstr(	%v_5[2.8 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:21, 
	Instructions:
		return(nil)		--org.jruby.ir.instructions.ReturnInstr(	) 
PRINT info for BB 4:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:6, 16, 
	Instructions:
		%v_6 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 42)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_7 = call_0o(%self ;n:recipient, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_8 = call_0o(%v_7 ;n:email_messages?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_7[4.2 ] ) 
		b_false(LBL_2:69, %v_8)		--org.jruby.ir.instructions.BFalseInstr(	%v_8[4.3 ] ) 
PRINT info for BB 6:
	Vars Live on Entry:  0 10		
	Vars Live on Exit:  0		
	outgoing edges:8, 
	Instructions:
		line_num(;n: 43)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_9 = get_global_var($!)		--org.jruby.ir.instructions.GetGlobalVariableInstr(	) 
PRINT info for BB 8:
	Vars Live on Entry:  0 10		
	Vars Live on Exit:  0 10		
	outgoing edges:9, 10, 
	Instructions:
		toggle_backtrace(;true)		--org.jruby.ir.instructions.ToggleBacktraceInstr(	) 
		line_num(;n: 44)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_12 = search_const(scope<1> ;name: EmailMessage, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_13 = call_0o(%self ;n:recipient, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_14 = call(%v_12, %self, %v_13 ;n:notify, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%v_12[8.2 ] %self[8.3 2.0 ] %v_13[8.3 ] ) 
		%v_15 = call_0o(%v_14 ;n:deliver, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_14[8.4 ] ) 
		%v_11 = copy(%v_15)		--org.jruby.ir.instructions.CopyInstr(	%v_15[8.5 ] ) 
		put_global_var($!, %v_9)		--org.jruby.ir.instructions.PutGlobalVarInstr(	%v_9[6.1 ] ) 
PRINT info for BB 9:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:15, 
	Instructions:
		jump(LBL_6:67)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 10:
	Vars Live on Entry:  0 10 16		
	Vars Live on Exit:  0 10		
	outgoing edges:11, 12, 14, 
	Instructions:
		%v_16 = recv_ruby_exc()		--org.jruby.ir.instructions.ReceiveRubyExceptionInstr(	) 
		%v_17 = rescue_eqq(StandardError, %v_16)		--org.jruby.ir.instructions.RescueEQQInstr(	%v_16[10.0 ] ) 
		b_true(LBL_12:44, %v_17)		--org.jruby.ir.instructions.BTrueInstr(	%v_17[10.1 ] ) 
PRINT info for BB 11:
	Vars Live on Entry:  10		
	Vars Live on Exit:  10 16		
	outgoing edges:14, 21, 
	Instructions:
		throw(%v_16)		--org.jruby.ir.instructions.ThrowExceptionInstr(	%v_16[10.0 ] ) 
PRINT info for BB 12:
	Vars Live on Entry:  0 10		
	Vars Live on Exit:  0 10		
	outgoing edges:13, 14, 
	Instructions:
		%v_18 = get_global_var($!)		--org.jruby.ir.instructions.GetGlobalVariableInstr(	) 
		e = copy(%v_18)		--org.jruby.ir.instructions.CopyInstr(	%v_18[12.0 ] ) 
		line_num(;n: 46)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_19 = search_const(scope<1> ;name: Rails, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_20 = call_0o(%v_19 ;n:logger, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_19[12.3 ] ) 
		%v_21 = copy("error e-mailing ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_22 = call_0o(%self ;n:recipient, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_23 = call_0o(%v_22 ;n:email, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_22[12.6 ] ) 
		%v_24 = copy(": ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_25 = build_compound_string(%v_21, #{%v_23}, %v_24, #{e})		--org.jruby.ir.instructions.BuildCompoundStringInstr(	%v_21[12.5 ] %v_23[12.7 ] %v_24[12.8 ] e[12.1 ] ) 
		%v_26 = call_1o(%v_20, %v_25 ;n:error, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_20[12.4 ] %v_25[12.9 ] ) 
		%v_11 = copy(%v_26)		--org.jruby.ir.instructions.CopyInstr(	%v_26[12.10 ] ) 
		put_global_var($!, %v_9)		--org.jruby.ir.instructions.PutGlobalVarInstr(	%v_9[6.1 ] ) 
PRINT info for BB 13:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:15, 
	Instructions:
		jump(LBL_6:67)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 14:
	Vars Live on Entry: 
	Vars Live on Exit:  10		
	outgoing edges:21, 
	Instructions:
		%v_27 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%v_28 = runtime_helper(%v_27, %v_9 ;method: RESTORE_EXCEPTION_VAR)		--org.jruby.ir.instructions.RuntimeHelperCall(	%v_27[14.0 ] %v_9[6.1 ] ) 
		throw(%v_27)		--org.jruby.ir.instructions.ThrowExceptionInstr(	%v_27[14.0 ] ) 
PRINT info for BB 15:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:17, 
	Instructions:
		jump(LBL_3:71)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 16:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:17, 
	Instructions:
		%v_11 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 17:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:18, 19, 
	Instructions:
		line_num(;n: 50)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_29 = call_0o(%self ;n:recipient, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_30 = call_0o(%v_29 ;n:pushover_messages?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_29[17.1 ] ) 
		b_false(LBL_14:101, %v_30)		--org.jruby.ir.instructions.BFalseInstr(	%v_30[17.2 ] ) 
PRINT info for BB 18:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:21, 
	Instructions:
		line_num(;n: 51)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_31 = call_0o(%self ;n:recipient, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		line_num(;n: 52)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_32 = search_const(scope<1> ;name: Rails, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_33 = call_0o(%v_32 ;n:application, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_32[18.3 ] ) 
		%v_34 = call_0o(%v_33 ;n:name, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_33[18.4 ] ) 
		%v_35 = copy(" message from ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_36 = build_compound_string(#{%v_34}, %v_35)		--org.jruby.ir.instructions.BuildCompoundStringInstr(	%v_34[18.5 ] %v_35[18.6 ] ) 
		line_num(;n: 53)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_37 = call_0o(%self ;n:author, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[18.1 2.0 ] ) 
		%v_38 = call_0o(%v_37 ;n:username, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_37[18.9 ] ) 
		%v_39 = copy(": ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_40 = call_0o(%self ;n:subject, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[18.1 18.9 2.0 ] ) 
		%v_41 = build_compound_string(#{%v_38}, %v_39, #{%v_40})		--org.jruby.ir.instructions.BuildCompoundStringInstr(	%v_38[18.10 ] %v_39[18.11 ] %v_40[18.12 ] ) 
		%v_42 = call_1o(%v_36, %v_41 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_36[18.7 ] %v_41[18.13 ] ) 
		%v_43 = call_0o(%self ;n:plaintext_body, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[18.1 18.9 18.12 2.0 ] ) 
		%v_44 = call_0o(%self ;n:url, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[18.1 18.9 18.12 18.15 2.0 ] ) 
		%v_45 = copy("Reply to ")		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 56)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_46 = call_0o(%self ;n:author, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[18.1 18.9 18.12 18.15 18.16 2.0 ] ) 
		%v_47 = call_0o(%v_46 ;n:username, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_46[18.19 ] ) 
		%v_48 = build_compound_string(%v_45, #{%v_47})		--org.jruby.ir.instructions.BuildCompoundStringInstr(	%v_45[18.17 ] %v_47[18.20 ] ) 
		%v_49 = copy({:'title'=>%v_42, :'message'=>%v_43, :'url'=>%v_44, :'url_title'=>%v_48})		--org.jruby.ir.instructions.CopyInstr(	%v_42[18.14 ] %v_43[18.15 ] %v_44[18.16 ] %v_48[18.21 ] ) 
		%v_50 = call_1o(%v_31, %v_49 ;n:pushover!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_31[18.1 ] %v_49[18.22 ] ) 
		return(%v_50)		--org.jruby.ir.instructions.ReturnInstr(	%v_50[18.23 ] ) 
PRINT info for BB 19:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:21, 
	Instructions:
		return(nil)		--org.jruby.ir.instructions.ReturnInstr(	) 
PRINT info for BB 21:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = recipient_username=
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 4 9		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 1, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		username = recv_pre_reqd_arg()		--org.jruby.ir.instructions.ReceivePreReqdArgInstr(	) 
		line_num(;n: 62)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		attr_assign(%self, nil ;n:recipient_user_id=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	%self[2.0 ] ) #<%self>#	-- [PUT:%self].recipient_user_id 
		line_num(;n: 64)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = search_const(scope<1> ;name: User, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_4 = copy({:'username'=>username})		--org.jruby.ir.instructions.CopyInstr(	username[2.5 ] ) 
		%v_5 = call_1o(%v_3, %v_4 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_3[2.9 ] %v_4[2.10 ] ) 
		%v_6 = call_0o(%v_5 ;n:first, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_5[2.11 ] ) 
		u = copy(%v_6)		--org.jruby.ir.instructions.CopyInstr(	%v_6[2.12 ] ) 
		b_false(LBL_0:23, %v_6)		--org.jruby.ir.instructions.BFalseInstr(	%v_6[2.12 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0 4 9		
	outgoing edges:6, 
	Instructions:
		line_num(;n: 65)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_7 = call_0o(u ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	u[2.13 ] ) 
		attr_assign(%self, %v_7 ;n:recipient_user_id=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	%self[2.0 2.7 ] %v_7[3.1 ] ) #<%self>#	-- [PUT:%self].recipient_user_id 
		line_num(;n: 66)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		put_field(%self, username ;name: @recipient_username)		--org.jruby.ir.instructions.PutFieldInstr(	%self[3.2 2.0 2.7 ] username[2.5 ] ) #<%self>#	-- [PUT:%self].recipient_username 
		%v_8 = copy(username)		--org.jruby.ir.instructions.CopyInstr(	username[2.5 ] ) 
		return(username)		--org.jruby.ir.instructions.ReturnInstr(	username[2.5 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:6, 
	Instructions:
		line_num(;n: 68)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_9 = call_0o(%self ;n:errors, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 2.7 ] ) 
		%v_10 = copy("is not a valid user")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_11 = call(%v_9, :'recipient_username', %v_10 ;n:add, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%v_9[4.1 ] %v_10[4.2 ] ) 
		return(%v_11)		--org.jruby.ir.instructions.ReturnInstr(	%v_11[4.3 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = linkified_body
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:3, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 73)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = search_const(scope<1> ;name: Markdowner, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_4 = call_0o(%self ;n:body, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_5 = call_1o(%v_3, %v_4 ;n:to_html, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_3[2.6 ] %v_4[2.7 ] ) 
		return(%v_5)		--org.jruby.ir.instructions.ReturnInstr(	%v_5[2.8 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = plaintext_body
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:3, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 78)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:body, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_4 = call_0o(%v_3 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		return(%v_4)		--org.jruby.ir.instructions.ReturnInstr(	%v_4[2.7 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = url
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:3, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 82)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = search_const(scope<1> ;name: Rails, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_4 = call_0o(%v_3 ;n:application, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		%v_5 = call_0o(%v_4 ;n:root_url, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_4[2.7 ] ) 
		%v_6 = copy("messages/")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_7 = call_0o(%self ;n:short_id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_8 = build_compound_string(%v_6, #{%v_7})		--org.jruby.ir.instructions.BuildCompoundStringInstr(	%v_6[2.9 ] %v_7[2.10 ] ) 
		%v_9 = call_1o(%v_5, %v_8 ;n:+, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_5[2.8 ] %v_8[2.11 ] ) 
		return(%v_9)		--org.jruby.ir.instructions.ReturnInstr(	%v_9[2.12 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

