SET IRMethod, name = authenticate_user
PRINT info for BB 1:
	Vars Live on Entry:  13		
	Vars Live on Exit:  13		
	outgoing edges:10, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 5 13		
	Vars Live on Exit:  13		
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 10)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:session, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_4 = call_1o(%v_3, :'u' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		b_false(LBL_3:20, %v_4)		--org.jruby.ir.instructions.BFalseInstr(	%v_4[2.7 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 5 13		
	Vars Live on Exit:  0		
	outgoing edges:4, 
	Instructions:
		line_num(;n: 11)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_5 = search_const(scope<1> ;name: User, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_6 = call_0o(%self ;n:session, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_7 = call_1o(%v_6, :'u' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_6[3.2 ] ) 
		%v_8 = call_0o(%v_7 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_7[3.3 ] ) 
		%v_9 = copy({:'session_token'=>%v_8})		--org.jruby.ir.instructions.CopyInstr(	%v_8[3.4 ] ) 
		%v_10 = call_1o(%v_5, %v_9 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_5[3.1 ] %v_9[3.5 ] ) 
		%v_11 = call_0o(%v_10 ;n:first, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_10[3.6 ] ) 
		user = copy(%v_11)		--org.jruby.ir.instructions.CopyInstr(	%v_11[3.7 ] ) 
		%v_4 = copy(%v_11)		--org.jruby.ir.instructions.CopyInstr(	%v_11[3.7 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0 5 13		
	Vars Live on Exit:  0 5 13		
	outgoing edges:5, 6, 
	Instructions:
		b_false(LBL_2:24, %v_4)		--org.jruby.ir.instructions.BFalseInstr(	%v_4[3.9 2.7 ] ) 
PRINT info for BB 5:
	Vars Live on Entry:  0 5 13		
	Vars Live on Exit:  0 13		
	outgoing edges:6, 
	Instructions:
		%v_12 = call_0o(user ;n:is_active?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	user[3.8 ] ) 
		%v_4 = copy(%v_12)		--org.jruby.ir.instructions.CopyInstr(	%v_12[5.0 ] ) 
PRINT info for BB 6:
	Vars Live on Entry:  0 13		
	Vars Live on Exit:  0 5 13		
	outgoing edges:7, 8, 
	Instructions:
		b_false(LBL_0:41, %v_4)		--org.jruby.ir.instructions.BFalseInstr(	%v_4[5.1 3.9 2.7 ] ) 
PRINT info for BB 7:
	Vars Live on Entry: 
	Vars Live on Exit:  0 13		
	outgoing edges:9, 
	Instructions:
		line_num(;n: 13)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		put_field(%self, user ;name: @user)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 ] user[3.8 ] ) #<%self>#	-- [PUT:%self].user 
		line_num(;n: 14)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_13 = search_const(scope<1> ;name: Rails, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_14 = call_0o(%v_13 ;n:logger, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_13[7.3 ] ) 
		%v_15 = copy("  Logged in as user ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_16 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[7.1 2.0 ] %self[7.1 2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_17 = call_0o(%v_16 ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_16[7.6 ] ) 
		%v_18 = copy(" (")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_19 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[7.1 2.0 ] %self[7.1 2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_20 = call_0o(%v_19 ;n:username, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_19[7.9 ] ) 
		%v_21 = copy(")")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_22 = build_compound_string(%v_15, #{%v_17}, %v_18, #{%v_20}, %v_21)		--org.jruby.ir.instructions.BuildCompoundStringInstr(	%v_15[7.5 ] %v_17[7.7 ] %v_18[7.8 ] %v_20[7.10 ] %v_21[7.11 ] ) 
		%v_23 = call_1o(%v_14, %v_22 ;n:info, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_14[7.4 ] %v_22[7.12 ] ) 
		jump(LBL_1:43)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 8:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:9, 
	Instructions:
		%v_23 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 9:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:10, 
	Instructions:
		line_num(;n: 18)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		return(true)		--org.jruby.ir.instructions.ReturnInstr(	) 
PRINT info for BB 10:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = increase_traffic_counter
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:8, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 4		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 22)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		put_field(%self, Float:1.0 ;name: @traffic)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 ] ) #<%self>#	-- [PUT:%self].traffic 
		line_num(;n: 24)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:user_is_spider?, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 2.6 ] ) 
		b_true(LBL_2:18, %v_3)		--org.jruby.ir.instructions.BTrueInstr(	%v_3[2.8 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 4		
	Vars Live on Exit:  0		
	outgoing edges:4, 
	Instructions:
		%v_4 = copy("json")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_5 = copy("rss")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_6 = copy(Array:[%v_4, %v_5])		--org.jruby.ir.instructions.CopyInstr(	%v_4[3.0 ] %v_5[3.1 ] ) 
		%v_7 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 2.6 ] ) 
		%v_8 = call_1o(%v_7, :'format' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_7[3.3 ] ) 
		%v_9 = call_1o(%v_6, %v_8 ;n:include?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_6[3.2 ] %v_8[3.4 ] ) 
		%v_3 = copy(%v_9)		--org.jruby.ir.instructions.CopyInstr(	%v_9[3.5 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0 4		
	outgoing edges:5, 6, 
	Instructions:
		b_false(LBL_0:22, %v_3)		--org.jruby.ir.instructions.BFalseInstr(	%v_3[3.6 2.8 ] ) 
PRINT info for BB 5:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:8, 
	Instructions:
		line_num(;n: 25)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		return(true)		--org.jruby.ir.instructions.ReturnInstr(	) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:8, 
	Instructions:
		%v_10 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 28)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_11 = search_const(scope<1> ;name: Keystore, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_12 = call(%v_11, %self:CLOSURE increase_traffic_counter_CLOSURE_1[./lobsters/merged_controllers/application_controller.rb:28] ;n:transaction, t:NO, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.CallInstr(	%v_11[6.2 ] %self[2.0 2.6 ] ) 
CLOSURE BEGIN: date_kv[] now_i[] traffic[] %self[2.0,2.6,] traffic_kv[] 
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0		
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_1_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:4, 6, 
	Instructions:
		line_num(;n: 29)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_3 = search_const(scope<2> ;name: Time, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%cl_1_4 = call_0o(%cl_1_3 ;n:now, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_3[3.1 ] ) 
		%cl_1_5 = call_0o(%cl_1_4 ;n:to_i, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_4[3.2 ] ) 
		now_i = copy(%cl_1_5)		--org.jruby.ir.instructions.CopyInstr(	%cl_1_5[3.3 ] ) 
		line_num(;n: 30)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_6 = search_const(scope<2> ;name: Keystore, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%cl_1_7 = copy("traffic:date")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_8 = call(%cl_1_6, %cl_1_7, %cl_1_5 ;n:find_or_create_key_for_update, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%cl_1_6[3.6 ] %cl_1_7[3.7 ] %cl_1_5[3.3 ] ) 
		date_kv = copy(%cl_1_8)		--org.jruby.ir.instructions.CopyInstr(	%cl_1_8[3.8 ] ) 
		line_num(;n: 31)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_9 = search_const(scope<2> ;name: Keystore, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%cl_1_10 = copy("traffic:hits")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_11 = call(%cl_1_9, %cl_1_10, Fixnum:0 ;n:find_or_create_key_for_update, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%cl_1_9[3.11 ] %cl_1_10[3.12 ] ) 
		traffic_kv = copy(%cl_1_11)		--org.jruby.ir.instructions.CopyInstr(	%cl_1_11[3.13 ] ) 
		line_num(;n: 34)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_12 = call_0o(%cl_1_11 ;n:value, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_11[3.13 ] ) 
		%cl_1_13 = call_0o(%cl_1_12 ;n:to_i, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_12[3.16 ] ) 
		%cl_1_14 = call_1f(%cl_1_13, Fixnum:100 ;n:+, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%cl_1_13[3.17 ] ) 
		traffic = copy(%cl_1_14)		--org.jruby.ir.instructions.CopyInstr(	%cl_1_14[3.18 ] ) 
		line_num(;n: 36)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_15 = call_0o(date_kv ;n:value, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	date_kv[3.9 ] ) 
		%cl_1_16 = call_1o(now_i, %cl_1_15 ;n:-, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	now_i[3.4 ] %cl_1_15[3.21 ] ) 
		%cl_1_17 = call_1o(Float:100.0, %cl_1_16 ;n:*, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_1_16[3.22 ] ) 
		%cl_1_18 = search_const(scope<2> ;name: TRAFFIC_DECREMENTER, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%cl_1_19 = call_1o(%cl_1_17, %cl_1_18 ;n:*, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_1_17[3.23 ] %cl_1_18[3.24 ] ) 
		%cl_1_20 = call_0o(%cl_1_19 ;n:to_i, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_19[3.25 ] ) 
		%cl_1_21 = call_1o(traffic, %cl_1_20 ;n:-, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	traffic[3.19 ] %cl_1_20[3.26 ] ) 
		traffic = copy(%cl_1_21)		--org.jruby.ir.instructions.CopyInstr(	%cl_1_21[3.27 ] ) 
		line_num(;n: 38)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_22 = copy(Array:[Fixnum:100, %cl_1_21])		--org.jruby.ir.instructions.CopyInstr(	%cl_1_21[3.27 ] ) 
		%cl_1_23 = call_0o(%cl_1_22 ;n:max, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_22[3.30 ] ) 
		%cl_1_24 = copy(Array:[%cl_1_23, Fixnum:10000])		--org.jruby.ir.instructions.CopyInstr(	%cl_1_23[3.31 ] ) 
		%cl_1_25 = call_0o(%cl_1_24 ;n:min, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_24[3.32 ] ) 
		traffic = copy(%cl_1_25)		--org.jruby.ir.instructions.CopyInstr(	%cl_1_25[3.33 ] ) 
		line_num(;n: 40)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_26 = call_1d(%cl_1_25, Float:0.01 ;n:*, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFloatArgNoBlockCallInstr(	%cl_1_25[3.33 ] ) 
		put_field(%self, %cl_1_26 ;name: @traffic)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 ] %cl_1_26[3.36 ] ) #<%self>#	-- [PUT:%self].traffic 
		line_num(;n: 42)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		attr_assign(traffic_kv, traffic ;n:value=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	traffic_kv[3.14 ] traffic[3.19 3.28 3.34 ] ) #<traffic_kv>#	-- [PUT:traffic_kv].value 
		line_num(;n: 43)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_27 = call_0o(traffic_kv ;n:save!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	traffic_kv[3.14 3.39 ] ) 
		line_num(;n: 45)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		attr_assign(date_kv, now_i ;n:value=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	date_kv[3.9 3.21 ] now_i[3.4 ] ) #<date_kv>#	-- [PUT:date_kv].value 
		line_num(;n: 46)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_28 = call_0o(date_kv ;n:save!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	date_kv[3.9 3.21 3.43 ] ) 
		line_num(;n: 48)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_29 = search_const(scope<2> ;name: Rails, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%cl_1_30 = call_0o(%cl_1_29 ;n:logger, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_29[3.47 ] ) 
		%cl_1_31 = copy("  Traffic level: ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_32 = get_field(%self ;name: @traffic)		--org.jruby.ir.instructions.GetFieldInstr(	%self[3.37 2.0 ] %self[3.37 2.0 ] ) #<%self>#	-- [GET:%self].traffic 
		%cl_1_33 = copy(" (")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_34 = copy(")")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_35 = build_compound_string(%cl_1_31, #{%cl_1_32}, %cl_1_33, #{traffic}, %cl_1_34)		--org.jruby.ir.instructions.BuildCompoundStringInstr(	%cl_1_31[3.49 ] %cl_1_32[3.50 ] %cl_1_33[3.51 ] traffic[3.19 3.28 3.34 ] %cl_1_34[3.52 ] ) 
		%cl_1_36 = call_1o(%cl_1_30, %cl_1_35 ;n:info, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_1_30[3.48 ] %cl_1_35[3.53 ] ) 
		return(%cl_1_36)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_36[3.54 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 
	Instructions:
		%cl_1_37 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_1_38 = runtime_helper(%cl_1_37 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_1_37[4.0 ] ) 
		return(%cl_1_38)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_38[4.1 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:
CLOSURE END
		line_num(;n: 52)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		return(true)		--org.jruby.ir.instructions.ReturnInstr(	) 
PRINT info for BB 8:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = require_logged_in_user
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:9, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 56)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		line_num(;n: 57)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		b_false(LBL_0:13, %v_3)		--org.jruby.ir.instructions.BFalseInstr(	%v_3[2.7 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:9, 
	Instructions:
		line_num(;n: 58)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_4 = copy(true)		--org.jruby.ir.instructions.CopyInstr(	) 
		return(true)		--org.jruby.ir.instructions.ReturnInstr(	) 
PRINT info for BB 4:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:5, 6, 
	Instructions:
		line_num(;n: 59)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_5 = call_0o(%self ;n:request, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_6 = call_0o(%v_5 ;n:get?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_5[4.1 ] ) 
		b_false(LBL_2:24, %v_6)		--org.jruby.ir.instructions.BFalseInstr(	%v_6[4.2 ] ) 
PRINT info for BB 5:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:7, 
	Instructions:
		line_num(;n: 60)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_7 = call_0o(%self ;n:session, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_8 = call_0o(%self ;n:request, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[5.1 2.0 ] ) 
		%v_9 = call_0o(%v_8 ;n:original_fullpath, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_8[5.2 ] ) 
		attr_assign(%v_7, :'redirect_to', %v_9 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_7[5.1 ] %v_9[5.3 ] ) #<%v_7>#	-- [PUT:%v_7].[] 
		jump(LBL_3:26)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 6:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:7, 
	Instructions:
		%v_9 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 7:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:9, 
	Instructions:
		line_num(;n: 63)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_10 = copy("/login")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_11 = call_1o(%self, %v_10 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_10[7.1 ] ) 
		return(%v_11)		--org.jruby.ir.instructions.ReturnInstr(	%v_11[7.2 ] ) 
PRINT info for BB 9:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = require_logged_in_moderator
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:9, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0		
	Vars Live on Exit: 
	outgoing edges:3, 7, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 69)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:require_logged_in_user, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		line_num(;n: 71)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		line_num(;n: 72)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_4 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 2.6 ] %self[2.0 2.6 ] ) #<%self>#	-- [GET:%self].user 
		b_false(LBL_0:29, %v_4)		--org.jruby.ir.instructions.BFalseInstr(	%v_4[2.9 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:4, 5, 
	Instructions:
		%v_5 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_6 = call_0o(%v_5 ;n:is_moderator?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_5[3.0 ] ) 
		b_false(LBL_2:18, %v_6)		--org.jruby.ir.instructions.BFalseInstr(	%v_6[3.1 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  8		
	Vars Live on Exit: 
	outgoing edges:8, 
	Instructions:
		line_num(;n: 74)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_7 = copy(true)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(LBL_1:31)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 5:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:9, 
	Instructions:
		line_num(;n: 75)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_8 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_9 = copy("You are not authorized to access that resource.")		--org.jruby.ir.instructions.CopyInstr(	) 
		attr_assign(%v_8, :'error', %v_9 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_8[5.1 ] %v_9[5.2 ] ) #<%v_8>#	-- [PUT:%v_8].[] 
		line_num(;n: 76)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_10 = copy("/")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_11 = call_1o(%self, %v_10 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[5.1 2.0 ] %v_10[5.5 ] ) 
		return(%v_11)		--org.jruby.ir.instructions.ReturnInstr(	%v_11[5.6 ] ) 
PRINT info for BB 7:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:9, 
	Instructions:
		return(nil)		--org.jruby.ir.instructions.ReturnInstr(	) 
PRINT info for BB 8:
	Vars Live on Entry: 
	Vars Live on Exit:  8		
	outgoing edges:9, 
	Instructions:
		return(%v_7)		--org.jruby.ir.instructions.ReturnInstr(	%v_7[4.1 ] ) 
PRINT info for BB 9:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = require_logged_in_user_or_400
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 83)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		line_num(;n: 84)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		b_false(LBL_0:13, %v_3)		--org.jruby.ir.instructions.BFalseInstr(	%v_3[2.7 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 
	Instructions:
		line_num(;n: 85)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_4 = copy(true)		--org.jruby.ir.instructions.CopyInstr(	) 
		return(true)		--org.jruby.ir.instructions.ReturnInstr(	) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:6, 
	Instructions:
		line_num(;n: 86)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_5 = copy("not logged in")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_6 = copy({:'text'=>%v_5, :'status'=>Fixnum:400})		--org.jruby.ir.instructions.CopyInstr(	%v_5[4.1 ] ) 
		%v_7 = call_1o(%self, %v_6 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_6[4.2 ] ) 
		line_num(;n: 87)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		return(false)		--org.jruby.ir.instructions.ReturnInstr(	) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = tags_filtered_by_cookie
PRINT info for BB 1:
	Vars Live on Entry:  6		
	Vars Live on Exit:  6		
	outgoing edges:7, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 5 6		
	Vars Live on Exit:  6		
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 94)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_4 = runtime_helper(%self, "@_tags_filtered" ;method: IS_DEFINED_INSTANCE_VAR)		--org.jruby.ir.instructions.RuntimeHelperCall(	%self[2.0 ] ) 
		%v_3 = copy(%v_4)		--org.jruby.ir.instructions.CopyInstr(	%v_4[2.6 ] ) 
		b_nil(LBL_1:12, %v_4)		--org.jruby.ir.instructions.BNilInstr(	%v_4[2.6 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 5 6		
	Vars Live on Exit:  0		
	outgoing edges:4, 
	Instructions:
		%v_5 = get_field(%self ;name: @_tags_filtered)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self]._tags_filtered 
		%v_3 = copy(%v_5)		--org.jruby.ir.instructions.CopyInstr(	%v_5[3.0 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0 6		
	Vars Live on Exit:  0 5 6		
	outgoing edges:5, 6, 
	Instructions:
		b_true(LBL_0:25, %v_3)		--org.jruby.ir.instructions.BTrueInstr(	%v_3[3.1 2.7 ] ) 
PRINT info for BB 5:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:7, 
	Instructions:
		%v_6 = search_const(scope<1> ;name: Tag, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_7 = call_0o(%self ;n:cookies, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_8 = search_const(scope<1> ;name: TAG_FILTER_COOKIE, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_9 = call_1o(%v_7, %v_8 ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_7[5.1 ] %v_8[5.2 ] ) 
		%v_10 = call_0o(%v_9 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_9[5.3 ] ) 
		%v_11 = copy(",")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_12 = call_1o(%v_10, %v_11 ;n:split, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_10[5.4 ] %v_11[5.5 ] ) 
		%v_13 = copy({:'tag'=>%v_12})		--org.jruby.ir.instructions.CopyInstr(	%v_12[5.6 ] ) 
		%v_14 = call_1o(%v_6, %v_13 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_6[5.0 ] %v_13[5.7 ] ) 
		put_field(%self, %v_14 ;name: @_tags_filtered)		--org.jruby.ir.instructions.PutFieldInstr(	%self[5.1 2.0 ] %v_14[5.8 ] ) #<%self>#	-- [PUT:%self]._tags_filtered 
		return(%v_14)		--org.jruby.ir.instructions.ReturnInstr(	%v_14[5.8 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit:  6		
	outgoing edges:7, 
	Instructions:
		return(%v_5)		--org.jruby.ir.instructions.ReturnInstr(	%v_5[3.0 ] ) 
PRINT info for BB 7:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = user_is_spider?
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:5, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  9 11		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 101)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:request, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_4 = call_0o(%v_3 ;n:env, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		%v_5 = copy("HTTP_USER_AGENT")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_6 = call_1o(%v_4, %v_5 ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_4[2.7 ] %v_5[2.8 ] ) 
		%v_7 = call_0o(%v_6 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_6[2.9 ] ) 
		ua = copy(%v_7)		--org.jruby.ir.instructions.CopyInstr(	%v_7[2.10 ] ) 
		line_num(;n: 102)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_8 = copy("")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_9 = call_1o(%v_7, %v_8 ;n:==, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_7[2.10 ] %v_8[2.13 ] ) 
		b_true(LBL_0:20, %v_9)		--org.jruby.ir.instructions.BTrueInstr(	%v_9[2.14 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  9		
	outgoing edges:5, 
	Instructions:
		%v_10 = copy(RE:|(Google|bing)bot|RegexpOptions(kcode: NONE, kcodeDefault))		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_11 = call_1o(ua, RE:|(Google|bing)bot|RegexpOptions(kcode: NONE, kcodeDefault) ;n:match, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	ua[2.11 ] ) 
		return(%v_11)		--org.jruby.ir.instructions.ReturnInstr(	%v_11[3.1 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit:  11		
	outgoing edges:5, 
	Instructions:
		return(%v_9)		--org.jruby.ir.instructions.ReturnInstr(	%v_9[2.14 ] ) 
PRINT info for BB 5:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = find_user_from_rss_token
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:10, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 5		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 107)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_4 = call_0o(%v_3 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		b_false(LBL_3:15, %v_4)		--org.jruby.ir.instructions.BFalseInstr(	%v_4[2.7 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 5		
	Vars Live on Exit:  0		
	outgoing edges:4, 
	Instructions:
		%v_5 = call_0o(%self ;n:request, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_6 = call_1o(%v_5, :'format' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_5[3.0 ] ) 
		%v_7 = copy("rss")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_8 = call_1o(%v_6, %v_7 ;n:==, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_6[3.1 ] %v_7[3.2 ] ) 
		%v_4 = copy(%v_8)		--org.jruby.ir.instructions.CopyInstr(	%v_8[3.3 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0 5		
	Vars Live on Exit:  0 5		
	outgoing edges:5, 6, 
	Instructions:
		b_false(LBL_2:22, %v_4)		--org.jruby.ir.instructions.BFalseInstr(	%v_4[3.4 2.7 ] ) 
PRINT info for BB 5:
	Vars Live on Entry:  0 5		
	Vars Live on Exit:  0		
	outgoing edges:6, 
	Instructions:
		%v_9 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_10 = call_1o(%v_9, :'token' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_9[5.0 ] ) 
		%v_11 = call_0o(%v_10 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_10[5.1 ] ) 
		%v_12 = call_0o(%v_11 ;n:present?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_11[5.2 ] ) 
		%v_4 = copy(%v_12)		--org.jruby.ir.instructions.CopyInstr(	%v_12[5.3 ] ) 
PRINT info for BB 6:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0 5		
	outgoing edges:7, 8, 
	Instructions:
		b_false(LBL_0:34, %v_4)		--org.jruby.ir.instructions.BFalseInstr(	%v_4[5.4 3.4 2.7 ] ) 
PRINT info for BB 7:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:10, 
	Instructions:
		line_num(;n: 108)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_13 = search_const(scope<1> ;name: User, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_14 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_15 = call_1o(%v_14, :'token' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_14[7.2 ] ) 
		%v_16 = call_0o(%v_15 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_15[7.3 ] ) 
		%v_17 = copy({:'rss_token'=>%v_16})		--org.jruby.ir.instructions.CopyInstr(	%v_16[7.4 ] ) 
		%v_18 = call_1o(%v_13, %v_17 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_13[7.1 ] %v_17[7.5 ] ) 
		%v_19 = call_0o(%v_18 ;n:first, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_18[7.6 ] ) 
		put_field(%self, %v_19 ;name: @user)		--org.jruby.ir.instructions.PutFieldInstr(	%self[7.2 2.0 ] %v_19[7.7 ] ) #<%self>#	-- [PUT:%self].user 
		return(%v_19)		--org.jruby.ir.instructions.ReturnInstr(	%v_19[7.7 ] ) 
PRINT info for BB 8:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:10, 
	Instructions:
		return(nil)		--org.jruby.ir.instructions.ReturnInstr(	) 
PRINT info for BB 10:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

