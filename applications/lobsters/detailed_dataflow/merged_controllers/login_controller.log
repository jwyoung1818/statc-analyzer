SET IRMethod, name = logout
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 4)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		line_num(;n: 5)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		b_false(LBL_0:12, %v_3)		--org.jruby.ir.instructions.BFalseInstr(	%v_3[2.7 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:5, 
	Instructions:
		%v_4 = call_0o(%self ;n:reset_session, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		jump(LBL_1:14)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 4:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:5, 
	Instructions:
		%v_4 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 5:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:6, 
	Instructions:
		line_num(;n: 8)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_5 = copy("/")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_6 = call_1o(%self, %v_5 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_5[5.1 ] ) 
		return(%v_6)		--org.jruby.ir.instructions.ReturnInstr(	%v_6[5.2 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = index
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:7, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 6		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 13)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = copy("Login")		--org.jruby.ir.instructions.CopyInstr(	) 
		put_field(%self, %v_3 ;name: @title)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 ] %v_3[2.6 ] ) #<%self>#	-- [PUT:%self].title 
		line_num(;n: 14)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_5 = runtime_helper(%self, "@referer" ;method: IS_DEFINED_INSTANCE_VAR)		--org.jruby.ir.instructions.RuntimeHelperCall(	%self[2.0 2.7 ] ) 
		%v_4 = copy(%v_5)		--org.jruby.ir.instructions.CopyInstr(	%v_5[2.9 ] ) 
		b_nil(LBL_1:15, %v_5)		--org.jruby.ir.instructions.BNilInstr(	%v_5[2.9 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 6		
	Vars Live on Exit:  0		
	outgoing edges:4, 
	Instructions:
		%v_6 = get_field(%self ;name: @referer)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 2.7 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].referer 
		%v_4 = copy(%v_6)		--org.jruby.ir.instructions.CopyInstr(	%v_6[3.0 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0 6		
	outgoing edges:5, 6, 
	Instructions:
		b_true(LBL_0:21, %v_4)		--org.jruby.ir.instructions.BTrueInstr(	%v_4[3.1 2.10 ] ) 
PRINT info for BB 5:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:6, 
	Instructions:
		%v_7 = call_0o(%self ;n:request, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 2.7 ] ) 
		%v_8 = call_0o(%v_7 ;n:referer, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_7[5.0 ] ) 
		put_field(%self, %v_8 ;name: @referer)		--org.jruby.ir.instructions.PutFieldInstr(	%self[5.0 2.0 2.7 ] %v_8[5.1 ] ) #<%self>#	-- [PUT:%self].referer 
		%v_6 = copy(%v_8)		--org.jruby.ir.instructions.CopyInstr(	%v_8[5.1 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:7, 
	Instructions:
		line_num(;n: 15)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_9 = copy("index")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_10 = copy({:'action'=>%v_9})		--org.jruby.ir.instructions.CopyInstr(	%v_9[6.1 ] ) 
		%v_11 = call_1o(%self, %v_10 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[5.2 2.0 2.7 ] %v_10[6.2 ] ) 
		return(%v_11)		--org.jruby.ir.instructions.ReturnInstr(	%v_11[6.3 ] ) 
PRINT info for BB 7:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = login
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:55, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 19)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_4 = call_1o(%v_3, :'email' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		%v_5 = call_0o(%v_4 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_4[2.7 ] ) 
		%v_6 = copy(RE:|@|RegexpOptions(kcode: NONE, kcodeDefault))		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_7 = call_1o(%v_5, RE:|@|RegexpOptions(kcode: NONE, kcodeDefault) ;n:match, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_5[2.8 ] ) 
		b_false(LBL_0:22, %v_7)		--org.jruby.ir.instructions.BFalseInstr(	%v_7[2.10 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 15		
	Vars Live on Exit:  0		
	outgoing edges:5, 
	Instructions:
		line_num(;n: 20)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_8 = search_const(scope<1> ;name: User, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_9 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_10 = call_1o(%v_9, :'email' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_9[3.2 ] ) 
		%v_11 = copy({:'email'=>%v_10})		--org.jruby.ir.instructions.CopyInstr(	%v_10[3.3 ] ) 
		%v_12 = call_1o(%v_8, %v_11 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_8[3.1 ] %v_11[3.4 ] ) 
		%v_13 = call_0o(%v_12 ;n:first, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_12[3.5 ] ) 
		user = copy(%v_13)		--org.jruby.ir.instructions.CopyInstr(	%v_13[3.6 ] ) 
		jump(LBL_1:32)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 4:
	Vars Live on Entry:  0 15		
	Vars Live on Exit:  0		
	outgoing edges:5, 
	Instructions:
		line_num(;n: 22)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_14 = search_const(scope<1> ;name: User, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_15 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_16 = call_1o(%v_15, :'email' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_15[4.2 ] ) 
		%v_17 = copy({:'username'=>%v_16})		--org.jruby.ir.instructions.CopyInstr(	%v_16[4.3 ] ) 
		%v_18 = call_1o(%v_14, %v_17 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_14[4.1 ] %v_17[4.4 ] ) 
		%v_19 = call_0o(%v_18 ;n:first, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_18[4.5 ] ) 
		user = copy(%v_19)		--org.jruby.ir.instructions.CopyInstr(	%v_19[4.6 ] ) 
		%v_13 = copy(%v_19)		--org.jruby.ir.instructions.CopyInstr(	%v_19[4.6 ] ) 
PRINT info for BB 5:
	Vars Live on Entry:  0 15 22		
	Vars Live on Exit:  0 15		
	outgoing edges:7, 
	Instructions:
		line_num(;n: 25)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_20 = get_global_var($!)		--org.jruby.ir.instructions.GetGlobalVariableInstr(	) 
PRINT info for BB 7:
	Vars Live on Entry:  0 15 22		
	Vars Live on Exit:  0 15 22		
	outgoing edges:8, 9, 49, 
	Instructions:
		toggle_backtrace(;false)		--org.jruby.ir.instructions.ToggleBacktraceInstr(	) 
		line_num(;n: 26)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_23 = call_0o(user ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	user[4.7 3.7 ] ) 
		b_false(LBL_8:47, %v_23)		--org.jruby.ir.instructions.BFalseInstr(	%v_23[7.2 ] ) 
PRINT info for BB 8:
	Vars Live on Entry:  0 15 22		
	Vars Live on Exit:  0 15 22		
	outgoing edges:10, 49, 
	Instructions:
		line_num(;n: 27)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_24 = copy("no user")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_25 = call_1o(%self, %v_24 ;n:raise, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_24[8.1 ] ) 
		jump(LBL_9:49)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 9:
	Vars Live on Entry:  0 15 22		
	Vars Live on Exit:  0 15 22		
	outgoing edges:10, 
	Instructions:
		%v_25 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 10:
	Vars Live on Entry:  0 15 22		
	Vars Live on Exit:  0 15 22		
	outgoing edges:11, 12, 49, 
	Instructions:
		line_num(;n: 30)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_26 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_27 = call_1o(%v_26, :'password' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_26[10.1 ] ) 
		%v_28 = call_0o(%v_27 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_27[10.2 ] ) 
		%v_29 = call(user, :'authenticate', %v_28 ;n:try, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	user[4.7 3.7 ] %v_28[10.3 ] ) 
		%v_30 = call_0o(%v_29 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_29[10.4 ] ) 
		b_false(LBL_10:61, %v_30)		--org.jruby.ir.instructions.BFalseInstr(	%v_30[10.5 ] ) 
PRINT info for BB 11:
	Vars Live on Entry:  0 15 22		
	Vars Live on Exit:  0 15 22		
	outgoing edges:13, 49, 
	Instructions:
		line_num(;n: 31)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_31 = copy("authentication failed")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_32 = call_1o(%self, %v_31 ;n:raise, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_31[11.1 ] ) 
		jump(LBL_11:63)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 12:
	Vars Live on Entry:  0 15 22		
	Vars Live on Exit:  0 15 22		
	outgoing edges:13, 
	Instructions:
		%v_32 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 13:
	Vars Live on Entry:  0 15 22		
	Vars Live on Exit:  0 15 22		
	outgoing edges:14, 15, 49, 
	Instructions:
		line_num(;n: 34)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_33 = call_0o(user ;n:is_banned?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	user[4.7 3.7 ] ) 
		b_false(LBL_12:71, %v_33)		--org.jruby.ir.instructions.BFalseInstr(	%v_33[13.1 ] ) 
PRINT info for BB 14:
	Vars Live on Entry:  0 15 22		
	Vars Live on Exit:  0 15 22		
	outgoing edges:16, 49, 
	Instructions:
		line_num(;n: 35)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_34 = copy("user is banned")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_35 = call_1o(%self, %v_34 ;n:raise, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_34[14.1 ] ) 
		jump(LBL_13:73)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 15:
	Vars Live on Entry:  0 15 22		
	Vars Live on Exit:  0 15 22		
	outgoing edges:16, 
	Instructions:
		%v_35 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 16:
	Vars Live on Entry:  0 15 22		
	Vars Live on Exit:  0 15 22		
	outgoing edges:17, 18, 49, 
	Instructions:
		line_num(;n: 38)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_36 = call_0o(user ;n:is_active?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	user[4.7 3.7 ] ) 
		%v_37 = call_0o(%v_36 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_36[16.1 ] ) 
		b_false(LBL_14:87, %v_37)		--org.jruby.ir.instructions.BFalseInstr(	%v_37[16.2 ] ) 
PRINT info for BB 17:
	Vars Live on Entry:  0 15 22		
	Vars Live on Exit:  0 15 22		
	outgoing edges:19, 49, 
	Instructions:
		line_num(;n: 39)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_38 = call_0o(user ;n:undelete!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	user[4.7 3.7 ] ) 
		line_num(;n: 40)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_39 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_40 = copy("Your account has been reactivated and your ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_41 = copy("unmoderated comments have been undeleted.")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_42 = call_1o(%v_40, %v_41 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_40[17.4 ] %v_41[17.5 ] ) 
		attr_assign(%v_39, :'success', %v_42 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_39[17.3 ] %v_42[17.6 ] ) #<%v_39>#	-- [PUT:%v_39].[] 
		jump(LBL_15:89)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 18:
	Vars Live on Entry:  0 15 22		
	Vars Live on Exit:  0 15 22		
	outgoing edges:19, 
	Instructions:
		%v_42 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 19:
	Vars Live on Entry:  0 15 22 46 47 48 49 50		
	Vars Live on Exit:  0 15 22		
	outgoing edges:20, 21, 49, 
	Instructions:
		line_num(;n: 44)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_43 = call_0o(%self ;n:session, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_44 = call_0o(user ;n:session_token, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	user[4.7 3.7 ] ) 
		attr_assign(%v_43, :'u', %v_44 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_43[19.1 ] %v_44[19.2 ] ) #<%v_43>#	-- [PUT:%v_43].[] 
		line_num(;n: 46)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_45 = call_0o(user ;n:password_digest, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	user[19.2 4.7 3.7 ] ) 
		%v_46 = call_0o(%v_45 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_45[19.5 ] ) 
		%v_47 = copy("")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_48 = copy("^\$2a\$")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_49 = search_const(scope<1> ;name: BCrypt, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_50 = inheritance_search_const(%v_49 ;name: Engine, no_priv: true)		--org.jruby.ir.instructions.InheritanceSearchConstInstr(	%v_49[19.9 ] ) 
		bne(LBL_18:103, %v_50, %undefined)		--org.jruby.ir.instructions.BNEInstr(	%v_50[19.10 ] ) 
PRINT info for BB 20:
	Vars Live on Entry:  0 15 22 46 47 48 50		
	Vars Live on Exit:  0 15 22 46 47 48 49		
	outgoing edges:21, 49, 
	Instructions:
		%v_50 = const_missing(%v_49, :'Engine' ;n:const_missing, t:FU, cl:false, missing: Engine)		--org.jruby.ir.instructions.ConstMissingInstr(	%v_49[19.9 ] ) 
PRINT info for BB 21:
	Vars Live on Entry:  0 15 22 46 47 48 50 51		
	Vars Live on Exit:  0 15 22 46 47 48 50		
	outgoing edges:22, 23, 49, 
	Instructions:
		%v_51 = inheritance_search_const(%v_50 ;name: DEFAULT_COST, no_priv: true)		--org.jruby.ir.instructions.InheritanceSearchConstInstr(	%v_50[20.0 19.10 ] ) 
		bne(LBL_19:107, %v_51, %undefined)		--org.jruby.ir.instructions.BNEInstr(	%v_51[21.0 ] ) 
PRINT info for BB 22:
	Vars Live on Entry:  0 15 22 46 47 48 51		
	Vars Live on Exit:  0 15 22 46 47 48 50		
	outgoing edges:23, 49, 
	Instructions:
		%v_51 = const_missing(%v_50, :'DEFAULT_COST' ;n:const_missing, t:FU, cl:false, missing: DEFAULT_COST)		--org.jruby.ir.instructions.ConstMissingInstr(	%v_50[20.0 19.10 ] ) 
PRINT info for BB 23:
	Vars Live on Entry:  0 15 22		
	Vars Live on Exit:  0 15 22 46 47 48 51		
	outgoing edges:24, 25, 49, 
	Instructions:
		%v_52 = copy("\$")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_53 = build_dregexp(%v_47, %v_48, #{%v_51}, %v_52 ;options: RegexpOptions(kcode: NONE, kcodeDefault))		--org.jruby.ir.instructions.BuildDynRegExpInstr(	%v_47[19.7 ] %v_48[19.8 ] %v_51[22.0 21.0 ] %v_52[23.0 ] ) 
		%v_54 = call_1o(%v_46, %v_53 ;n:match, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_46[19.6 ] %v_53[23.1 ] ) 
		%v_55 = call_0o(%v_54 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_54[23.2 ] ) 
		b_false(LBL_16:122, %v_55)		--org.jruby.ir.instructions.BFalseInstr(	%v_55[23.3 ] ) 
PRINT info for BB 24:
	Vars Live on Entry:  0 22		
	Vars Live on Exit:  0 15 22		
	outgoing edges:26, 49, 
	Instructions:
		line_num(;n: 47)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_56 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_57 = call_1o(%v_56, :'password' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_56[24.1 ] ) 
		%v_58 = call_0o(%v_57 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_57[24.2 ] ) 
		attr_assign(user, %v_58 ;n:password_confirmation=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	user[4.7 3.7 ] %v_58[24.3 ] ) #<user>#	-- [PUT:user].password_confirmation 
		attr_assign(user, %v_58 ;n:password=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	user[24.4 4.7 3.7 ] %v_58[24.3 ] ) #<user>#	-- [PUT:user].password 
		line_num(;n: 48)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_59 = call_0o(user ;n:save!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	user[24.4 24.5 4.7 3.7 ] ) 
		jump(LBL_17:124)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 25:
	Vars Live on Entry:  0 22		
	Vars Live on Exit:  0 22		
	outgoing edges:26, 
	Instructions:
		%v_59 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 26:
	Vars Live on Entry:  0 22 62		
	Vars Live on Exit:  0 22		
	outgoing edges:27, 29, 49, 
	Instructions:
		line_num(;n: 51)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_60 = call_0o(%self ;n:session, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_61 = call_1o(%v_60, :'redirect_to' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_60[26.1 ] ) 
		rd = copy(%v_61)		--org.jruby.ir.instructions.CopyInstr(	%v_61[26.2 ] ) 
		%v_62 = copy(%v_61)		--org.jruby.ir.instructions.CopyInstr(	%v_61[26.2 ] ) 
		%v_63 = call_0o(%v_61 ;n:present?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_61[26.2 ] ) 
		b_false(LBL_20:144, %v_63)		--org.jruby.ir.instructions.BFalseInstr(	%v_63[26.5 ] ) 
PRINT info for BB 27:
	Vars Live on Entry:  0 22 68		
	Vars Live on Exit:  0 22 62		
	outgoing edges:28, 49, 
	Instructions:
		line_num(;n: 52)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_64 = call_0o(%self ;n:session, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_65 = call_1o(%v_64, :'redirect_to' ;n:delete, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_64[27.1 ] ) 
		line_num(;n: 53)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_66 = call_1o(%self, rd ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[27.1 2.0 ] rd[26.3 ] ) 
		%v_67 = copy(%v_66)		--org.jruby.ir.instructions.CopyInstr(	%v_66[27.4 ] ) 
		toggle_backtrace(;true)		--org.jruby.ir.instructions.ToggleBacktraceInstr(	) 
		put_global_var($!, %v_20)		--org.jruby.ir.instructions.PutGlobalVarInstr(	%v_20[5.1 ] ) 
PRINT info for BB 28:
	Vars Live on Entry: 
	Vars Live on Exit:  68		
	outgoing edges:55, 
	Instructions:
		return(%v_67)		--org.jruby.ir.instructions.ReturnInstr(	%v_67[27.5 ] ) 
PRINT info for BB 29:
	Vars Live on Entry:  0 22		
	Vars Live on Exit:  0 22		
	outgoing edges:30, 45, 49, 
	Instructions:
		line_num(;n: 54)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_69 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_70 = call_1o(%v_69, :'referer' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_69[29.1 ] ) 
		%v_71 = call_0o(%v_70 ;n:present?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_70[29.2 ] ) 
		b_false(LBL_23:222, %v_71)		--org.jruby.ir.instructions.BFalseInstr(	%v_71[29.3 ] ) 
PRINT info for BB 30:
	Vars Live on Entry:  0 22 72		
	Vars Live on Exit:  0 22		
	outgoing edges:32, 
	Instructions:
		line_num(;n: 55)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_72 = get_global_var($!)		--org.jruby.ir.instructions.GetGlobalVariableInstr(	) 
PRINT info for BB 32:
	Vars Live on Entry:  0 22 72 77		
	Vars Live on Exit:  0 22 72		
	outgoing edges:33, 36, 39, 
	Instructions:
		toggle_backtrace(;true)		--org.jruby.ir.instructions.ToggleBacktraceInstr(	) 
		line_num(;n: 56)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_75 = search_const(scope<1> ;name: URI, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_76 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_77 = call_1o(%v_76, :'referer' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_76[32.3 ] ) 
		%v_78 = call_1o(%v_75, %v_77 ;n:parse, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_75[32.2 ] %v_77[32.4 ] ) 
		ru = copy(%v_78)		--org.jruby.ir.instructions.CopyInstr(	%v_78[32.5 ] ) 
		line_num(;n: 57)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_79 = call_0o(%v_78 ;n:host, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_78[32.5 ] ) 
		%v_80 = search_const(scope<1> ;name: Rails, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_81 = call_0o(%v_80 ;n:application, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_80[32.9 ] ) 
		%v_82 = call_0o(%v_81 ;n:domain, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_81[32.10 ] ) 
		%v_83 = call_1o(%v_79, %v_82 ;n:==, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_79[32.8 ] %v_82[32.11 ] ) 
		b_false(LBL_31:184, %v_83)		--org.jruby.ir.instructions.BFalseInstr(	%v_83[32.12 ] ) 
PRINT info for BB 33:
	Vars Live on Entry:  0 22 72 85		
	Vars Live on Exit:  0 22 72 77		
	outgoing edges:34, 39, 
	Instructions:
		line_num(;n: 58)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_84 = call_0o(ru ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	ru[32.6 ] ) 
		%v_85 = call_1o(%self, %v_84 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_84[33.1 ] ) 
		%v_86 = copy(%v_85)		--org.jruby.ir.instructions.CopyInstr(	%v_85[33.2 ] ) 
		put_global_var($!, %v_72)		--org.jruby.ir.instructions.PutGlobalVarInstr(	%v_72[30.1 ] ) 
PRINT info for BB 34:
	Vars Live on Entry:  0 22 85		
	Vars Live on Exit:  0 22 85		
	outgoing edges:35, 49, 
	Instructions:
		toggle_backtrace(;true)		--org.jruby.ir.instructions.ToggleBacktraceInstr(	) 
		put_global_var($!, %v_20)		--org.jruby.ir.instructions.PutGlobalVarInstr(	%v_20[5.1 ] ) 
PRINT info for BB 35:
	Vars Live on Entry: 
	Vars Live on Exit:  85		
	outgoing edges:55, 
	Instructions:
		return(%v_86)		--org.jruby.ir.instructions.ReturnInstr(	%v_86[33.3 ] ) 
PRINT info for BB 36:
	Vars Live on Entry:  0 22 72 86		
	Vars Live on Exit:  0 22 72		
	outgoing edges:37, 
	Instructions:
		%v_87 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 37:
	Vars Live on Entry:  0 22 72 87		
	Vars Live on Exit:  0 22 72 86		
	outgoing edges:38, 39, 
	Instructions:
		%v_74 = copy(%v_87)		--org.jruby.ir.instructions.CopyInstr(	%v_87[36.0 ] ) 
		put_global_var($!, %v_72)		--org.jruby.ir.instructions.PutGlobalVarInstr(	%v_72[30.1 ] ) 
PRINT info for BB 38:
	Vars Live on Entry:  0 22 87		
	Vars Live on Exit:  0 22 87		
	outgoing edges:44, 
	Instructions:
		jump(LBL_27:220)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 39:
	Vars Live on Entry:  0 22 72 88		
	Vars Live on Exit:  0 22 72		
	outgoing edges:40, 41, 43, 
	Instructions:
		%v_88 = recv_ruby_exc()		--org.jruby.ir.instructions.ReceiveRubyExceptionInstr(	) 
		%v_89 = rescue_eqq(StandardError, %v_88)		--org.jruby.ir.instructions.RescueEQQInstr(	%v_88[39.0 ] ) 
		b_true(LBL_37:200, %v_89)		--org.jruby.ir.instructions.BTrueInstr(	%v_89[39.1 ] ) 
PRINT info for BB 40:
	Vars Live on Entry:  0 22 72		
	Vars Live on Exit:  0 22 72 88		
	outgoing edges:43, 55, 
	Instructions:
		throw(%v_88)		--org.jruby.ir.instructions.ThrowExceptionInstr(	%v_88[39.0 ] ) 
PRINT info for BB 41:
	Vars Live on Entry:  0 22 72 87		
	Vars Live on Exit:  0 22 72		
	outgoing edges:42, 43, 
	Instructions:
		%v_90 = get_global_var($!)		--org.jruby.ir.instructions.GetGlobalVariableInstr(	) 
		e = copy(%v_90)		--org.jruby.ir.instructions.CopyInstr(	%v_90[41.0 ] ) 
		line_num(;n: 61)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_91 = search_const(scope<1> ;name: Rails, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_92 = call_0o(%v_91 ;n:logger, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_91[41.3 ] ) 
		%v_93 = copy("error parsing referer: ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_94 = build_compound_string(%v_93, #{e})		--org.jruby.ir.instructions.BuildCompoundStringInstr(	%v_93[41.5 ] e[41.1 ] ) 
		%v_95 = call_1o(%v_92, %v_94 ;n:error, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_92[41.4 ] %v_94[41.6 ] ) 
		%v_74 = copy(%v_95)		--org.jruby.ir.instructions.CopyInstr(	%v_95[41.7 ] ) 
		put_global_var($!, %v_72)		--org.jruby.ir.instructions.PutGlobalVarInstr(	%v_72[30.1 ] ) 
PRINT info for BB 42:
	Vars Live on Entry:  0 22 87		
	Vars Live on Exit:  0 22 87		
	outgoing edges:44, 
	Instructions:
		jump(LBL_27:220)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 43:
	Vars Live on Entry:  0 22		
	Vars Live on Exit:  0 22 72		
	outgoing edges:49, 55, 
	Instructions:
		%v_96 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%v_97 = runtime_helper(%v_96, %v_72 ;method: RESTORE_EXCEPTION_VAR)		--org.jruby.ir.instructions.RuntimeHelperCall(	%v_96[43.0 ] %v_72[30.1 ] ) 
		throw(%v_96)		--org.jruby.ir.instructions.ThrowExceptionInstr(	%v_96[43.0 ] ) 
PRINT info for BB 44:
	Vars Live on Entry:  0 22 87		
	Vars Live on Exit:  0 22 87		
	outgoing edges:46, 
	Instructions:
		jump(LBL_24:224)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 45:
	Vars Live on Entry:  0 22 87		
	Vars Live on Exit:  0 22		
	outgoing edges:46, 
	Instructions:
		%v_74 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 46:
	Vars Live on Entry:  0 22		
	Vars Live on Exit:  0 22 87		
	outgoing edges:47, 
	Instructions:
		%v_68 = copy(%v_74)		--org.jruby.ir.instructions.CopyInstr(	%v_74[45.0 37.0 41.8 ] ) 
PRINT info for BB 47:
	Vars Live on Entry:  0 22 102		
	Vars Live on Exit:  0 22		
	outgoing edges:48, 49, 
	Instructions:
		line_num(;n: 65)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_98 = copy("/")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_99 = call_1o(%self, %v_98 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_98[47.1 ] ) 
		%v_100 = copy(%v_99)		--org.jruby.ir.instructions.CopyInstr(	%v_99[47.2 ] ) 
		toggle_backtrace(;true)		--org.jruby.ir.instructions.ToggleBacktraceInstr(	) 
		put_global_var($!, %v_20)		--org.jruby.ir.instructions.PutGlobalVarInstr(	%v_20[5.1 ] ) 
PRINT info for BB 48:
	Vars Live on Entry: 
	Vars Live on Exit:  102		
	outgoing edges:55, 
	Instructions:
		return(%v_100)		--org.jruby.ir.instructions.ReturnInstr(	%v_100[47.3 ] ) 
PRINT info for BB 49:
	Vars Live on Entry:  0 22 103		
	Vars Live on Exit:  0 22		
	outgoing edges:50, 51, 53, 
	Instructions:
		toggle_backtrace(;true)		--org.jruby.ir.instructions.ToggleBacktraceInstr(	) 
		%v_101 = recv_ruby_exc()		--org.jruby.ir.instructions.ReceiveRubyExceptionInstr(	) 
		%v_102 = rescue_eqq(StandardError, %v_101)		--org.jruby.ir.instructions.RescueEQQInstr(	%v_101[49.1 ] ) 
		b_true(LBL_41:245, %v_102)		--org.jruby.ir.instructions.BTrueInstr(	%v_102[49.2 ] ) 
PRINT info for BB 50:
	Vars Live on Entry:  22		
	Vars Live on Exit:  22 103		
	outgoing edges:53, 55, 
	Instructions:
		throw(%v_101)		--org.jruby.ir.instructions.ThrowExceptionInstr(	%v_101[49.1 ] ) 
PRINT info for BB 51:
	Vars Live on Entry:  0 22		
	Vars Live on Exit:  0 22		
	outgoing edges:52, 53, 
	Instructions:
		%v_22 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		toggle_backtrace(;true)		--org.jruby.ir.instructions.ToggleBacktraceInstr(	) 
		put_global_var($!, %v_20)		--org.jruby.ir.instructions.PutGlobalVarInstr(	%v_20[5.1 ] ) 
PRINT info for BB 52:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:55, 
	Instructions:
		line_num(;n: 69)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_105 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_106 = call_0o(%v_105 ;n:now, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_105[52.1 ] ) 
		%v_107 = copy("Invalid e-mail address and/or password.")		--org.jruby.ir.instructions.CopyInstr(	) 
		attr_assign(%v_106, :'error', %v_107 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_106[52.2 ] %v_107[52.3 ] ) #<%v_106>#	-- [PUT:%v_106].[] 
		line_num(;n: 70)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_108 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[52.1 2.0 ] ) 
		%v_109 = call_1o(%v_108, :'referer' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_108[52.6 ] ) 
		put_field(%self, %v_109 ;name: @referer)		--org.jruby.ir.instructions.PutFieldInstr(	%self[52.1 52.6 2.0 ] %v_109[52.7 ] ) #<%self>#	-- [PUT:%self].referer 
		line_num(;n: 71)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_110 = call_0o(%self ;n:index, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[52.1 52.6 52.8 2.0 ] ) 
		return(%v_110)		--org.jruby.ir.instructions.ReturnInstr(	%v_110[52.10 ] ) 
PRINT info for BB 53:
	Vars Live on Entry: 
	Vars Live on Exit:  22		
	outgoing edges:55, 
	Instructions:
		%v_103 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%v_104 = runtime_helper(%v_103, %v_20 ;method: RESTORE_EXCEPTION_VAR)		--org.jruby.ir.instructions.RuntimeHelperCall(	%v_103[53.0 ] %v_20[5.1 ] ) 
		throw(%v_103)		--org.jruby.ir.instructions.ThrowExceptionInstr(	%v_103[53.0 ] ) 
PRINT info for BB 55:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = forgot_password
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:3, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 76)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = copy("Reset Password")		--org.jruby.ir.instructions.CopyInstr(	) 
		put_field(%self, %v_3 ;name: @title)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 ] %v_3[2.6 ] ) #<%self>#	-- [PUT:%self].title 
		line_num(;n: 77)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_4 = copy("forgot_password")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_5 = copy({:'action'=>%v_4})		--org.jruby.ir.instructions.CopyInstr(	%v_4[2.9 ] ) 
		%v_6 = call_1o(%self, %v_5 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 2.7 ] %v_5[2.10 ] ) 
		return(%v_6)		--org.jruby.ir.instructions.ReturnInstr(	%v_6[2.11 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = reset_password
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:7, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 81)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = search_const(scope<1> ;name: User, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_4 = copy("email = ? OR username = ?")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_5 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_6 = call_1o(%v_5, :'email' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_5[2.8 ] ) 
		%v_7 = call_0o(%v_6 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_6[2.9 ] ) 
		%v_8 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 2.8 ] ) 
		%v_9 = call_1o(%v_8, :'email' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_8[2.11 ] ) 
		%v_10 = call_0o(%v_9 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_9[2.12 ] ) 
		%v_11 = call(%v_3, %v_4, %v_7, %v_10 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%v_3[2.6 ] %v_4[2.7 ] %v_7[2.10 ] %v_10[2.13 ] ) 
		%v_12 = call_0o(%v_11 ;n:first, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_11[2.14 ] ) 
		put_field(%self, %v_12 ;name: @found_user)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 2.8 2.11 ] %v_12[2.15 ] ) #<%self>#	-- [PUT:%self].found_user 
		line_num(;n: 84)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		line_num(;n: 85)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_13 = get_field(%self ;name: @found_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 2.8 2.11 2.16 ] %self[2.0 2.8 2.11 2.16 ] ) #<%self>#	-- [GET:%self].found_user 
		%v_14 = call_0o(%v_13 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_13[2.19 ] ) 
		b_false(LBL_0:30, %v_14)		--org.jruby.ir.instructions.BFalseInstr(	%v_14[2.20 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:7, 
	Instructions:
		%v_15 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 2.16 ] ) 
		%v_16 = call_0o(%v_15 ;n:now, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_15[3.0 ] ) 
		%v_17 = copy("Invalid e-mail address or username.")		--org.jruby.ir.instructions.CopyInstr(	) 
		attr_assign(%v_16, :'error', %v_17 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_16[3.1 ] %v_17[3.2 ] ) #<%v_16>#	-- [PUT:%v_16].[] 
		line_num(;n: 86)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_18 = call_0o(%self ;n:forgot_password, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[3.0 2.0 2.16 ] ) 
		return(%v_18)		--org.jruby.ir.instructions.ReturnInstr(	%v_18[3.5 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:7, 
	Instructions:
		%v_19 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 89)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_20 = get_field(%self ;name: @found_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 2.16 ] %self[2.0 2.16 ] ) #<%self>#	-- [GET:%self].found_user 
		%v_21 = call_0o(%self ;n:request, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 2.16 ] ) 
		%v_22 = call_0o(%v_21 ;n:remote_ip, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_21[4.3 ] ) 
		%v_23 = call_1o(%v_20, %v_22 ;n:initiate_password_reset_for_ip, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_20[4.2 ] %v_22[4.4 ] ) 
		line_num(;n: 91)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_24 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[4.3 2.0 2.16 ] ) 
		%v_25 = call_0o(%v_24 ;n:now, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_24[4.7 ] ) 
		%v_26 = copy("Password reset instructions have been e-mailed ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_27 = copy("to you.")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_28 = call_1o(%v_26, %v_27 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_26[4.9 ] %v_27[4.10 ] ) 
		attr_assign(%v_25, :'success', %v_28 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_25[4.8 ] %v_28[4.11 ] ) #<%v_25>#	-- [PUT:%v_25].[] 
		line_num(;n: 93)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_29 = call_0o(%self ;n:index, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[4.3 4.7 2.0 2.16 ] ) 
		return(%v_29)		--org.jruby.ir.instructions.ReturnInstr(	%v_29[4.14 ] ) 
PRINT info for BB 7:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = set_new_password
PRINT info for BB 1:
	Vars Live on Entry:  10		
	Vars Live on Exit:  10		
	outgoing edges:26, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 9 10		
	Vars Live on Exit:  10		
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 98)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = copy("Reset Password")		--org.jruby.ir.instructions.CopyInstr(	) 
		put_field(%self, %v_3 ;name: @title)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 ] %v_3[2.6 ] ) #<%self>#	-- [PUT:%self].title 
		line_num(;n: 100)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_4 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 2.7 ] ) 
		%v_5 = call_1o(%v_4, :'token' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_4[2.9 ] ) 
		%v_6 = call_0o(%v_5 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_5[2.10 ] ) 
		%v_7 = copy(RE:|^(\d+)-|RegexpOptions(kcode: NONE, kcodeDefault))		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_8 = call_1o(%v_6, RE:|^(\d+)-|RegexpOptions(kcode: NONE, kcodeDefault) ;n:match, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_6[2.11 ] ) 
		m = copy(%v_8)		--org.jruby.ir.instructions.CopyInstr(	%v_8[2.13 ] ) 
		b_false(LBL_2:28, %v_8)		--org.jruby.ir.instructions.BFalseInstr(	%v_8[2.13 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 9 10		
	Vars Live on Exit:  0 10		
	outgoing edges:4, 
	Instructions:
		line_num(;n: 101)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_9 = search_const(scope<1> ;name: Time, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_10 = call_0o(%v_9 ;n:now, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_9[3.1 ] ) 
		%v_11 = search_const(scope<1> ;name: Time, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_12 = call_1f(m, Fixnum:1 ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	m[2.14 ] ) 
		%v_13 = call_0o(%v_12 ;n:to_i, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_12[3.4 ] ) 
		%v_14 = call_1o(%v_11, %v_13 ;n:at, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_11[3.3 ] %v_13[3.5 ] ) 
		%v_15 = call_1o(%v_10, %v_14 ;n:-, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_10[3.2 ] %v_14[3.6 ] ) 
		%v_16 = call_0o(Fixnum:24 ;n:hours, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	) 
		%v_17 = call_1o(%v_15, %v_16 ;n:<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_15[3.7 ] %v_16[3.8 ] ) 
		%v_8 = copy(%v_17)		--org.jruby.ir.instructions.CopyInstr(	%v_17[3.9 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0 10		
	Vars Live on Exit:  0 9 10		
	outgoing edges:5, 6, 
	Instructions:
		b_false(LBL_0:40, %v_8)		--org.jruby.ir.instructions.BFalseInstr(	%v_8[3.10 2.13 ] ) 
PRINT info for BB 5:
	Vars Live on Entry:  0 10		
	Vars Live on Exit:  0 10		
	outgoing edges:7, 
	Instructions:
		line_num(;n: 102)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_18 = search_const(scope<1> ;name: User, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_19 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 2.7 ] ) 
		%v_20 = call_1o(%v_19, :'token' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_19[5.2 ] ) 
		%v_21 = call_0o(%v_20 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_20[5.3 ] ) 
		%v_22 = copy({:'password_reset_token'=>%v_21})		--org.jruby.ir.instructions.CopyInstr(	%v_21[5.4 ] ) 
		%v_23 = call_1o(%v_18, %v_22 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_18[5.1 ] %v_22[5.5 ] ) 
		%v_24 = call_0o(%v_23 ;n:first, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_23[5.6 ] ) 
		put_field(%self, %v_24 ;name: @reset_user)		--org.jruby.ir.instructions.PutFieldInstr(	%self[5.2 2.0 2.7 ] %v_24[5.7 ] ) #<%self>#	-- [PUT:%self].reset_user 
		jump(LBL_1:42)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 6:
	Vars Live on Entry:  0 10		
	Vars Live on Exit:  0 10		
	outgoing edges:7, 
	Instructions:
		%v_24 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 7:
	Vars Live on Entry:  0 10 27		
	Vars Live on Exit:  0 10		
	outgoing edges:8, 9, 
	Instructions:
		line_num(;n: 105)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_25 = get_field(%self ;name: @reset_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[5.8 2.0 2.7 ] %self[5.8 2.0 ] ) #<%self>#	-- [GET:%self].reset_user 
		b_false(LBL_5:50, %v_25)		--org.jruby.ir.instructions.BFalseInstr(	%v_25[7.1 ] ) 
PRINT info for BB 8:
	Vars Live on Entry:  0 10 27		
	Vars Live on Exit:  0 10		
	outgoing edges:9, 
	Instructions:
		%v_26 = get_field(%self ;name: @reset_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[5.8 2.0 2.7 ] %self[5.8 2.0 ] ) #<%self>#	-- [GET:%self].reset_user 
		%v_27 = call_0o(%v_26 ;n:is_banned?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_26[8.0 ] ) 
		%v_28 = call_0o(%v_27 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_27[8.1 ] ) 
		%v_25 = copy(%v_28)		--org.jruby.ir.instructions.CopyInstr(	%v_28[8.2 ] ) 
PRINT info for BB 9:
	Vars Live on Entry:  0 10		
	Vars Live on Exit:  0 10 27		
	outgoing edges:10, 24, 
	Instructions:
		b_false(LBL_3:122, %v_25)		--org.jruby.ir.instructions.BFalseInstr(	%v_25[8.3 7.1 ] ) 
PRINT info for BB 10:
	Vars Live on Entry:  0 10		
	Vars Live on Exit:  0 10		
	outgoing edges:11, 22, 
	Instructions:
		line_num(;n: 106)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_29 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[5.8 2.0 2.7 ] ) 
		%v_30 = call_1o(%v_29, :'password' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_29[10.1 ] ) 
		%v_31 = call_0o(%v_30 ;n:present?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_30[10.2 ] ) 
		b_false(LBL_6:118, %v_31)		--org.jruby.ir.instructions.BFalseInstr(	%v_31[10.3 ] ) 
PRINT info for BB 11:
	Vars Live on Entry:  0 10 44		
	Vars Live on Exit:  0 10		
	outgoing edges:12, 13, 
	Instructions:
		line_num(;n: 107)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_32 = get_field(%self ;name: @reset_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[5.8 2.0 2.7 ] %self[5.8 2.0 ] ) #<%self>#	-- [GET:%self].reset_user 
		%v_33 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[5.8 2.0 2.7 ] ) 
		%v_34 = call_1o(%v_33, :'password' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_33[11.2 ] ) 
		attr_assign(%v_32, %v_34 ;n:password=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	%v_32[11.1 ] %v_34[11.3 ] ) #<%v_32>#	-- [PUT:%v_32].password 
		line_num(;n: 108)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_35 = get_field(%self ;name: @reset_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[11.2 5.8 2.0 2.7 ] %self[11.2 5.8 2.0 ] ) #<%self>#	-- [GET:%self].reset_user 
		%v_36 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[11.2 5.8 2.0 2.7 ] ) 
		%v_37 = call_1o(%v_36, :'password_confirmation' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_36[11.7 ] ) 
		attr_assign(%v_35, %v_37 ;n:password_confirmation=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	%v_35[11.6 ] %v_37[11.8 ] ) #<%v_35>#	-- [PUT:%v_35].password_confirmation 
		line_num(;n: 109)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_38 = get_field(%self ;name: @reset_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[11.2 11.7 5.8 2.0 2.7 ] %self[11.2 11.7 5.8 2.0 ] ) #<%self>#	-- [GET:%self].reset_user 
		attr_assign(%v_38, nil ;n:password_reset_token=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	%v_38[11.11 ] ) #<%v_38>#	-- [PUT:%v_38].password_reset_token 
		line_num(;n: 112)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_39 = get_field(%self ;name: @reset_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[11.2 11.7 5.8 2.0 2.7 ] %self[11.2 11.7 5.8 2.0 ] ) #<%self>#	-- [GET:%self].reset_user 
		attr_assign(%v_39, nil ;n:session_token=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	%v_39[11.14 ] ) #<%v_39>#	-- [PUT:%v_39].session_token 
		line_num(;n: 114)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_40 = get_field(%self ;name: @reset_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[11.2 11.7 5.8 2.0 2.7 ] %self[11.2 11.7 5.8 2.0 ] ) #<%self>#	-- [GET:%self].reset_user 
		%v_41 = call_0o(%v_40 ;n:is_active?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_40[11.17 ] ) 
		%v_42 = call_0o(%v_41 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_41[11.18 ] ) 
		b_false(LBL_10:82, %v_42)		--org.jruby.ir.instructions.BFalseInstr(	%v_42[11.19 ] ) 
PRINT info for BB 12:
	Vars Live on Entry:  0 10 44		
	Vars Live on Exit:  0 10		
	outgoing edges:13, 
	Instructions:
		%v_43 = get_field(%self ;name: @reset_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[5.8 2.0 2.7 ] %self[5.8 2.0 ] ) #<%self>#	-- [GET:%self].reset_user 
		%v_44 = call_0o(%v_43 ;n:is_banned?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_43[12.0 ] ) 
		%v_45 = call_0o(%v_44 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_44[12.1 ] ) 
		%v_42 = copy(%v_45)		--org.jruby.ir.instructions.CopyInstr(	%v_45[12.2 ] ) 
PRINT info for BB 13:
	Vars Live on Entry:  0 10		
	Vars Live on Exit:  0 10 44		
	outgoing edges:14, 15, 
	Instructions:
		b_false(LBL_8:89, %v_42)		--org.jruby.ir.instructions.BFalseInstr(	%v_42[12.3 11.19 ] ) 
PRINT info for BB 14:
	Vars Live on Entry:  0 10		
	Vars Live on Exit:  0 10		
	outgoing edges:16, 
	Instructions:
		line_num(;n: 115)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_46 = get_field(%self ;name: @reset_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[5.8 2.0 2.7 ] %self[5.8 2.0 ] ) #<%self>#	-- [GET:%self].reset_user 
		attr_assign(%v_46, nil ;n:deleted_at=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	%v_46[14.1 ] ) #<%v_46>#	-- [PUT:%v_46].deleted_at 
		%v_47 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(LBL_9:91)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 15:
	Vars Live on Entry:  0 10		
	Vars Live on Exit:  0 10		
	outgoing edges:16, 
	Instructions:
		%v_47 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 16:
	Vars Live on Entry:  0 10 51		
	Vars Live on Exit:  0 10		
	outgoing edges:17, 18, 
	Instructions:
		line_num(;n: 118)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_48 = get_field(%self ;name: @reset_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[5.8 2.0 2.7 ] %self[5.8 2.0 ] ) #<%self>#	-- [GET:%self].reset_user 
		%v_49 = call_0o(%v_48 ;n:save, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_48[16.1 ] ) 
		b_false(LBL_13:99, %v_49)		--org.jruby.ir.instructions.BFalseInstr(	%v_49[16.2 ] ) 
PRINT info for BB 17:
	Vars Live on Entry:  0 10 51		
	Vars Live on Exit:  0 10		
	outgoing edges:18, 
	Instructions:
		%v_50 = get_field(%self ;name: @reset_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[5.8 2.0 2.7 ] %self[5.8 2.0 ] ) #<%self>#	-- [GET:%self].reset_user 
		%v_51 = call_0o(%v_50 ;n:is_active?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_50[17.0 ] ) 
		%v_49 = copy(%v_51)		--org.jruby.ir.instructions.CopyInstr(	%v_51[17.1 ] ) 
PRINT info for BB 18:
	Vars Live on Entry:  0 10		
	Vars Live on Exit:  0 10 51		
	outgoing edges:19, 20, 
	Instructions:
		b_false(LBL_11:110, %v_49)		--org.jruby.ir.instructions.BFalseInstr(	%v_49[17.2 16.2 ] ) 
PRINT info for BB 19:
	Vars Live on Entry:  10		
	Vars Live on Exit:  0 10		
	outgoing edges:26, 
	Instructions:
		line_num(;n: 119)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_52 = call_0o(%self ;n:session, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[5.8 2.0 2.7 ] ) 
		%v_53 = get_field(%self ;name: @reset_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[19.1 5.8 2.0 2.7 ] %self[19.1 5.8 2.0 ] ) #<%self>#	-- [GET:%self].reset_user 
		%v_54 = call_0o(%v_53 ;n:session_token, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_53[19.2 ] ) 
		attr_assign(%v_52, :'u', %v_54 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_52[19.1 ] %v_54[19.3 ] ) #<%v_52>#	-- [PUT:%v_52].[] 
		line_num(;n: 120)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_55 = copy("/")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_56 = call_1o(%self, %v_55 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[19.1 5.8 2.0 2.7 ] %v_55[19.6 ] ) 
		return(%v_56)		--org.jruby.ir.instructions.ReturnInstr(	%v_56[19.7 ] ) 
PRINT info for BB 20:
	Vars Live on Entry:  0 10		
	Vars Live on Exit:  0 10		
	outgoing edges:23, 
	Instructions:
		line_num(;n: 122)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_58 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[5.8 2.0 2.7 ] ) 
		%v_59 = copy("Could not reset password.")		--org.jruby.ir.instructions.CopyInstr(	) 
		attr_assign(%v_58, :'error', %v_59 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_58[20.1 ] %v_59[20.2 ] ) #<%v_58>#	-- [PUT:%v_58].[] 
		%v_57 = copy(%v_59)		--org.jruby.ir.instructions.CopyInstr(	%v_59[20.2 ] ) 
		jump(LBL_7:120)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 22:
	Vars Live on Entry:  0 10		
	Vars Live on Exit:  0 10		
	outgoing edges:23, 
	Instructions:
		%v_57 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 23:
	Vars Live on Entry:  10		
	Vars Live on Exit:  0 10		
	outgoing edges:26, 
	Instructions:
		line_num(;n: 130)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_66 = call_0o(%self ;n:set_new_password_path, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[5.8 2.0 2.7 ] ) 
		%v_67 = copy("off")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_68 = copy({:'autocomplete'=>%v_67})		--org.jruby.ir.instructions.CopyInstr(	%v_67[23.2 ] ) 
		%v_69 = call(%self, %v_66, %v_68, %self:CLOSURE set_new_password_CLOSURE_1[./lobsters/merged_controllers/login_controller.rb:130] ;n:form_tag, t:FU, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.CallInstr(	%self[23.1 5.8 2.0 2.7 ] %v_66[23.1 ] %v_68[23.3 ] %self[23.1 5.8 2.0 2.7 ] ) 
CLOSURE BEGIN: %self[23.1,5.8,2.0,2.7,] 
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0		
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_1_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:4, 6, 
	Instructions:
		line_num(;n: 131)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_3 = get_field(%self ;name: @reset_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].reset_user 
		%cl_1_4 = call_1o(%self, %cl_1_3 ;n:error_messages_for, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %cl_1_3[3.1 ] ) 
		line_num(;n: 132)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_5 = copy("token")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_6 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[3.2 2.0 ] ) 
		%cl_1_7 = call_1o(%cl_1_6, :'token' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_1_6[3.5 ] ) 
		%cl_1_8 = call(%self, %cl_1_5, %cl_1_7 ;n:hidden_field_tag, t:FU, cl:false)		--org.jruby.ir.instructions.CallInstr(	%self[3.2 3.5 2.0 ] %cl_1_5[3.4 ] %cl_1_7[3.6 ] ) 
		line_num(;n: 133)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_9 = copy("Username:")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_10 = call(%self, :'username', %cl_1_9 ;n:label_tag, t:FU, cl:false)		--org.jruby.ir.instructions.CallInstr(	%self[3.2 3.5 3.7 2.0 ] %cl_1_9[3.9 ] ) 
		line_num(;n: 134)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_11 = get_field(%self ;name: @reset_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[3.2 3.5 3.7 3.10 2.0 ] %self[3.2 3.5 3.7 3.10 2.0 ] ) #<%self>#	-- [GET:%self].reset_user 
		%cl_1_12 = call_0o(%cl_1_11 ;n:username, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_11[3.12 ] ) 
		line_num(;n: 135)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_13 = copy("New Password:")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_14 = call(%self, :'password', %cl_1_13 ;n:label_tag, t:FU, cl:false)		--org.jruby.ir.instructions.CallInstr(	%self[3.2 3.5 3.7 3.10 2.0 ] %cl_1_13[3.15 ] ) 
		line_num(;n: 136)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_15 = copy("")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_16 = copy({:'size'=>Fixnum:30})		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_17 = call(%self, :'password', %cl_1_15, %cl_1_16 ;n:password_field_tag, t:FU, cl:false)		--org.jruby.ir.instructions.CallInstr(	%self[3.2 3.5 3.7 3.10 3.16 2.0 ] %cl_1_15[3.18 ] %cl_1_16[3.19 ] ) 
		line_num(;n: 137)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_18 = copy("(Again):")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_19 = call(%self, :'password_confirmation', %cl_1_18 ;n:label_tag, t:FU, cl:false)		--org.jruby.ir.instructions.CallInstr(	%self[3.2 3.5 3.7 3.10 3.16 3.20 2.0 ] %cl_1_18[3.22 ] ) 
		line_num(;n: 138)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_20 = copy("")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_21 = copy({:'size'=>Fixnum:30})		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_22 = call(%self, :'password_confirmation', %cl_1_20, %cl_1_21 ;n:password_field_tag, t:FU, cl:false)		--org.jruby.ir.instructions.CallInstr(	%self[3.2 3.5 3.7 3.10 3.16 3.20 3.23 2.0 ] %cl_1_20[3.25 ] %cl_1_21[3.26 ] ) 
		line_num(;n: 139)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_23 = copy("Set New Password")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_24 = call_1o(%self, %cl_1_23 ;n:submit_tag, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[3.2 3.5 3.7 3.10 3.16 3.20 3.23 3.27 2.0 ] %cl_1_23[3.29 ] ) 
		return(%cl_1_24)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_24[3.30 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 
	Instructions:
		%cl_1_25 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_1_26 = runtime_helper(%cl_1_25 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_1_25[4.0 ] ) 
		return(%cl_1_26)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_26[4.1 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:
CLOSURE END
		return(%v_69)		--org.jruby.ir.instructions.ReturnInstr(	%v_69[23.4 ] ) 
PRINT info for BB 24:
	Vars Live on Entry:  10		
	Vars Live on Exit:  0 10		
	outgoing edges:26, 
	Instructions:
		line_num(;n: 126)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_60 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[5.8 2.0 2.7 ] ) 
		%v_61 = copy("Invalid reset token.  It may have already been ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_62 = copy("used or you may have copied it incorrectly.")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_63 = call_1o(%v_61, %v_62 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_61[24.2 ] %v_62[24.3 ] ) 
		attr_assign(%v_60, :'error', %v_63 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_60[24.1 ] %v_63[24.4 ] ) #<%v_60>#	-- [PUT:%v_60].[] 
		line_num(;n: 128)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_64 = call_0o(%self ;n:forgot_password_path, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[24.1 5.8 2.0 2.7 ] ) 
		%v_65 = call_1o(%self, %v_64 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[24.1 24.7 5.8 2.0 2.7 ] %v_64[24.7 ] ) 
		return(%v_65)		--org.jruby.ir.instructions.ReturnInstr(	%v_65[24.8 ] ) 
PRINT info for BB 26:
	Vars Live on Entry:  10		
	Vars Live on Exit:  10		
	outgoing edges:
	Instructions:

