SET IRMethod, name = index
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:9, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 4)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = copy("/filters")		--org.jruby.ir.instructions.CopyInstr(	) 
		put_field(%self, %v_3 ;name: @cur_url)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 ] %v_3[2.6 ] ) #<%self>#	-- [PUT:%self].cur_url 
		line_num(;n: 5)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_4 = copy("Tag Filters")		--org.jruby.ir.instructions.CopyInstr(	) 
		put_field(%self, %v_4 ;name: @title)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 2.7 ] %v_4[2.9 ] ) #<%self>#	-- [PUT:%self].title 
		line_num(;n: 7)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_5 = search_const(scope<1> ;name: Tag, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_6 = call_0o(%v_5 ;n:active, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_5[2.12 ] ) 
		%v_7 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 2.7 2.10 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_8 = call_1o(%v_6, %v_7 ;n:all_with_story_counts_for, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_6[2.13 ] %v_7[2.14 ] ) 
		put_field(%self, %v_8 ;name: @tags)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 2.7 2.10 ] %v_8[2.15 ] ) #<%self>#	-- [PUT:%self].tags 
		line_num(;n: 9)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		line_num(;n: 10)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_9 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 2.7 2.10 2.16 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		b_false(LBL_0:27, %v_9)		--org.jruby.ir.instructions.BFalseInstr(	%v_9[2.19 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:5, 
	Instructions:
		%v_10 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 2.7 2.10 2.16 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_11 = call_0o(%v_10 ;n:tag_filter_tags, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_10[3.0 ] ) 
		%v_12 = call_0o(%v_11 ;n:to_a, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_11[3.1 ] ) 
		put_field(%self, %v_12 ;name: @filtered_tags)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 2.7 2.10 2.16 ] %v_12[3.2 ] ) #<%self>#	-- [PUT:%self].filtered_tags 
		jump(LBL_1:33)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 4:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:5, 
	Instructions:
		line_num(;n: 12)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_13 = call_0o(%self ;n:tags_filtered_by_cookie, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 2.7 2.10 2.16 ] ) 
		%v_14 = call_0o(%v_13 ;n:to_a, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_13[4.1 ] ) 
		put_field(%self, %v_14 ;name: @filtered_tags)		--org.jruby.ir.instructions.PutFieldInstr(	%self[4.1 2.0 2.7 2.10 2.16 ] %v_14[4.2 ] ) #<%self>#	-- [PUT:%self].filtered_tags 
		%v_12 = copy(%v_14)		--org.jruby.ir.instructions.CopyInstr(	%v_14[4.2 ] ) 
PRINT info for BB 5:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:6, 7, 
	Instructions:
		line_num(;n: 14)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		line_num(;n: 15)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_15 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[4.3 3.3 2.0 2.7 2.10 2.16 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_16 = call_0o(%v_15 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_15[5.2 ] ) 
		b_false(LBL_2:41, %v_16)		--org.jruby.ir.instructions.BFalseInstr(	%v_16[5.3 ] ) 
PRINT info for BB 6:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:8, 
	Instructions:
		%v_17 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(LBL_3:43)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 7:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:8, 
	Instructions:
		%v_17 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 8:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:9, 
	Instructions:
		line_num(;n: 16)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_18 = copy("/filters")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_19 = copy({:'method'=>:'post'})		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_20 = call(%self, %v_18, %v_19, %self:CLOSURE index_CLOSURE_1[./lobsters/merged_controllers/filters_controller.rb:16] ;n:form_tag, t:FU, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.CallInstr(	%self[4.3 3.3 2.0 2.7 2.10 2.16 ] %v_18[8.1 ] %v_19[8.2 ] %self[4.3 3.3 2.0 2.7 2.10 2.16 ] ) 
CLOSURE BEGIN: %self[4.3,3.3,2.0,2.7,2.10,2.16,] 
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0		
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_1_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:4, 6, 
	Instructions:
		line_num(;n: 17)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_3 = get_field(%self ;name: @tags)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].tags 
		%cl_1_4 = call(%cl_1_3, %self:CLOSURE index_CLOSURE_1_CLOSURE_2[./lobsters/merged_controllers/filters_controller.rb:17] ;n:each, t:NO, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.CallInstr(	%cl_1_3[3.1 ] %self[2.0 ] ) 
CLOSURE BEGIN: tag[] %self[2.0,] 
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:12, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 2		
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_2_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		tag = recv_pre_reqd_arg()		--org.jruby.ir.instructions.ReceivePreReqdArgInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 3:
	Vars Live on Entry:  2		
	Vars Live on Exit:  0 2		
	outgoing edges:4, 8, 10, 
	Instructions:
		line_num(;n: 18)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_3 = copy("tags[]")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_4 = call_0o(tag ;n:tag, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	tag[2.2 ] ) 
		%cl_2_5 = get_field(%self ;name: @filtered_tags)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].filtered_tags 
		%cl_2_6 = call_1o(%cl_2_5, tag ;n:include?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_2_5[3.3 ] tag[3.2 2.2 ] ) 
		%cl_2_7 = call(%self, %cl_2_3, %cl_2_4, %cl_2_6 ;n:check_box_tag, t:FU, cl:false)		--org.jruby.ir.instructions.CallInstr(	%self[2.0 ] %cl_2_3[3.1 ] %cl_2_4[3.2 ] %cl_2_6[3.4 ] ) 
		line_num(;n: 20)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_8 = call_0o(tag ;n:tag, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	tag[3.2 2.2 ] ) 
		%cl_2_9 = call_1o(%self, tag ;n:tag_path, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[3.5 2.0 ] tag[3.2 3.7 2.2 ] ) 
		%cl_2_10 = call_0o(tag ;n:css_class, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	tag[3.2 3.7 2.2 ] ) 
		%cl_2_11 = copy({:'class'=>%cl_2_10})		--org.jruby.ir.instructions.CopyInstr(	%cl_2_10[3.9 ] ) 
		%cl_2_12 = call(%self, %cl_2_8, %cl_2_9, %cl_2_11 ;n:link_to, t:FU, cl:false)		--org.jruby.ir.instructions.CallInstr(	%self[3.5 3.8 2.0 ] %cl_2_8[3.7 ] %cl_2_9[3.8 ] %cl_2_11[3.10 ] ) 
		line_num(;n: 21)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_13 = call_0o(tag ;n:description, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	tag[3.2 3.7 3.9 2.2 ] ) 
		line_num(;n: 22)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_14 = call_0o(tag ;n:hotness_mod, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	tag[3.2 3.7 3.9 3.13 2.2 ] ) 
		%cl_2_15 = call_1f(%cl_2_14, Fixnum:0 ;n:!=, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%cl_2_14[3.15 ] %cl_2_14[3.15 ] ) #<%cl_2_14># 
		b_false(CL2_LBL_0:39, %cl_2_15)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_15[3.16 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  2		
	Vars Live on Exit:  2		
	outgoing edges:5, 6, 10, 
	Instructions:
		line_num(;n: 23)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_16 = call_0o(tag ;n:hotness_mod, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	tag[2.2 ] ) 
		%cl_2_17 = call_1f(%cl_2_16, Fixnum:0 ;n:>, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%cl_2_16[4.1 ] ) 
		b_false(CL2_LBL_2:32, %cl_2_17)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_17[4.2 ] ) 
PRINT info for BB 5:
	Vars Live on Entry:  2		
	Vars Live on Exit:  2		
	outgoing edges:7, 
	Instructions:
		%cl_2_18 = copy("+")		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_3:35)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 6:
	Vars Live on Entry:  2		
	Vars Live on Exit:  2		
	outgoing edges:7, 
	Instructions:
		%cl_2_19 = copy("")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_18 = copy(%cl_2_19)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_19[6.0 ] ) 
PRINT info for BB 7:
	Vars Live on Entry:  2		
	Vars Live on Exit:  2		
	outgoing edges:9, 10, 
	Instructions:
		line_num(;n: 25)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_20 = call_0o(tag ;n:hotness_mod, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	tag[2.2 ] ) 
		jump(CL2_LBL_1:41)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 8:
	Vars Live on Entry:  2		
	Vars Live on Exit:  2		
	outgoing edges:9, 
	Instructions:
		%cl_2_20 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 9:
	Vars Live on Entry: 
	Vars Live on Exit:  2		
	outgoing edges:10, 12, 
	Instructions:
		line_num(;n: 28)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_21 = call_0o(tag ;n:stories_count, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	tag[2.2 ] ) 
		return(%cl_2_21)		--org.jruby.ir.instructions.ReturnInstr(	%cl_2_21[9.1 ] ) 
PRINT info for BB 10:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:12, 
	Instructions:
		%cl_2_22 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_2_23 = runtime_helper(%cl_2_22 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_2_22[10.0 ] ) 
		return(%cl_2_23)		--org.jruby.ir.instructions.ReturnInstr(	%cl_2_23[10.1 ] ) 
PRINT info for BB 12:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:
CLOSURE END
		line_num(;n: 30)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_5 = copy("Save Filters")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_6 = call_1o(%self, %cl_1_5 ;n:submit_tag, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %cl_1_5[3.4 ] ) 
		return(%cl_1_6)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_6[3.5 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 
	Instructions:
		%cl_1_7 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_1_8 = runtime_helper(%cl_1_7 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_1_7[4.0 ] ) 
		return(%cl_1_8)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_8[4.1 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:
CLOSURE END
		return(%v_20)		--org.jruby.ir.instructions.ReturnInstr(	%v_20[8.3 ] ) 
PRINT info for BB 9:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = update
PRINT info for BB 1:
	Vars Live on Entry:  6 14		
	Vars Live on Exit:  6 14		
	outgoing edges:9, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 6 14		
	Vars Live on Exit:  6 14		
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 37)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_4 = call_1o(%v_3, :'tags' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		tags_param = copy(%v_4)		--org.jruby.ir.instructions.CopyInstr(	%v_4[2.7 ] ) 
		line_num(;n: 38)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_5 = call_0o(%v_4 ;n:blank?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_4[2.7 ] ) 
		b_false(LBL_0:15, %v_5)		--org.jruby.ir.instructions.BFalseInstr(	%v_5[2.10 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 6 8		
	Vars Live on Exit:  0 6		
	outgoing edges:5, 
	Instructions:
		%v_6 = copy(Array:[])		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(LBL_1:22)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 4:
	Vars Live on Entry:  0 6 8		
	Vars Live on Exit:  0 6 14		
	outgoing edges:5, 
	Instructions:
		%v_7 = search_const(scope<1> ;name: Tag, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_8 = call_0o(%v_7 ;n:active, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_7[4.0 ] ) 
		%v_9 = copy({:'tag'=>tags_param})		--org.jruby.ir.instructions.CopyInstr(	tags_param[2.8 ] ) 
		%v_10 = call_1o(%v_8, %v_9 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_8[4.1 ] %v_9[4.2 ] ) 
		%v_11 = call_0o(%v_10 ;n:to_a, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_10[4.3 ] ) 
		%v_6 = copy(%v_11)		--org.jruby.ir.instructions.CopyInstr(	%v_11[4.4 ] ) 
PRINT info for BB 5:
	Vars Live on Entry:  0 6 14		
	Vars Live on Exit:  0 6 8		
	outgoing edges:6, 7, 
	Instructions:
		new_tags = copy(%v_6)		--org.jruby.ir.instructions.CopyInstr(	%v_6[4.5 3.0 ] ) 
		line_num(;n: 40)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_12 = call(%v_6, %self:CLOSURE update_CLOSURE_1[./lobsters/merged_controllers/filters_controller.rb:40] ;n:keep_if, t:NO, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.CallInstr(	%v_6[4.5 3.0 ] %self[2.0 ] ) 
CLOSURE BEGIN: %self[2.0,] t[] 
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 2		
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_1_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		t = recv_pre_reqd_arg()		--org.jruby.ir.instructions.ReceivePreReqdArgInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0 2		
	outgoing edges:4, 6, 
	Instructions:
		line_num(;n: 40)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_3 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%cl_1_4 = call_1o(t, %cl_1_3 ;n:valid_for?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	t[2.2 ] %cl_1_3[3.1 ] ) 
		return(%cl_1_4)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_4[3.2 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 
	Instructions:
		%cl_1_5 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_1_6 = runtime_helper(%cl_1_5 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_1_5[4.0 ] ) 
		return(%cl_1_6)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_6[4.1 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:
CLOSURE END
		line_num(;n: 42)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		line_num(;n: 43)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_13 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		b_false(LBL_2:34, %v_13)		--org.jruby.ir.instructions.BFalseInstr(	%v_13[5.5 ] ) 
PRINT info for BB 6:
	Vars Live on Entry:  0 6 14		
	Vars Live on Exit:  0 6 14		
	outgoing edges:8, 
	Instructions:
		%v_14 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		attr_assign(%v_14, new_tags ;n:tag_filter_tags=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	%v_14[6.0 ] new_tags[5.0 ] ) #<%v_14>#	-- [PUT:%v_14].tag_filter_tags 
		%v_15 = copy(new_tags)		--org.jruby.ir.instructions.CopyInstr(	new_tags[5.0 ] ) 
		jump(LBL_3:44)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 7:
	Vars Live on Entry:  0 6 14		
	Vars Live on Exit:  0 6 14		
	outgoing edges:8, 
	Instructions:
		line_num(;n: 45)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_16 = call_0o(%self ;n:cookies, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_17 = call_0o(%v_16 ;n:permanent, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_16[7.1 ] ) 
		%v_18 = search_const(scope<1> ;name: TAG_FILTER_COOKIE, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_19 = call(new_tags, :'tag' ;n:map, t:NO, cl:true(org.jruby.ir.operands.Symbol))		--org.jruby.ir.instructions.CallInstr(	new_tags[5.0 ] ) 
		%v_20 = copy(",")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_21 = call_1o(%v_19, %v_20 ;n:join, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_19[7.4 ] %v_20[7.5 ] ) 
		attr_assign(%v_17, %v_18, %v_21 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_17[7.2 ] %v_18[7.3 ] %v_21[7.6 ] ) #<%v_17>#	-- [PUT:%v_17].[] 
		%v_15 = copy(%v_21)		--org.jruby.ir.instructions.CopyInstr(	%v_21[7.6 ] ) 
PRINT info for BB 8:
	Vars Live on Entry:  6 14		
	Vars Live on Exit:  0 6 14		
	outgoing edges:9, 
	Instructions:
		line_num(;n: 48)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_22 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_23 = copy("Your filters have been updated.")		--org.jruby.ir.instructions.CopyInstr(	) 
		attr_assign(%v_22, :'success', %v_23 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_22[8.1 ] %v_23[8.2 ] ) #<%v_22>#	-- [PUT:%v_22].[] 
		line_num(;n: 50)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_24 = call_0o(%self ;n:filters_path, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[8.1 2.0 ] ) 
		%v_25 = call_1o(%self, %v_24 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[8.1 8.5 2.0 ] %v_24[8.5 ] ) 
		return(%v_25)		--org.jruby.ir.instructions.ReturnInstr(	%v_25[8.6 ] ) 
PRINT info for BB 9:
	Vars Live on Entry:  6 14		
	Vars Live on Exit:  6 14		
	outgoing edges:
	Instructions:

