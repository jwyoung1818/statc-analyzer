SET IRMethod, name = create
PRINT info for BB 1:
	Vars Live on Entry:  45		
	Vars Live on Exit:  45		
	outgoing edges:34, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 10 12 45		
	Vars Live on Exit:  45		
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 12)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = search_const(scope<1> ;name: Story, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_4 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_5 = call_1o(%v_4, :'story_id' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_4[2.7 ] ) 
		%v_6 = copy({:'short_id'=>%v_5})		--org.jruby.ir.instructions.CopyInstr(	%v_5[2.8 ] ) 
		%v_7 = call_1o(%v_3, %v_6 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_3[2.6 ] %v_6[2.9 ] ) 
		%v_8 = call_0o(%v_7 ;n:first, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_7[2.10 ] ) 
		story = copy(%v_8)		--org.jruby.ir.instructions.CopyInstr(	%v_8[2.11 ] ) 
		%v_9 = copy(%v_8)		--org.jruby.ir.instructions.CopyInstr(	%v_8[2.11 ] ) 
		%v_10 = call_0o(%v_8 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_8[2.11 ] ) 
		b_true(LBL_2:19, %v_10)		--org.jruby.ir.instructions.BTrueInstr(	%v_10[2.14 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 10 12 45		
	Vars Live on Exit:  0 10 45		
	outgoing edges:4, 
	Instructions:
		%v_11 = call_0o(story ;n:is_gone?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	story[2.12 ] ) 
		%v_10 = copy(%v_11)		--org.jruby.ir.instructions.CopyInstr(	%v_11[3.0 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0 10 45		
	Vars Live on Exit:  0 10 12 45		
	outgoing edges:5, 6, 
	Instructions:
		b_false(LBL_0:26, %v_10)		--org.jruby.ir.instructions.BFalseInstr(	%v_10[3.1 2.14 ] ) 
PRINT info for BB 5:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:34, 
	Instructions:
		line_num(;n: 14)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_12 = copy("can't find story")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_13 = copy({:'text'=>%v_12, :'status'=>Fixnum:400})		--org.jruby.ir.instructions.CopyInstr(	%v_12[5.1 ] ) 
		%v_14 = call_1o(%self, %v_13 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_13[5.2 ] ) 
		return(%v_14)		--org.jruby.ir.instructions.ReturnInstr(	%v_14[5.3 ] ) 
PRINT info for BB 6:
	Vars Live on Entry:  0 10 20 26 45		
	Vars Live on Exit:  0 10 45		
	outgoing edges:8, 9, 
	Instructions:
		%v_15 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 17)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_16 = call_0o(story ;n:comments, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	story[2.12 ] ) 
		%v_17 = call_0o(%v_16 ;n:build, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_16[6.2 ] ) 
		comment = copy(%v_17)		--org.jruby.ir.instructions.CopyInstr(	%v_17[6.3 ] ) 
		line_num(;n: 18)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_18 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_19 = call_1o(%v_18, :'comment' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_18[6.6 ] ) 
		%v_20 = call_0o(%v_19 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_19[6.7 ] ) 
		attr_assign(comment, %v_20 ;n:comment=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[6.4 ] %v_20[6.8 ] ) #<comment>#	-- [PUT:comment].comment 
		line_num(;n: 19)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_21 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[6.6 2.0 ] %self[6.6 2.0 ] ) #<%self>#	-- [GET:%self].user 
		attr_assign(comment, %v_21 ;n:user=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[6.4 6.9 ] %v_21[6.11 ] ) #<comment>#	-- [PUT:comment].user 
		line_num(;n: 21)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_22 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[6.6 2.0 ] ) 
		%v_23 = call_1o(%v_22, :'hat_id' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_22[6.14 ] ) 
		b_false(LBL_5:52, %v_23)		--org.jruby.ir.instructions.BFalseInstr(	%v_23[6.15 ] ) 
PRINT info for BB 8:
	Vars Live on Entry:  0 10 20 26 45		
	Vars Live on Exit:  0 10 20 45		
	outgoing edges:9, 
	Instructions:
		%v_24 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_25 = call_0o(%v_24 ;n:hats, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_24[8.0 ] ) 
		%v_26 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_27 = call_1o(%v_26, :'hat_id' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_26[8.2 ] ) 
		%v_28 = copy({:'id'=>%v_27})		--org.jruby.ir.instructions.CopyInstr(	%v_27[8.3 ] ) 
		%v_29 = call_1o(%v_25, %v_28 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_25[8.1 ] %v_28[8.4 ] ) 
		%v_23 = copy(%v_29)		--org.jruby.ir.instructions.CopyInstr(	%v_29[8.5 ] ) 
PRINT info for BB 9:
	Vars Live on Entry:  0 10 20 45		
	Vars Live on Exit:  0 10 20 26 45		
	outgoing edges:10, 11, 
	Instructions:
		b_false(LBL_3:59, %v_23)		--org.jruby.ir.instructions.BFalseInstr(	%v_23[8.6 6.15 ] ) 
PRINT info for BB 10:
	Vars Live on Entry:  0 10 20 45		
	Vars Live on Exit:  0 10 20 45		
	outgoing edges:12, 
	Instructions:
		line_num(;n: 22)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_30 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_31 = call_1o(%v_30, :'hat_id' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_30[10.1 ] ) 
		attr_assign(comment, %v_31 ;n:hat_id=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[6.4 6.9 6.12 ] %v_31[10.2 ] ) #<comment>#	-- [PUT:comment].hat_id 
		jump(LBL_4:61)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 11:
	Vars Live on Entry:  0 10 20 45		
	Vars Live on Exit:  0 10 20 45		
	outgoing edges:12, 
	Instructions:
		%v_31 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 12:
	Vars Live on Entry:  0 10 20 45		
	Vars Live on Exit:  0 10 20 45		
	outgoing edges:13, 17, 
	Instructions:
		line_num(;n: 25)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_32 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_33 = call_1o(%v_32, :'parent_comment_short_id' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_32[12.1 ] ) 
		%v_34 = call_0o(%v_33 ;n:present?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_33[12.2 ] ) 
		b_false(LBL_6:90, %v_34)		--org.jruby.ir.instructions.BFalseInstr(	%v_34[12.3 ] ) 
PRINT info for BB 13:
	Vars Live on Entry:  0 10 20 45		
	Vars Live on Exit:  0 10 20		
	outgoing edges:14, 15, 
	Instructions:
		line_num(;n: 26)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_35 = search_const(scope<1> ;name: Comment, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_36 = call_0o(story ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	story[2.12 ] ) 
		%v_37 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_38 = call_1o(%v_37, :'parent_comment_short_id' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_37[13.3 ] ) 
		%v_39 = copy({:'story_id'=>%v_36, :'short_id'=>%v_38})		--org.jruby.ir.instructions.CopyInstr(	%v_36[13.2 ] %v_38[13.4 ] ) 
		%v_40 = call_1o(%v_35, %v_39 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_35[13.1 ] %v_39[13.5 ] ) 
		%v_41 = call_0o(%v_40 ;n:first, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_40[13.6 ] ) 
		pc = copy(%v_41)		--org.jruby.ir.instructions.CopyInstr(	%v_41[13.7 ] ) 
		b_false(LBL_8:81, %v_41)		--org.jruby.ir.instructions.BFalseInstr(	%v_41[13.7 ] ) 
PRINT info for BB 14:
	Vars Live on Entry:  0 10 20 45		
	Vars Live on Exit:  0 10 20 45		
	outgoing edges:18, 
	Instructions:
		line_num(;n: 28)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		attr_assign(comment, pc ;n:parent_comment=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[10.3 6.4 6.9 6.12 ] pc[13.8 ] ) #<comment>#	-- [PUT:comment].parent_comment 
		%v_42 = copy(pc)		--org.jruby.ir.instructions.CopyInstr(	pc[13.8 ] ) 
		jump(LBL_7:92)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 15:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:34, 
	Instructions:
		line_num(;n: 30)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_43 = copy("invalid parent comment")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_44 = copy({:'error'=>%v_43, :'status'=>Fixnum:400})		--org.jruby.ir.instructions.CopyInstr(	%v_43[15.1 ] ) 
		%v_45 = copy({:'json'=>%v_44})		--org.jruby.ir.instructions.CopyInstr(	%v_44[15.2 ] ) 
		%v_46 = call_1o(%self, %v_45 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_45[15.3 ] ) 
		return(%v_46)		--org.jruby.ir.instructions.ReturnInstr(	%v_46[15.4 ] ) 
PRINT info for BB 17:
	Vars Live on Entry:  0 10 20 45		
	Vars Live on Exit:  0 10 20 45		
	outgoing edges:18, 
	Instructions:
		%v_42 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 18:
	Vars Live on Entry:  0 10 20 45 53		
	Vars Live on Exit:  0 10 20 45		
	outgoing edges:19, 20, 
	Instructions:
		line_num(;n: 36)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_47 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_48 = call_1o(%v_47, :'preview' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_47[18.1 ] ) 
		%v_49 = call_0o(%v_48 ;n:blank?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_48[18.2 ] ) 
		b_false(LBL_12:109, %v_49)		--org.jruby.ir.instructions.BFalseInstr(	%v_49[18.3 ] ) 
PRINT info for BB 19:
	Vars Live on Entry:  0 20 45 53		
	Vars Live on Exit:  0 10 20		
	outgoing edges:20, 
	Instructions:
		line_num(;n: 37)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_50 = search_const(scope<1> ;name: Comment, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_51 = call_0o(story ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	story[2.12 ] ) 
		%v_52 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_53 = call_0o(%v_52 ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_52[19.3 ] ) 
		%v_54 = call_0o(comment ;n:parent_comment_id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[14.1 10.3 6.4 6.9 6.12 ] ) 
		%v_55 = copy({:'story_id'=>%v_51, :'user_id'=>%v_53, :'parent_comment_id'=>%v_54})		--org.jruby.ir.instructions.CopyInstr(	%v_51[19.2 ] %v_53[19.4 ] %v_54[19.5 ] ) 
		%v_56 = call_1o(%v_50, %v_55 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_50[19.1 ] %v_55[19.6 ] ) 
		%v_57 = call_0o(%v_56 ;n:first, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_56[19.7 ] ) 
		pc = copy(%v_57)		--org.jruby.ir.instructions.CopyInstr(	%v_57[19.8 ] ) 
		%v_49 = copy(%v_57)		--org.jruby.ir.instructions.CopyInstr(	%v_57[19.8 ] ) 
PRINT info for BB 20:
	Vars Live on Entry:  0 20 45		
	Vars Live on Exit:  0 20 45 53		
	outgoing edges:21, 25, 
	Instructions:
		b_false(LBL_10:136, %v_49)		--org.jruby.ir.instructions.BFalseInstr(	%v_49[19.10 18.3 ] ) 
PRINT info for BB 21:
	Vars Live on Entry:  0 20		
	Vars Live on Exit:  0 20 45		
	outgoing edges:22, 23, 
	Instructions:
		line_num(;n: 39)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_58 = search_const(scope<1> ;name: Time, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_59 = call_0o(%v_58 ;n:now, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_58[21.1 ] ) 
		%v_60 = call_0o(pc ;n:created_at, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	pc[19.9 13.8 ] ) 
		%v_61 = call_1o(%v_59, %v_60 ;n:-, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_59[21.2 ] %v_60[21.3 ] ) 
		%v_62 = call_0o(Fixnum:5 ;n:minutes, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	) 
		%v_63 = call_1o(%v_61, %v_62 ;n:<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_61[21.4 ] %v_62[21.5 ] ) 
		b_false(LBL_13:132, %v_63)		--org.jruby.ir.instructions.BFalseInstr(	%v_63[21.6 ] ) 
PRINT info for BB 22:
	Vars Live on Entry: 
	Vars Live on Exit:  0 20		
	outgoing edges:34, 
	Instructions:
		line_num(;n: 40)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_64 = call_0o(comment ;n:errors, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[14.1 10.3 6.4 6.9 6.12 ] ) 
		%v_65 = copy("^You have already posted a comment ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_66 = copy("here recently.")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_67 = call_1o(%v_65, %v_66 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_65[22.2 ] %v_66[22.3 ] ) 
		%v_68 = call(%v_64, :'comment', %v_67 ;n:add, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%v_64[22.1 ] %v_67[22.4 ] ) 
		line_num(;n: 43)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_69 = copy("commentbox")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_70 = copy("text/html")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_71 = copy({:'comment'=>comment})		--org.jruby.ir.instructions.CopyInstr(	comment[22.1 14.1 10.3 6.4 6.9 6.12 ] ) 
		%v_72 = copy({:'partial'=>%v_69, :'layout'=>false, :'content_type'=>%v_70, :'locals'=>%v_71})		--org.jruby.ir.instructions.CopyInstr(	%v_69[22.7 ] %v_70[22.8 ] %v_71[22.9 ] ) 
		%v_73 = call_1o(%self, %v_72 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_72[22.10 ] ) 
		return(%v_73)		--org.jruby.ir.instructions.ReturnInstr(	%v_73[22.11 ] ) 
PRINT info for BB 23:
	Vars Live on Entry:  0 20		
	Vars Live on Exit:  0 20		
	outgoing edges:26, 
	Instructions:
		%v_74 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(LBL_11:138)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 25:
	Vars Live on Entry:  0 20		
	Vars Live on Exit:  0 20		
	outgoing edges:26, 
	Instructions:
		%v_74 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 26:
	Vars Live on Entry:  0 20 79		
	Vars Live on Exit:  0 20		
	outgoing edges:27, 28, 
	Instructions:
		line_num(;n: 48)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_75 = call_0o(comment ;n:valid?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[14.1 10.3 6.4 6.9 6.12 ] ) 
		b_false(LBL_18:146, %v_75)		--org.jruby.ir.instructions.BFalseInstr(	%v_75[26.1 ] ) 
PRINT info for BB 27:
	Vars Live on Entry:  0 20 79		
	Vars Live on Exit:  0 20		
	outgoing edges:28, 
	Instructions:
		%v_76 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_77 = call_1o(%v_76, :'preview' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_76[27.0 ] ) 
		%v_78 = call_0o(%v_77 ;n:blank?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_77[27.1 ] ) 
		%v_75 = copy(%v_78)		--org.jruby.ir.instructions.CopyInstr(	%v_78[27.2 ] ) 
PRINT info for BB 28:
	Vars Live on Entry:  0 20 79		
	Vars Live on Exit:  0 20 79		
	outgoing edges:29, 30, 
	Instructions:
		b_false(LBL_17:150, %v_75)		--org.jruby.ir.instructions.BFalseInstr(	%v_75[27.3 26.1 ] ) 
PRINT info for BB 29:
	Vars Live on Entry:  0 20 79		
	Vars Live on Exit:  0 20		
	outgoing edges:30, 
	Instructions:
		%v_79 = call_0o(comment ;n:save, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[14.1 10.3 6.4 6.9 6.12 ] ) 
		%v_75 = copy(%v_79)		--org.jruby.ir.instructions.CopyInstr(	%v_79[29.0 ] ) 
PRINT info for BB 30:
	Vars Live on Entry:  0 20		
	Vars Live on Exit:  0 20 79		
	outgoing edges:31, 32, 
	Instructions:
		b_false(LBL_15:162, %v_75)		--org.jruby.ir.instructions.BFalseInstr(	%v_75[29.1 27.3 26.1 ] ) 
PRINT info for BB 31:
	Vars Live on Entry: 
	Vars Live on Exit:  0 20		
	outgoing edges:34, 
	Instructions:
		line_num(;n: 49)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_80 = copy({:'vote'=>Fixnum:1})		--org.jruby.ir.instructions.CopyInstr(	) 
		attr_assign(comment, %v_80 ;n:current_vote=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[14.1 10.3 6.4 6.9 6.12 ] %v_80[31.1 ] ) #<comment>#	-- [PUT:comment].current_vote 
		line_num(;n: 51)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_81 = copy("comments/postedreply")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_82 = copy("text/html")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_83 = copy({:'comment'=>comment})		--org.jruby.ir.instructions.CopyInstr(	comment[31.2 14.1 10.3 6.4 6.9 6.12 ] ) 
		%v_84 = copy({:'partial'=>%v_81, :'layout'=>false, :'content_type'=>%v_82, :'locals'=>%v_83})		--org.jruby.ir.instructions.CopyInstr(	%v_81[31.4 ] %v_82[31.5 ] %v_83[31.6 ] ) 
		%v_85 = call_1o(%self, %v_84 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_84[31.7 ] ) 
		return(%v_85)		--org.jruby.ir.instructions.ReturnInstr(	%v_85[31.8 ] ) 
PRINT info for BB 32:
	Vars Live on Entry: 
	Vars Live on Exit:  0 20		
	outgoing edges:34, 
	Instructions:
		line_num(;n: 54)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		attr_assign(comment, Fixnum:1 ;n:upvotes=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[14.1 10.3 6.4 6.9 6.12 ] ) #<comment>#	-- [PUT:comment].upvotes 
		line_num(;n: 55)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_86 = copy({:'vote'=>Fixnum:1})		--org.jruby.ir.instructions.CopyInstr(	) 
		attr_assign(comment, %v_86 ;n:current_vote=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[32.1 14.1 10.3 6.4 6.9 6.12 ] %v_86[32.3 ] ) #<comment>#	-- [PUT:comment].current_vote 
		line_num(;n: 57)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_87 = call_1o(%self, comment ;n:preview, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] comment[32.1 32.4 14.1 10.3 6.4 6.9 6.12 ] ) 
		return(%v_87)		--org.jruby.ir.instructions.ReturnInstr(	%v_87[32.6 ] ) 
PRINT info for BB 34:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = show
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:8, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 4 5		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 62)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:find_comment, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		comment = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.6 ] ) 
		b_false(LBL_2:13, %v_3)		--org.jruby.ir.instructions.BFalseInstr(	%v_3[2.6 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 4 5		
	Vars Live on Exit:  0 5		
	outgoing edges:4, 
	Instructions:
		%v_4 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_5 = call_1o(comment, %v_4 ;n:is_editable_by_user?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	comment[2.7 ] %v_4[3.0 ] ) 
		%v_3 = copy(%v_5)		--org.jruby.ir.instructions.CopyInstr(	%v_5[3.1 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0 5		
	Vars Live on Exit:  0 4 5		
	outgoing edges:5, 6, 
	Instructions:
		%v_6 = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[3.2 2.6 ] ) 
		%v_7 = call_0o(%v_3 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[3.2 2.6 ] ) 
		b_false(LBL_0:22, %v_7)		--org.jruby.ir.instructions.BFalseInstr(	%v_7[4.1 ] ) 
PRINT info for BB 5:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:8, 
	Instructions:
		line_num(;n: 63)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_8 = copy("can't find comment")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_9 = copy({:'text'=>%v_8, :'status'=>Fixnum:400})		--org.jruby.ir.instructions.CopyInstr(	%v_8[5.1 ] ) 
		%v_10 = call_1o(%self, %v_9 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_9[5.2 ] ) 
		return(%v_10)		--org.jruby.ir.instructions.ReturnInstr(	%v_10[5.3 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit:  0 5		
	outgoing edges:8, 
	Instructions:
		%v_11 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 66)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_12 = copy("comment")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_13 = copy("text/html")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_14 = copy({:'comment'=>comment})		--org.jruby.ir.instructions.CopyInstr(	comment[2.7 ] ) 
		%v_15 = copy({:'partial'=>%v_12, :'layout'=>false, :'content_type'=>%v_13, :'locals'=>%v_14})		--org.jruby.ir.instructions.CopyInstr(	%v_12[6.2 ] %v_13[6.3 ] %v_14[6.4 ] ) 
		%v_16 = call_1o(%self, %v_15 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_15[6.5 ] ) 
		return(%v_16)		--org.jruby.ir.instructions.ReturnInstr(	%v_16[6.6 ] ) 
PRINT info for BB 8:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = show_short_id
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 5		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 71)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:find_comment, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		comment = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.6 ] ) 
		%v_4 = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.6 ] ) 
		%v_5 = call_0o(%v_3 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		b_false(LBL_0:17, %v_5)		--org.jruby.ir.instructions.BFalseInstr(	%v_5[2.9 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:6, 
	Instructions:
		line_num(;n: 72)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_6 = copy("can't find comment")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_7 = copy({:'text'=>%v_6, :'status'=>Fixnum:400})		--org.jruby.ir.instructions.CopyInstr(	%v_6[3.1 ] ) 
		%v_8 = call_1o(%self, %v_7 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_7[3.2 ] ) 
		return(%v_8)		--org.jruby.ir.instructions.ReturnInstr(	%v_8[3.3 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit:  0 5		
	outgoing edges:6, 
	Instructions:
		%v_9 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 75)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_10 = call_0o(comment ;n:as_json, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[2.7 ] ) 
		%v_11 = copy({:'json'=>%v_10})		--org.jruby.ir.instructions.CopyInstr(	%v_10[4.2 ] ) 
		%v_12 = call_1o(%self, %v_11 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_11[4.3 ] ) 
		return(%v_12)		--org.jruby.ir.instructions.ReturnInstr(	%v_12[4.4 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = redirect_from_short_id
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 5		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 80)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:find_comment, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		comment = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.6 ] ) 
		b_false(LBL_0:14, %v_3)		--org.jruby.ir.instructions.BFalseInstr(	%v_3[2.6 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0 5		
	outgoing edges:6, 
	Instructions:
		line_num(;n: 81)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_4 = call_0o(comment ;n:url, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[2.7 ] ) 
		%v_5 = call_1o(%self, %v_4 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_4[3.1 ] ) 
		return(%v_5)		--org.jruby.ir.instructions.ReturnInstr(	%v_5[3.2 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:6, 
	Instructions:
		line_num(;n: 83)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_7 = copy("can't find comment")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_8 = copy({:'text'=>%v_7, :'status'=>Fixnum:400})		--org.jruby.ir.instructions.CopyInstr(	%v_7[4.1 ] ) 
		%v_9 = call_1o(%self, %v_8 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_8[4.2 ] ) 
		return(%v_9)		--org.jruby.ir.instructions.ReturnInstr(	%v_9[4.3 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = edit
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:8, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 4 5		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 89)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:find_comment, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		comment = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.6 ] ) 
		b_false(LBL_2:13, %v_3)		--org.jruby.ir.instructions.BFalseInstr(	%v_3[2.6 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 4 5		
	Vars Live on Exit:  0 5		
	outgoing edges:4, 
	Instructions:
		%v_4 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_5 = call_1o(comment, %v_4 ;n:is_editable_by_user?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	comment[2.7 ] %v_4[3.0 ] ) 
		%v_3 = copy(%v_5)		--org.jruby.ir.instructions.CopyInstr(	%v_5[3.1 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0 5		
	Vars Live on Exit:  0 4 5		
	outgoing edges:5, 6, 
	Instructions:
		%v_6 = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[3.2 2.6 ] ) 
		%v_7 = call_0o(%v_3 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[3.2 2.6 ] ) 
		b_false(LBL_0:22, %v_7)		--org.jruby.ir.instructions.BFalseInstr(	%v_7[4.1 ] ) 
PRINT info for BB 5:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:8, 
	Instructions:
		line_num(;n: 90)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_8 = copy("can't find comment")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_9 = copy({:'text'=>%v_8, :'status'=>Fixnum:400})		--org.jruby.ir.instructions.CopyInstr(	%v_8[5.1 ] ) 
		%v_10 = call_1o(%self, %v_9 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_9[5.2 ] ) 
		return(%v_10)		--org.jruby.ir.instructions.ReturnInstr(	%v_10[5.3 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit:  0 5		
	outgoing edges:8, 
	Instructions:
		%v_11 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 93)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_12 = copy("commentbox")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_13 = copy("text/html")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_14 = copy({:'comment'=>comment})		--org.jruby.ir.instructions.CopyInstr(	comment[2.7 ] ) 
		%v_15 = copy({:'partial'=>%v_12, :'layout'=>false, :'content_type'=>%v_13, :'locals'=>%v_14})		--org.jruby.ir.instructions.CopyInstr(	%v_12[6.2 ] %v_13[6.3 ] %v_14[6.4 ] ) 
		%v_16 = call_1o(%self, %v_15 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_15[6.5 ] ) 
		return(%v_16)		--org.jruby.ir.instructions.ReturnInstr(	%v_16[6.6 ] ) 
PRINT info for BB 8:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = reply
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 5		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 98)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:find_comment, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		parent_comment = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.6 ] ) 
		%v_4 = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.6 ] ) 
		%v_5 = call_0o(%v_3 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		b_false(LBL_0:17, %v_5)		--org.jruby.ir.instructions.BFalseInstr(	%v_5[2.9 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:6, 
	Instructions:
		line_num(;n: 99)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_6 = copy("can't find comment")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_7 = copy({:'text'=>%v_6, :'status'=>Fixnum:400})		--org.jruby.ir.instructions.CopyInstr(	%v_6[3.1 ] ) 
		%v_8 = call_1o(%self, %v_7 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_7[3.2 ] ) 
		return(%v_8)		--org.jruby.ir.instructions.ReturnInstr(	%v_8[3.3 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit:  0 5		
	outgoing edges:6, 
	Instructions:
		%v_9 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 102)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_10 = search_const(scope<1> ;name: Comment, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_11 = call_0o(%v_10 ;n:new, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_10[4.2 ] ) 
		comment = copy(%v_11)		--org.jruby.ir.instructions.CopyInstr(	%v_11[4.3 ] ) 
		line_num(;n: 103)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_12 = call_0o(parent_comment ;n:story, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	parent_comment[2.7 ] ) 
		attr_assign(comment, %v_12 ;n:story=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[4.4 ] %v_12[4.6 ] ) #<comment>#	-- [PUT:comment].story 
		line_num(;n: 104)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		attr_assign(comment, parent_comment ;n:parent_comment=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[4.4 4.7 ] parent_comment[4.6 2.7 ] ) #<comment>#	-- [PUT:comment].parent_comment 
		line_num(;n: 106)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_13 = copy("commentbox")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_14 = copy("text/html")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_15 = copy({:'comment'=>comment})		--org.jruby.ir.instructions.CopyInstr(	comment[4.4 4.7 4.9 ] ) 
		%v_16 = copy({:'partial'=>%v_13, :'layout'=>false, :'content_type'=>%v_14, :'locals'=>%v_15})		--org.jruby.ir.instructions.CopyInstr(	%v_13[4.11 ] %v_14[4.12 ] %v_15[4.13 ] ) 
		%v_17 = call_1o(%self, %v_16 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_16[4.14 ] ) 
		return(%v_17)		--org.jruby.ir.instructions.ReturnInstr(	%v_17[4.15 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = delete
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:8, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 4 5		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 111)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:find_comment, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		comment = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.6 ] ) 
		b_false(LBL_2:13, %v_3)		--org.jruby.ir.instructions.BFalseInstr(	%v_3[2.6 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 4 5		
	Vars Live on Exit:  0 5		
	outgoing edges:4, 
	Instructions:
		%v_4 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_5 = call_1o(comment, %v_4 ;n:is_deletable_by_user?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	comment[2.7 ] %v_4[3.0 ] ) 
		%v_3 = copy(%v_5)		--org.jruby.ir.instructions.CopyInstr(	%v_5[3.1 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0 5		
	Vars Live on Exit:  0 4 5		
	outgoing edges:5, 6, 
	Instructions:
		%v_6 = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[3.2 2.6 ] ) 
		%v_7 = call_0o(%v_3 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[3.2 2.6 ] ) 
		b_false(LBL_0:22, %v_7)		--org.jruby.ir.instructions.BFalseInstr(	%v_7[4.1 ] ) 
PRINT info for BB 5:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:8, 
	Instructions:
		line_num(;n: 112)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_8 = copy("can't find comment")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_9 = copy({:'text'=>%v_8, :'status'=>Fixnum:400})		--org.jruby.ir.instructions.CopyInstr(	%v_8[5.1 ] ) 
		%v_10 = call_1o(%self, %v_9 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_9[5.2 ] ) 
		return(%v_10)		--org.jruby.ir.instructions.ReturnInstr(	%v_10[5.3 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit:  0 5		
	outgoing edges:8, 
	Instructions:
		%v_11 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 115)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_12 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_13 = call_1o(comment, %v_12 ;n:delete_for_user, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	comment[2.7 ] %v_12[6.2 ] ) 
		line_num(;n: 117)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_14 = copy("comment")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_15 = copy("text/html")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_16 = copy({:'comment'=>comment})		--org.jruby.ir.instructions.CopyInstr(	comment[6.3 2.7 ] ) 
		%v_17 = copy({:'partial'=>%v_14, :'layout'=>false, :'content_type'=>%v_15, :'locals'=>%v_16})		--org.jruby.ir.instructions.CopyInstr(	%v_14[6.5 ] %v_15[6.6 ] %v_16[6.7 ] ) 
		%v_18 = call_1o(%self, %v_17 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_17[6.8 ] ) 
		return(%v_18)		--org.jruby.ir.instructions.ReturnInstr(	%v_18[6.9 ] ) 
PRINT info for BB 8:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = undelete
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:8, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 4 5		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 122)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:find_comment, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		comment = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.6 ] ) 
		b_false(LBL_2:13, %v_3)		--org.jruby.ir.instructions.BFalseInstr(	%v_3[2.6 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 4 5		
	Vars Live on Exit:  0 5		
	outgoing edges:4, 
	Instructions:
		%v_4 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_5 = call_1o(comment, %v_4 ;n:is_undeletable_by_user?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	comment[2.7 ] %v_4[3.0 ] ) 
		%v_3 = copy(%v_5)		--org.jruby.ir.instructions.CopyInstr(	%v_5[3.1 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0 5		
	Vars Live on Exit:  0 4 5		
	outgoing edges:5, 6, 
	Instructions:
		%v_6 = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[3.2 2.6 ] ) 
		%v_7 = call_0o(%v_3 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[3.2 2.6 ] ) 
		b_false(LBL_0:22, %v_7)		--org.jruby.ir.instructions.BFalseInstr(	%v_7[4.1 ] ) 
PRINT info for BB 5:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:8, 
	Instructions:
		line_num(;n: 123)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_8 = copy("can't find comment")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_9 = copy({:'text'=>%v_8, :'status'=>Fixnum:400})		--org.jruby.ir.instructions.CopyInstr(	%v_8[5.1 ] ) 
		%v_10 = call_1o(%self, %v_9 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_9[5.2 ] ) 
		return(%v_10)		--org.jruby.ir.instructions.ReturnInstr(	%v_10[5.3 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit:  0 5		
	outgoing edges:8, 
	Instructions:
		%v_11 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 126)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_12 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_13 = call_1o(comment, %v_12 ;n:undelete_for_user, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	comment[2.7 ] %v_12[6.2 ] ) 
		line_num(;n: 128)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_14 = copy("comment")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_15 = copy("text/html")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_16 = copy({:'comment'=>comment})		--org.jruby.ir.instructions.CopyInstr(	comment[6.3 2.7 ] ) 
		%v_17 = copy({:'partial'=>%v_14, :'layout'=>false, :'content_type'=>%v_15, :'locals'=>%v_16})		--org.jruby.ir.instructions.CopyInstr(	%v_14[6.5 ] %v_15[6.6 ] %v_16[6.7 ] ) 
		%v_18 = call_1o(%self, %v_17 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_17[6.8 ] ) 
		return(%v_18)		--org.jruby.ir.instructions.ReturnInstr(	%v_18[6.9 ] ) 
PRINT info for BB 8:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = update
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:18, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 4 5		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 133)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:find_comment, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		comment = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.6 ] ) 
		b_false(LBL_2:13, %v_3)		--org.jruby.ir.instructions.BFalseInstr(	%v_3[2.6 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 4 5		
	Vars Live on Exit:  0 5		
	outgoing edges:4, 
	Instructions:
		%v_4 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_5 = call_1o(comment, %v_4 ;n:is_editable_by_user?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	comment[2.7 ] %v_4[3.0 ] ) 
		%v_3 = copy(%v_5)		--org.jruby.ir.instructions.CopyInstr(	%v_5[3.1 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0 5		
	Vars Live on Exit:  0 4 5		
	outgoing edges:5, 6, 
	Instructions:
		%v_6 = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[3.2 2.6 ] ) 
		%v_7 = call_0o(%v_3 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[3.2 2.6 ] ) 
		b_false(LBL_0:22, %v_7)		--org.jruby.ir.instructions.BFalseInstr(	%v_7[4.1 ] ) 
PRINT info for BB 5:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:18, 
	Instructions:
		line_num(;n: 134)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_8 = copy("can't find comment")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_9 = copy({:'text'=>%v_8, :'status'=>Fixnum:400})		--org.jruby.ir.instructions.CopyInstr(	%v_8[5.1 ] ) 
		%v_10 = call_1o(%self, %v_9 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_9[5.2 ] ) 
		return(%v_10)		--org.jruby.ir.instructions.ReturnInstr(	%v_10[5.3 ] ) 
PRINT info for BB 6:
	Vars Live on Entry:  0 5 17		
	Vars Live on Exit:  0 5		
	outgoing edges:8, 9, 
	Instructions:
		%v_11 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 137)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_12 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_13 = call_1o(%v_12, :'comment' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_12[6.2 ] ) 
		attr_assign(comment, %v_13 ;n:comment=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[2.7 ] %v_13[6.3 ] ) #<comment>#	-- [PUT:comment].comment 
		line_num(;n: 138)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		attr_assign(comment, nil ;n:hat_id=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[6.4 2.7 ] ) #<comment>#	-- [PUT:comment].hat_id 
		line_num(;n: 139)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_14 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[6.2 2.0 ] ) 
		%v_15 = call_1o(%v_14, :'hat_id' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_14[6.8 ] ) 
		b_false(LBL_5:42, %v_15)		--org.jruby.ir.instructions.BFalseInstr(	%v_15[6.9 ] ) 
PRINT info for BB 8:
	Vars Live on Entry:  0 5 17		
	Vars Live on Exit:  0 5		
	outgoing edges:9, 
	Instructions:
		%v_16 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_17 = call_0o(%v_16 ;n:hats, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_16[8.0 ] ) 
		%v_18 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_19 = call_1o(%v_18, :'hat_id' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_18[8.2 ] ) 
		%v_20 = copy({:'id'=>%v_19})		--org.jruby.ir.instructions.CopyInstr(	%v_19[8.3 ] ) 
		%v_21 = call_1o(%v_17, %v_20 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_17[8.1 ] %v_20[8.4 ] ) 
		%v_15 = copy(%v_21)		--org.jruby.ir.instructions.CopyInstr(	%v_21[8.5 ] ) 
PRINT info for BB 9:
	Vars Live on Entry:  0 5		
	Vars Live on Exit:  0 5 17		
	outgoing edges:10, 11, 
	Instructions:
		b_false(LBL_3:49, %v_15)		--org.jruby.ir.instructions.BFalseInstr(	%v_15[8.6 6.9 ] ) 
PRINT info for BB 10:
	Vars Live on Entry:  0 5		
	Vars Live on Exit:  0 5		
	outgoing edges:12, 
	Instructions:
		line_num(;n: 140)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_22 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_23 = call_1o(%v_22, :'hat_id' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_22[10.1 ] ) 
		attr_assign(comment, %v_23 ;n:hat_id=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[6.4 6.6 2.7 ] %v_23[10.2 ] ) #<comment>#	-- [PUT:comment].hat_id 
		jump(LBL_4:51)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 11:
	Vars Live on Entry:  0 5		
	Vars Live on Exit:  0 5		
	outgoing edges:12, 
	Instructions:
		%v_23 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 12:
	Vars Live on Entry:  0 5 28		
	Vars Live on Exit:  0 5		
	outgoing edges:13, 14, 
	Instructions:
		line_num(;n: 143)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_24 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_25 = call_1o(%v_24, :'preview' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_24[12.1 ] ) 
		%v_26 = call_0o(%v_25 ;n:blank?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_25[12.2 ] ) 
		b_false(LBL_8:59, %v_26)		--org.jruby.ir.instructions.BFalseInstr(	%v_26[12.3 ] ) 
PRINT info for BB 13:
	Vars Live on Entry:  0 5 28		
	Vars Live on Exit:  0 5		
	outgoing edges:14, 
	Instructions:
		%v_27 = call_0o(comment ;n:save, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[10.3 6.4 6.6 2.7 ] ) 
		%v_26 = copy(%v_27)		--org.jruby.ir.instructions.CopyInstr(	%v_27[13.0 ] ) 
PRINT info for BB 14:
	Vars Live on Entry:  0 5		
	Vars Live on Exit:  0 5 28		
	outgoing edges:15, 16, 
	Instructions:
		b_false(LBL_6:80, %v_26)		--org.jruby.ir.instructions.BFalseInstr(	%v_26[13.1 12.3 ] ) 
PRINT info for BB 15:
	Vars Live on Entry: 
	Vars Live on Exit:  0 5		
	outgoing edges:18, 
	Instructions:
		line_num(;n: 144)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_28 = search_const(scope<1> ;name: Vote, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_29 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_30 = call_0o(%v_29 ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_29[15.2 ] ) 
		%v_31 = call_0o(comment ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[10.3 6.4 6.6 2.7 ] ) 
		%v_32 = copy(Array:[%v_31])		--org.jruby.ir.instructions.CopyInstr(	%v_31[15.4 ] ) 
		%v_33 = call(%v_28, %v_30, %v_32 ;n:comment_votes_by_user_for_comment_ids_hash, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%v_28[15.1 ] %v_30[15.3 ] %v_32[15.5 ] ) 
		votes = copy(%v_33)		--org.jruby.ir.instructions.CopyInstr(	%v_33[15.6 ] ) 
		line_num(;n: 146)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_34 = call_0o(comment ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[15.4 10.3 6.4 6.6 2.7 ] ) 
		%v_35 = call_1o(votes, %v_34 ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	votes[15.7 ] %v_34[15.9 ] ) 
		attr_assign(comment, %v_35 ;n:current_vote=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[15.4 15.9 10.3 6.4 6.6 2.7 ] %v_35[15.10 ] ) #<comment>#	-- [PUT:comment].current_vote 
		line_num(;n: 148)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_36 = copy("comments/comment")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_37 = copy("text/html")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_38 = copy({:'comment'=>comment})		--org.jruby.ir.instructions.CopyInstr(	comment[15.4 15.9 15.11 10.3 6.4 6.6 2.7 ] ) 
		%v_39 = copy({:'partial'=>%v_36, :'layout'=>false, :'content_type'=>%v_37, :'locals'=>%v_38})		--org.jruby.ir.instructions.CopyInstr(	%v_36[15.13 ] %v_37[15.14 ] %v_38[15.15 ] ) 
		%v_40 = call_1o(%self, %v_39 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_39[15.16 ] ) 
		return(%v_40)		--org.jruby.ir.instructions.ReturnInstr(	%v_40[15.17 ] ) 
PRINT info for BB 16:
	Vars Live on Entry: 
	Vars Live on Exit:  0 5		
	outgoing edges:18, 
	Instructions:
		line_num(;n: 151)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_41 = copy({:'vote'=>Fixnum:1})		--org.jruby.ir.instructions.CopyInstr(	) 
		attr_assign(comment, %v_41 ;n:current_vote=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[10.3 6.4 6.6 2.7 ] %v_41[16.1 ] ) #<comment>#	-- [PUT:comment].current_vote 
		line_num(;n: 153)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_42 = call_1o(%self, comment ;n:preview, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] comment[16.2 10.3 6.4 6.6 2.7 ] ) 
		return(%v_42)		--org.jruby.ir.instructions.ReturnInstr(	%v_42[16.4 ] ) 
PRINT info for BB 18:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = unvote
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 5		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 158)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:find_comment, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		comment = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.6 ] ) 
		%v_4 = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.6 ] ) 
		%v_5 = call_0o(%v_3 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		b_false(LBL_0:17, %v_5)		--org.jruby.ir.instructions.BFalseInstr(	%v_5[2.9 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:6, 
	Instructions:
		line_num(;n: 159)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_6 = copy("can't find comment")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_7 = copy({:'text'=>%v_6, :'status'=>Fixnum:400})		--org.jruby.ir.instructions.CopyInstr(	%v_6[3.1 ] ) 
		%v_8 = call_1o(%self, %v_7 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_7[3.2 ] ) 
		return(%v_8)		--org.jruby.ir.instructions.ReturnInstr(	%v_8[3.3 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit:  0 5		
	outgoing edges:6, 
	Instructions:
		%v_9 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 162)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_10 = search_const(scope<1> ;name: Vote, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_11 = call_0o(comment ;n:story_id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[2.7 ] ) 
		%v_12 = call_0o(comment ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[4.3 2.7 ] ) 
		%v_13 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_14 = call_0o(%v_13 ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_13[4.5 ] ) 
		%v_15 = call(%v_10, Fixnum:0, %v_11, %v_12, %v_14, nil ;n:vote_thusly_on_story_or_comment_for_user_because, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%v_10[4.2 ] %v_11[4.3 ] %v_12[4.4 ] %v_14[4.6 ] ) 
		line_num(;n: 165)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_16 = copy("ok")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_17 = copy({:'text'=>%v_16})		--org.jruby.ir.instructions.CopyInstr(	%v_16[4.9 ] ) 
		%v_18 = call_1o(%self, %v_17 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_17[4.10 ] ) 
		return(%v_18)		--org.jruby.ir.instructions.ReturnInstr(	%v_18[4.11 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = upvote
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 5		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 170)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:find_comment, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		comment = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.6 ] ) 
		%v_4 = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.6 ] ) 
		%v_5 = call_0o(%v_3 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		b_false(LBL_0:17, %v_5)		--org.jruby.ir.instructions.BFalseInstr(	%v_5[2.9 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:6, 
	Instructions:
		line_num(;n: 171)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_6 = copy("can't find comment")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_7 = copy({:'text'=>%v_6, :'status'=>Fixnum:400})		--org.jruby.ir.instructions.CopyInstr(	%v_6[3.1 ] ) 
		%v_8 = call_1o(%self, %v_7 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_7[3.2 ] ) 
		return(%v_8)		--org.jruby.ir.instructions.ReturnInstr(	%v_8[3.3 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit:  0 5		
	outgoing edges:6, 
	Instructions:
		%v_9 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 174)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_10 = search_const(scope<1> ;name: Vote, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_11 = call_0o(comment ;n:story_id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[2.7 ] ) 
		%v_12 = call_0o(comment ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[4.3 2.7 ] ) 
		%v_13 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_14 = call_0o(%v_13 ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_13[4.5 ] ) 
		%v_15 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_16 = call_1o(%v_15, :'reason' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_15[4.7 ] ) 
		%v_17 = call(%v_10, Fixnum:1, %v_11, %v_12, %v_14, %v_16 ;n:vote_thusly_on_story_or_comment_for_user_because, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%v_10[4.2 ] %v_11[4.3 ] %v_12[4.4 ] %v_14[4.6 ] %v_16[4.8 ] ) 
		line_num(;n: 177)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_18 = copy("ok")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_19 = copy({:'text'=>%v_18})		--org.jruby.ir.instructions.CopyInstr(	%v_18[4.11 ] ) 
		%v_20 = call_1o(%self, %v_19 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[4.7 2.0 ] %v_19[4.12 ] ) 
		return(%v_20)		--org.jruby.ir.instructions.ReturnInstr(	%v_20[4.13 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = downvote
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:14, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 5		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 182)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:find_comment, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		comment = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.6 ] ) 
		%v_4 = copy(%v_3)		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.6 ] ) 
		%v_5 = call_0o(%v_3 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		b_false(LBL_0:17, %v_5)		--org.jruby.ir.instructions.BFalseInstr(	%v_5[2.9 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:14, 
	Instructions:
		line_num(;n: 183)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_6 = copy("can't find comment")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_7 = copy({:'text'=>%v_6, :'status'=>Fixnum:400})		--org.jruby.ir.instructions.CopyInstr(	%v_6[3.1 ] ) 
		%v_8 = call_1o(%self, %v_7 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_7[3.2 ] ) 
		return(%v_8)		--org.jruby.ir.instructions.ReturnInstr(	%v_8[3.3 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0 5 12 13		
	Vars Live on Exit:  0 5		
	outgoing edges:6, 7, 
	Instructions:
		%v_9 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 186)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_10 = search_const(scope<1> ;name: Vote, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_11 = inheritance_search_const(%v_10 ;name: COMMENT_REASONS, no_priv: true)		--org.jruby.ir.instructions.InheritanceSearchConstInstr(	%v_10[4.2 ] ) 
		bne(LBL_4:25, %v_11, %undefined)		--org.jruby.ir.instructions.BNEInstr(	%v_11[4.3 ] ) 
PRINT info for BB 6:
	Vars Live on Entry:  0 5 13		
	Vars Live on Exit:  0 5 12		
	outgoing edges:7, 
	Instructions:
		%v_11 = const_missing(%v_10, :'COMMENT_REASONS' ;n:const_missing, t:FU, cl:false, missing: COMMENT_REASONS)		--org.jruby.ir.instructions.ConstMissingInstr(	%v_10[4.2 ] ) 
PRINT info for BB 7:
	Vars Live on Entry:  0 5		
	Vars Live on Exit:  0 5 13		
	outgoing edges:8, 9, 
	Instructions:
		%v_12 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_13 = call_1o(%v_12, :'reason' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_12[7.0 ] ) 
		%v_14 = call_1o(%v_11, %v_13 ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_11[6.0 4.3 ] %v_13[7.1 ] ) 
		%v_15 = call_0o(%v_14 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_14[7.2 ] ) 
		b_false(LBL_2:36, %v_15)		--org.jruby.ir.instructions.BFalseInstr(	%v_15[7.3 ] ) 
PRINT info for BB 8:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:14, 
	Instructions:
		line_num(;n: 187)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_16 = copy("invalid reason")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_17 = copy({:'text'=>%v_16, :'status'=>Fixnum:400})		--org.jruby.ir.instructions.CopyInstr(	%v_16[8.1 ] ) 
		%v_18 = call_1o(%self, %v_17 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_17[8.2 ] ) 
		return(%v_18)		--org.jruby.ir.instructions.ReturnInstr(	%v_18[8.3 ] ) 
PRINT info for BB 9:
	Vars Live on Entry:  0 5		
	Vars Live on Exit:  0 5		
	outgoing edges:11, 12, 
	Instructions:
		%v_19 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 190)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_20 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_21 = call_1o(%v_20, comment ;n:can_downvote?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_20[9.2 ] comment[2.7 ] ) 
		%v_22 = call_0o(%v_21 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_21[9.3 ] ) 
		b_false(LBL_5:49, %v_22)		--org.jruby.ir.instructions.BFalseInstr(	%v_22[9.4 ] ) 
PRINT info for BB 11:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:14, 
	Instructions:
		line_num(;n: 191)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_23 = copy("not permitted to downvote")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_24 = copy({:'text'=>%v_23, :'status'=>Fixnum:400})		--org.jruby.ir.instructions.CopyInstr(	%v_23[11.1 ] ) 
		%v_25 = call_1o(%self, %v_24 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_24[11.2 ] ) 
		return(%v_25)		--org.jruby.ir.instructions.ReturnInstr(	%v_25[11.3 ] ) 
PRINT info for BB 12:
	Vars Live on Entry: 
	Vars Live on Exit:  0 5		
	outgoing edges:14, 
	Instructions:
		%v_26 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 194)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_27 = search_const(scope<1> ;name: Vote, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_28 = call_0o(comment ;n:story_id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[2.7 ] ) 
		%v_29 = call_0o(comment ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[12.3 2.7 ] ) 
		%v_30 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_31 = call_0o(%v_30 ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_30[12.5 ] ) 
		%v_32 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_33 = call_1o(%v_32, :'reason' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_32[12.7 ] ) 
		%v_34 = call(%v_27, Fixnum:-1, %v_28, %v_29, %v_31, %v_33 ;n:vote_thusly_on_story_or_comment_for_user_because, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%v_27[12.2 ] %v_28[12.3 ] %v_29[12.4 ] %v_31[12.6 ] %v_33[12.8 ] ) 
		line_num(;n: 197)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_35 = copy("ok")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_36 = copy({:'text'=>%v_35})		--org.jruby.ir.instructions.CopyInstr(	%v_35[12.11 ] ) 
		%v_37 = call_1o(%self, %v_36 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[12.7 2.0 ] %v_36[12.12 ] ) 
		return(%v_37)		--org.jruby.ir.instructions.ReturnInstr(	%v_37[12.13 ] ) 
PRINT info for BB 14:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = index
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:16, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 5		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 202)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_4 = runtime_helper(%self, "@rss_link" ;method: IS_DEFINED_INSTANCE_VAR)		--org.jruby.ir.instructions.RuntimeHelperCall(	%self[2.0 ] ) 
		%v_3 = copy(%v_4)		--org.jruby.ir.instructions.CopyInstr(	%v_4[2.6 ] ) 
		b_nil(LBL_1:12, %v_4)		--org.jruby.ir.instructions.BNilInstr(	%v_4[2.6 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 5		
	Vars Live on Exit:  0		
	outgoing edges:4, 
	Instructions:
		%v_5 = get_field(%self ;name: @rss_link)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].rss_link 
		%v_3 = copy(%v_5)		--org.jruby.ir.instructions.CopyInstr(	%v_5[3.0 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0 5		
	outgoing edges:5, 9, 
	Instructions:
		b_true(LBL_0:32, %v_3)		--org.jruby.ir.instructions.BTrueInstr(	%v_3[3.1 2.7 ] ) 
PRINT info for BB 5:
	Vars Live on Entry:  0 7 8		
	Vars Live on Exit:  0		
	outgoing edges:6, 7, 
	Instructions:
		%v_6 = copy("RSS 2.0 - Newest Comments")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_7 = copy("/comments.rss")		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 203)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_8 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		b_false(LBL_2:24, %v_8)		--org.jruby.ir.instructions.BFalseInstr(	%v_8[5.3 ] ) 
PRINT info for BB 6:
	Vars Live on Entry:  0 7 8 13		
	Vars Live on Exit:  0 7 8		
	outgoing edges:8, 
	Instructions:
		%v_9 = copy("?token=")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_10 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_11 = call_0o(%v_10 ;n:rss_token, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_10[6.1 ] ) 
		%v_12 = build_compound_string(%v_9, #{%v_11})		--org.jruby.ir.instructions.BuildCompoundStringInstr(	%v_9[6.0 ] %v_11[6.2 ] ) 
		jump(LBL_3:27)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 7:
	Vars Live on Entry:  0 7 8 13		
	Vars Live on Exit:  0 7 8		
	outgoing edges:8, 
	Instructions:
		%v_13 = copy("")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_12 = copy(%v_13)		--org.jruby.ir.instructions.CopyInstr(	%v_13[7.0 ] ) 
PRINT info for BB 8:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0 7 8 13		
	outgoing edges:9, 
	Instructions:
		%v_14 = build_compound_string(%v_7, #{%v_12})		--org.jruby.ir.instructions.BuildCompoundStringInstr(	%v_7[5.1 ] %v_12[7.1 6.3 ] ) 
		%v_15 = copy({:'title'=>%v_6, :'href'=>%v_14})		--org.jruby.ir.instructions.CopyInstr(	%v_6[5.0 ] %v_14[8.0 ] ) 
		put_field(%self, %v_15 ;name: @rss_link)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 ] %v_15[8.1 ] ) #<%self>#	-- [PUT:%self].rss_link 
		%v_5 = copy(%v_15)		--org.jruby.ir.instructions.CopyInstr(	%v_15[8.1 ] ) 
PRINT info for BB 9:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:10, 11, 
	Instructions:
		line_num(;n: 205)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_16 = copy("Newest Comments")		--org.jruby.ir.instructions.CopyInstr(	) 
		put_field(%self, %v_16 ;name: @title)		--org.jruby.ir.instructions.PutFieldInstr(	%self[8.2 2.0 ] %v_16[9.1 ] ) #<%self>#	-- [PUT:%self].title 
		put_field(%self, %v_16 ;name: @heading)		--org.jruby.ir.instructions.PutFieldInstr(	%self[9.2 8.2 2.0 ] %v_16[9.1 ] ) #<%self>#	-- [PUT:%self].heading 
		line_num(;n: 206)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_17 = copy("/comments")		--org.jruby.ir.instructions.CopyInstr(	) 
		put_field(%self, %v_17 ;name: @cur_url)		--org.jruby.ir.instructions.PutFieldInstr(	%self[9.2 9.3 8.2 2.0 ] %v_17[9.5 ] ) #<%self>#	-- [PUT:%self].cur_url 
		line_num(;n: 208)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		put_field(%self, Fixnum:1 ;name: @page)		--org.jruby.ir.instructions.PutFieldInstr(	%self[9.2 9.3 9.6 8.2 2.0 ] ) #<%self>#	-- [PUT:%self].page 
		line_num(;n: 209)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_18 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[9.2 9.3 9.6 9.8 8.2 2.0 ] ) 
		%v_19 = call_1o(%v_18, :'page' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_18[9.10 ] ) 
		%v_20 = call_0o(%v_19 ;n:to_i, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_19[9.11 ] ) 
		%v_21 = call_1f(%v_20, Fixnum:0 ;n:>, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%v_20[9.12 ] ) 
		b_false(LBL_4:54, %v_21)		--org.jruby.ir.instructions.BFalseInstr(	%v_21[9.13 ] ) 
PRINT info for BB 10:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:12, 
	Instructions:
		line_num(;n: 210)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_22 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[9.2 9.3 9.6 9.8 8.2 2.0 ] ) 
		%v_23 = call_1o(%v_22, :'page' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_22[10.1 ] ) 
		%v_24 = call_0o(%v_23 ;n:to_i, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_23[10.2 ] ) 
		put_field(%self, %v_24 ;name: @page)		--org.jruby.ir.instructions.PutFieldInstr(	%self[10.1 9.2 9.3 9.6 9.8 8.2 2.0 ] %v_24[10.3 ] ) #<%self>#	-- [PUT:%self].page 
		jump(LBL_5:56)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 11:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:12, 
	Instructions:
		%v_24 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 12:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:13, 14, 
	Instructions:
		line_num(;n: 213)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_25 = search_const(scope<1> ;name: Comment, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_26 = copy({:'is_deleted'=>false, :'is_moderated'=>false})		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_27 = call_1o(%v_25, %v_26 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_25[12.1 ] %v_26[12.2 ] ) 
		%v_28 = copy("created_at DESC")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_29 = call_1o(%v_27, %v_28 ;n:order, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_27[12.3 ] %v_28[12.4 ] ) 
		line_num(;n: 218)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_30 = get_field(%self ;name: @page)		--org.jruby.ir.instructions.GetFieldInstr(	%self[10.4 9.2 9.3 9.6 9.8 8.2 2.0 ] %self[10.4 9.8 2.0 ] ) #<%self>#	-- [GET:%self].page 
		%v_31 = call_1f(%v_30, Fixnum:1 ;n:-, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%v_30[12.7 ] ) 
		%v_32 = search_const(scope<1> ;name: COMMENTS_PER_PAGE, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_33 = call_1o(%v_31, %v_32 ;n:*, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_31[12.8 ] %v_32[12.9 ] ) 
		%v_34 = call_1o(%v_29, %v_33 ;n:offset, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_29[12.5 ] %v_33[12.10 ] ) 
		%v_35 = search_const(scope<1> ;name: COMMENTS_PER_PAGE, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_36 = call_1o(%v_34, %v_35 ;n:limit, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_34[12.11 ] %v_35[12.12 ] ) 
		%v_37 = call(%v_36, :'user', :'story' ;n:includes, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%v_36[12.13 ] ) 
		put_field(%self, %v_37 ;name: @comments)		--org.jruby.ir.instructions.PutFieldInstr(	%self[10.4 9.2 9.3 9.6 9.8 8.2 2.0 ] %v_37[12.14 ] ) #<%self>#	-- [PUT:%self].comments 
		line_num(;n: 225)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		line_num(;n: 226)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_38 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[12.15 10.4 9.2 9.3 9.6 9.8 8.2 2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		b_false(LBL_6:97, %v_38)		--org.jruby.ir.instructions.BFalseInstr(	%v_38[12.18 ] ) 
PRINT info for BB 13:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:15, 
	Instructions:
		%v_39 = get_field(%self ;name: @comments)		--org.jruby.ir.instructions.GetFieldInstr(	%self[12.15 10.4 9.2 9.3 9.6 9.8 8.2 2.0 ] %self[12.15 2.0 ] ) #<%self>#	-- [GET:%self].comments 
		%v_40 = copy("story_id NOT IN (SELECT story_id FROM ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_41 = copy("hidden_stories WHERE user_id = ?)")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_42 = call_1o(%v_40, %v_41 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_40[13.1 ] %v_41[13.2 ] ) 
		%v_43 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[12.15 10.4 9.2 9.3 9.6 9.8 8.2 2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_44 = call_0o(%v_43 ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_43[13.4 ] ) 
		%v_45 = call(%v_39, %v_42, %v_44 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%v_39[13.0 ] %v_42[13.3 ] %v_44[13.5 ] ) 
		put_field(%self, %v_45 ;name: @comments)		--org.jruby.ir.instructions.PutFieldInstr(	%self[12.15 10.4 9.2 9.3 9.6 9.8 8.2 2.0 ] %v_45[13.6 ] ) #<%self>#	-- [PUT:%self].comments 
		line_num(;n: 229)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_46 = search_const(scope<1> ;name: Vote, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_47 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[13.7 12.15 10.4 9.2 9.3 9.6 9.8 8.2 2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_48 = call_0o(%v_47 ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_47[13.10 ] ) 
		%v_49 = get_field(%self ;name: @comments)		--org.jruby.ir.instructions.GetFieldInstr(	%self[13.7 12.15 10.4 9.2 9.3 9.6 9.8 8.2 2.0 ] %self[13.7 12.15 2.0 ] ) #<%self>#	-- [GET:%self].comments 
		%v_50 = call(%v_49, %self:CLOSURE index_CLOSURE_1[./lobsters/merged_controllers/comments_controller.rb:230] ;n:map, t:NO, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.CallInstr(	%v_49[13.12 ] %self[13.7 12.15 10.4 9.2 9.3 9.6 9.8 8.2 2.0 ] ) 
CLOSURE BEGIN: c[] 
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  2		
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_1_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		c = recv_pre_reqd_arg()		--org.jruby.ir.instructions.ReceivePreReqdArgInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  2		
	outgoing edges:4, 6, 
	Instructions:
		line_num(;n: 230)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_3 = call_0o(c ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	c[2.2 ] ) 
		return(%cl_1_3)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_3[3.1 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 
	Instructions:
		%cl_1_4 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_1_5 = runtime_helper(%cl_1_4 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_1_4[4.0 ] ) 
		return(%cl_1_5)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_5[4.1 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:
CLOSURE END
		%v_51 = call(%v_46, %v_48, %v_50 ;n:comment_votes_by_user_for_comment_ids_hash, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%v_46[13.9 ] %v_48[13.11 ] %v_50[13.13 ] ) 
		put_field(%self, %v_51 ;name: @votes)		--org.jruby.ir.instructions.PutFieldInstr(	%self[13.7 12.15 10.4 9.2 9.3 9.6 9.8 8.2 2.0 ] %v_51[13.14 ] ) #<%self>#	-- [PUT:%self].votes 
		line_num(;n: 232)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_52 = get_field(%self ;name: @comments)		--org.jruby.ir.instructions.GetFieldInstr(	%self[13.7 13.15 12.15 10.4 9.2 9.3 9.6 9.8 8.2 2.0 ] %self[13.7 12.15 2.0 ] ) #<%self>#	-- [GET:%self].comments 
		%v_53 = call(%v_52, %self:CLOSURE index_CLOSURE_2[./lobsters/merged_controllers/comments_controller.rb:232] ;n:each, t:NO, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.CallInstr(	%v_52[13.17 ] %self[13.7 13.15 12.15 10.4 9.2 9.3 9.6 9.8 8.2 2.0 ] ) 
CLOSURE BEGIN: %self[13.7,13.15,12.15,10.4,9.2,9.3,9.6,9.8,8.2,2.0,] c[] 
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:9, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 2		
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_2_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		c = recv_pre_reqd_arg()		--org.jruby.ir.instructions.ReceivePreReqdArgInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 3:
	Vars Live on Entry:  0 2		
	Vars Live on Exit:  0 2		
	outgoing edges:4, 5, 7, 
	Instructions:
		line_num(;n: 233)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_3 = get_field(%self ;name: @votes)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].votes 
		%cl_2_4 = call_0o(c ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	c[2.2 ] ) 
		%cl_2_5 = call_1o(%cl_2_3, %cl_2_4 ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_2_3[3.1 ] %cl_2_4[3.2 ] ) 
		b_false(CL2_LBL_0:19, %cl_2_5)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_5[3.3 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  10		
	Vars Live on Exit:  0 2		
	outgoing edges:6, 7, 
	Instructions:
		line_num(;n: 234)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_6 = get_field(%self ;name: @votes)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].votes 
		%cl_2_7 = call_0o(c ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	c[2.2 ] ) 
		%cl_2_8 = call_1o(%cl_2_6, %cl_2_7 ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_2_6[4.1 ] %cl_2_7[4.2 ] ) 
		attr_assign(c, %cl_2_8 ;n:current_vote=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	c[4.2 2.2 ] %cl_2_8[4.3 ] ) #<c>#	-- [PUT:c].current_vote 
		jump(CL2_LBL_1:21)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 5:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:9, 
	Instructions:
		return(nil)		--org.jruby.ir.instructions.ReturnInstr(	) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit:  10		
	outgoing edges:9, 
	Instructions:
		return(%cl_2_8)		--org.jruby.ir.instructions.ReturnInstr(	%cl_2_8[4.3 ] ) 
PRINT info for BB 7:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:9, 
	Instructions:
		%cl_2_9 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_2_10 = runtime_helper(%cl_2_9 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_2_9[7.0 ] ) 
		return(%cl_2_10)		--org.jruby.ir.instructions.ReturnInstr(	%cl_2_10[7.1 ] ) 
PRINT info for BB 9:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:
CLOSURE END
		jump(LBL_7:99)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 14:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:15, 
	Instructions:
		%v_53 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 15:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:16, 
	Instructions:
		line_num(;n: 239)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_54 = call(%self, %self:CLOSURE index_CLOSURE_3[./lobsters/merged_controllers/comments_controller.rb:239] ;n:respond_to, t:FU, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.CallInstr(	%self[13.7 13.15 12.15 10.4 9.2 9.3 9.6 9.8 8.2 2.0 ] %self[13.7 13.15 12.15 10.4 9.2 9.3 9.6 9.8 8.2 2.0 ] ) 
CLOSURE BEGIN: format[] %self[13.7,13.15,12.15,10.4,9.2,9.3,9.6,9.8,8.2,2.0,] 
PRINT info for BB 1:
	Vars Live on Entry:  2		
	Vars Live on Exit:  2		
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 2		
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_3_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		format = recv_pre_reqd_arg()		--org.jruby.ir.instructions.ReceivePreReqdArgInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 3:
	Vars Live on Entry:  2		
	Vars Live on Exit:  0 2		
	outgoing edges:4, 6, 
	Instructions:
		line_num(;n: 240)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_3_3 = call(format, %self:CLOSURE index_CLOSURE_3_CLOSURE_4[./lobsters/merged_controllers/comments_controller.rb:240] ;n:html, t:NO, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.CallInstr(	format[2.2 ] %self[2.0 ] ) 
CLOSURE BEGIN: %self[2.0,] 
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0		
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_4_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:4, 6, 
	Instructions:
		line_num(;n: 240)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_4_3 = copy("index")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_4_4 = copy({:'action'=>%cl_4_3})		--org.jruby.ir.instructions.CopyInstr(	%cl_4_3[3.1 ] ) 
		%cl_4_5 = call_1o(%self, %cl_4_4 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %cl_4_4[3.2 ] ) 
		return(%cl_4_5)		--org.jruby.ir.instructions.ReturnInstr(	%cl_4_5[3.3 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 
	Instructions:
		%cl_4_6 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_4_7 = runtime_helper(%cl_4_6 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_4_6[4.0 ] ) 
		return(%cl_4_7)		--org.jruby.ir.instructions.ReturnInstr(	%cl_4_7[4.1 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:
CLOSURE END
		line_num(;n: 241)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_3_4 = call(format, %self:CLOSURE index_CLOSURE_3_CLOSURE_5[./lobsters/merged_controllers/comments_controller.rb:241] ;n:rss, t:NO, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.CallInstr(	format[3.1 2.2 ] %self[2.0 ] ) 
CLOSURE BEGIN: %self[2.0,] 
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:11, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 4		
	Vars Live on Exit: 
	outgoing edges:4, 5, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_5_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 242)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_5_3 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		b_false(CL5_LBL_2:14, %cl_5_3)		--org.jruby.ir.instructions.BFalseInstr(	%cl_5_3[2.5 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0 4		
	Vars Live on Exit:  0		
	outgoing edges:5, 9, 
	Instructions:
		%cl_5_4 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%cl_5_5 = call_1o(%cl_5_4, :'token' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_5_4[4.0 ] ) 
		%cl_5_6 = call_0o(%cl_5_5 ;n:present?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_5_5[4.1 ] ) 
		%cl_5_3 = copy(%cl_5_6)		--org.jruby.ir.instructions.CopyInstr(	%cl_5_6[4.2 ] ) 
PRINT info for BB 5:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0 4		
	outgoing edges:6, 7, 
	Instructions:
		b_false(CL5_LBL_0:23, %cl_5_3)		--org.jruby.ir.instructions.BFalseInstr(	%cl_5_3[4.3 2.5 ] ) 
PRINT info for BB 6:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:8, 9, 
	Instructions:
		line_num(;n: 243)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_5_7 = copy("Private comments feed for ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_5_8 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%cl_5_9 = call_0o(%cl_5_8 ;n:username, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_5_8[6.2 ] ) 
		%cl_5_10 = build_compound_string(%cl_5_7, #{%cl_5_9})		--org.jruby.ir.instructions.BuildCompoundStringInstr(	%cl_5_7[6.1 ] %cl_5_9[6.3 ] ) 
		put_field(%self, %cl_5_10 ;name: @title)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 ] %cl_5_10[6.4 ] ) #<%self>#	-- [PUT:%self].title 
		jump(CL5_LBL_1:25)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 7:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:8, 
	Instructions:
		%cl_5_10 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 8:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:9, 11, 
	Instructions:
		line_num(;n: 246)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_5_11 = copy("index.rss")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_5_12 = copy({:'action'=>%cl_5_11, :'layout'=>false})		--org.jruby.ir.instructions.CopyInstr(	%cl_5_11[8.1 ] ) 
		%cl_5_13 = call_1o(%self, %cl_5_12 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[6.5 2.0 ] %cl_5_12[8.2 ] ) 
		return(%cl_5_13)		--org.jruby.ir.instructions.ReturnInstr(	%cl_5_13[8.3 ] ) 
PRINT info for BB 9:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:11, 
	Instructions:
		%cl_5_14 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_5_15 = runtime_helper(%cl_5_14 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_5_14[9.0 ] ) 
		return(%cl_5_15)		--org.jruby.ir.instructions.ReturnInstr(	%cl_5_15[9.1 ] ) 
PRINT info for BB 11:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:
CLOSURE END
		return(%cl_3_4)		--org.jruby.ir.instructions.ReturnInstr(	%cl_3_4[3.3 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  2		
	Vars Live on Exit:  2		
	outgoing edges:6, 
	Instructions:
		%cl_3_5 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_3_6 = runtime_helper(%cl_3_5 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_3_5[4.0 ] ) 
		return(%cl_3_6)		--org.jruby.ir.instructions.ReturnInstr(	%cl_3_6[4.1 ] ) 
PRINT info for BB 6:
	Vars Live on Entry:  2		
	Vars Live on Exit:  2		
	outgoing edges:
	Instructions:
CLOSURE END
		return(%v_54)		--org.jruby.ir.instructions.ReturnInstr(	%v_54[15.1 ] ) 
PRINT info for BB 16:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = threads
PRINT info for BB 1:
	Vars Live on Entry:  38 41 48 50		
	Vars Live on Exit:  38 41 48 50		
	outgoing edges:16, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 38 41 48 50		
	Vars Live on Exit:  38 41 48 50		
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 252)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_4 = call_1o(%v_3, :'user' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		b_false(LBL_0:32, %v_4)		--org.jruby.ir.instructions.BFalseInstr(	%v_4[2.7 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 38 41 48 50		
	Vars Live on Exit:  0 38 41 48 50		
	outgoing edges:8, 
	Instructions:
		line_num(;n: 253)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_5 = search_const(scope<1> ;name: User, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_6 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_7 = call_1o(%v_6, :'user' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_6[3.2 ] ) 
		%v_8 = copy({:'username'=>%v_7})		--org.jruby.ir.instructions.CopyInstr(	%v_7[3.3 ] ) 
		%v_9 = call_1o(%v_5, %v_8 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_5[3.1 ] %v_8[3.4 ] ) 
		%v_10 = call_0o(%v_9 ;n:first!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_9[3.5 ] ) 
		put_field(%self, %v_10 ;name: @showing_user)		--org.jruby.ir.instructions.PutFieldInstr(	%self[3.2 2.0 ] %v_10[3.6 ] ) #<%self>#	-- [PUT:%self].showing_user 
		line_num(;n: 254)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_11 = copy("Threads for ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_12 = get_field(%self ;name: @showing_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[3.2 3.7 2.0 ] %self[3.2 3.7 2.0 ] ) #<%self>#	-- [GET:%self].showing_user 
		%v_13 = call_0o(%v_12 ;n:username, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_12[3.10 ] ) 
		%v_14 = build_compound_string(%v_11, #{%v_13})		--org.jruby.ir.instructions.BuildCompoundStringInstr(	%v_11[3.9 ] %v_13[3.11 ] ) 
		put_field(%self, %v_14 ;name: @title)		--org.jruby.ir.instructions.PutFieldInstr(	%self[3.2 3.7 2.0 ] %v_14[3.12 ] ) #<%self>#	-- [PUT:%self].title 
		put_field(%self, %v_14 ;name: @heading)		--org.jruby.ir.instructions.PutFieldInstr(	%self[3.2 3.7 3.13 2.0 ] %v_14[3.12 ] ) #<%self>#	-- [PUT:%self].heading 
		line_num(;n: 255)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_15 = copy("/threads/")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_16 = get_field(%self ;name: @showing_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[3.2 3.7 3.13 3.14 2.0 ] %self[3.2 3.7 2.0 ] ) #<%self>#	-- [GET:%self].showing_user 
		%v_17 = call_0o(%v_16 ;n:username, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_16[3.17 ] ) 
		%v_18 = build_compound_string(%v_15, #{%v_17})		--org.jruby.ir.instructions.BuildCompoundStringInstr(	%v_15[3.16 ] %v_17[3.18 ] ) 
		put_field(%self, %v_18 ;name: @cur_url)		--org.jruby.ir.instructions.PutFieldInstr(	%self[3.2 3.7 3.13 3.14 2.0 ] %v_18[3.19 ] ) #<%self>#	-- [PUT:%self].cur_url 
		jump(LBL_1:55)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 4:
	Vars Live on Entry:  0 38 41 48 50		
	Vars Live on Exit:  0 38 41 48 50		
	outgoing edges:5, 6, 
	Instructions:
		line_num(;n: 257)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_19 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_20 = call_0o(%v_19 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_19[4.1 ] ) 
		b_false(LBL_2:41, %v_20)		--org.jruby.ir.instructions.BFalseInstr(	%v_20[4.2 ] ) 
PRINT info for BB 5:
	Vars Live on Entry:  38 41 48 50		
	Vars Live on Exit:  0 38 41 48 50		
	outgoing edges:16, 
	Instructions:
		line_num(;n: 258)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_21 = copy("/login")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_22 = call_1o(%self, %v_21 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_21[5.1 ] ) 
		return(%v_22)		--org.jruby.ir.instructions.ReturnInstr(	%v_22[5.2 ] ) 
PRINT info for BB 6:
	Vars Live on Entry:  0 38 41 48 50		
	Vars Live on Exit:  0 38 41 48 50		
	outgoing edges:8, 
	Instructions:
		line_num(;n: 260)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_24 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		put_field(%self, %v_24 ;name: @showing_user)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 ] %v_24[6.1 ] ) #<%self>#	-- [PUT:%self].showing_user 
		line_num(;n: 261)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_25 = copy("Your Threads")		--org.jruby.ir.instructions.CopyInstr(	) 
		put_field(%self, %v_25 ;name: @title)		--org.jruby.ir.instructions.PutFieldInstr(	%self[6.2 2.0 ] %v_25[6.4 ] ) #<%self>#	-- [PUT:%self].title 
		put_field(%self, %v_25 ;name: @heading)		--org.jruby.ir.instructions.PutFieldInstr(	%self[6.2 6.5 2.0 ] %v_25[6.4 ] ) #<%self>#	-- [PUT:%self].heading 
		line_num(;n: 262)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_26 = copy("/threads")		--org.jruby.ir.instructions.CopyInstr(	) 
		put_field(%self, %v_26 ;name: @cur_url)		--org.jruby.ir.instructions.PutFieldInstr(	%self[6.2 6.5 6.6 2.0 ] %v_26[6.8 ] ) #<%self>#	-- [PUT:%self].cur_url 
		%v_23 = copy(%v_26)		--org.jruby.ir.instructions.CopyInstr(	%v_26[6.8 ] ) 
		%v_18 = copy(%v_23)		--org.jruby.ir.instructions.CopyInstr(	%v_23[6.10 ] ) 
PRINT info for BB 8:
	Vars Live on Entry:  0 29 30 38 41 48 50		
	Vars Live on Exit:  0 38 41 48 50		
	outgoing edges:9, 10, 
	Instructions:
		line_num(;n: 265)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_27 = get_field(%self ;name: @showing_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[3.7 3.13 3.14 3.20 6.2 6.5 6.6 6.9 2.0 ] %self[3.7 6.2 2.0 ] ) #<%self>#	-- [GET:%self].showing_user 
		%v_28 = copy(%v_27)		--org.jruby.ir.instructions.CopyInstr(	%v_27[8.1 ] ) 
		line_num(;n: 266)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_29 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[3.7 3.13 3.14 3.20 6.2 6.5 6.6 6.9 2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		b_false(LBL_4:68, %v_29)		--org.jruby.ir.instructions.BFalseInstr(	%v_29[8.4 ] ) 
PRINT info for BB 9:
	Vars Live on Entry:  0 29 30 38 41 48 50		
	Vars Live on Exit:  0 29 38 41 48 50		
	outgoing edges:10, 
	Instructions:
		%v_30 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[3.7 3.13 3.14 3.20 6.2 6.5 6.6 6.9 2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_31 = call_0o(%v_30 ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_30[9.0 ] ) 
		%v_32 = get_field(%self ;name: @showing_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[3.7 3.13 3.14 3.20 6.2 6.5 6.6 6.9 2.0 ] %self[3.7 6.2 2.0 ] ) #<%self>#	-- [GET:%self].showing_user 
		%v_33 = call_0o(%v_32 ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_32[9.2 ] ) 
		%v_34 = call_1o(%v_31, %v_33 ;n:==, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_31[9.1 ] %v_33[9.3 ] ) 
		%v_29 = copy(%v_34)		--org.jruby.ir.instructions.CopyInstr(	%v_34[9.4 ] ) 
PRINT info for BB 10:
	Vars Live on Entry:  0 38 41 48 50 54		
	Vars Live on Exit:  0 29 30 38 41 48 50		
	outgoing edges:11, 12, 
	Instructions:
		%v_35 = call_0o(%v_29 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_29[9.5 8.4 ] ) 
		%v_36 = call_0o(%v_35 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_35[10.0 ] ) 
		include_submitted_stories = copy(%v_36)		--org.jruby.ir.instructions.CopyInstr(	%v_36[10.1 ] ) 
		%v_37 = copy(%v_36)		--org.jruby.ir.instructions.CopyInstr(	%v_36[10.1 ] ) 
		%v_38 = call(%v_28, Fixnum:20, %v_36 ;n:recent_threads, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%v_28[8.2 ] %v_36[10.1 ] ) 
		thread_ids = copy(%v_38)		--org.jruby.ir.instructions.CopyInstr(	%v_38[10.4 ] ) 
		line_num(;n: 268)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_39 = search_const(scope<1> ;name: Comment, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_40 = copy({:'thread_id'=>%v_38})		--org.jruby.ir.instructions.CopyInstr(	%v_38[10.4 ] ) 
		%v_41 = call_1o(%v_39, %v_40 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_39[10.7 ] %v_40[10.8 ] ) 
		%v_42 = call(%v_41, :'user', :'story' ;n:includes, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%v_41[10.9 ] ) 
		%v_43 = get_field(%self ;name: @showing_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[3.7 3.13 3.14 3.20 6.2 6.5 6.6 6.9 2.0 ] %self[3.7 6.2 2.0 ] ) #<%self>#	-- [GET:%self].showing_user 
		%v_44 = call_1o(%v_42, %v_43 ;n:arrange_for_user, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_42[10.10 ] %v_43[10.11 ] ) 
		comments = copy(%v_44)		--org.jruby.ir.instructions.CopyInstr(	%v_44[10.12 ] ) 
		line_num(;n: 276)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_45 = call(%v_44, :'thread_id' ;n:group_by, t:NO, cl:true(org.jruby.ir.operands.Symbol))		--org.jruby.ir.instructions.CallInstr(	%v_44[10.12 ] ) 
		comments_by_thread_id = copy(%v_45)		--org.jruby.ir.instructions.CopyInstr(	%v_45[10.15 ] ) 
		line_num(;n: 277)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_46 = build_splat(thread_ids)		--org.jruby.ir.instructions.BuildSplatInstr(	thread_ids[10.5 ] ) 
		%v_47 = call(%v_45, *(unsplat)%v_46 ;n:values_at, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%v_45[10.15 ] %v_46[10.18 ] ) 
		%v_48 = call_0o(%v_47 ;n:compact, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_47[10.19 ] ) 
		put_field(%self, %v_48 ;name: @threads)		--org.jruby.ir.instructions.PutFieldInstr(	%self[3.7 3.13 3.14 3.20 6.2 6.5 6.6 6.9 2.0 ] %v_48[10.20 ] ) #<%self>#	-- [PUT:%self].threads 
		line_num(;n: 279)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_49 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[10.21 3.7 3.13 3.14 3.20 6.2 6.5 6.6 6.9 2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		b_false(LBL_7:100, %v_49)		--org.jruby.ir.instructions.BFalseInstr(	%v_49[10.23 ] ) 
PRINT info for BB 11:
	Vars Live on Entry:  0 38 41 48 50 54		
	Vars Live on Exit:  0 38 41 48 50		
	outgoing edges:12, 
	Instructions:
		%v_50 = get_field(%self ;name: @showing_user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[10.21 3.7 3.13 3.14 3.20 6.2 6.5 6.6 6.9 2.0 ] %self[3.7 6.2 2.0 ] ) #<%self>#	-- [GET:%self].showing_user 
		%v_51 = call_0o(%v_50 ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_50[11.0 ] ) 
		%v_52 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[10.21 3.7 3.13 3.14 3.20 6.2 6.5 6.6 6.9 2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_53 = call_0o(%v_52 ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_52[11.2 ] ) 
		%v_54 = call_1o(%v_51, %v_53 ;n:==, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_51[11.1 ] %v_53[11.3 ] ) 
		%v_49 = copy(%v_54)		--org.jruby.ir.instructions.CopyInstr(	%v_54[11.4 ] ) 
PRINT info for BB 12:
	Vars Live on Entry:  0 38 41 48 50		
	Vars Live on Exit:  0 38 41 48 50 54		
	outgoing edges:13, 14, 
	Instructions:
		b_false(LBL_5:113, %v_49)		--org.jruby.ir.instructions.BFalseInstr(	%v_49[11.5 10.23 ] ) 
PRINT info for BB 13:
	Vars Live on Entry:  0 38 41 48 50		
	Vars Live on Exit:  0 38 41 48 50		
	outgoing edges:15, 
	Instructions:
		line_num(;n: 280)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_55 = search_const(scope<1> ;name: Vote, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_56 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[10.21 3.7 3.13 3.14 3.20 6.2 6.5 6.6 6.9 2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_57 = call_0o(%v_56 ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_56[13.2 ] ) 
		%v_58 = call(comments, :'story_id' ;n:map, t:NO, cl:true(org.jruby.ir.operands.Symbol))		--org.jruby.ir.instructions.CallInstr(	comments[10.13 ] ) 
		%v_59 = call_0o(%v_58 ;n:uniq, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_58[13.4 ] ) 
		%v_60 = call(%v_55, %v_57, %v_59 ;n:comment_votes_by_user_for_story_hash, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%v_55[13.1 ] %v_57[13.3 ] %v_59[13.5 ] ) 
		put_field(%self, %v_60 ;name: @votes)		--org.jruby.ir.instructions.PutFieldInstr(	%self[10.21 3.7 3.13 3.14 3.20 6.2 6.5 6.6 6.9 2.0 ] %v_60[13.6 ] ) #<%self>#	-- [PUT:%self].votes 
		line_num(;n: 283)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_61 = call(comments, %self:CLOSURE threads_CLOSURE_1[./lobsters/merged_controllers/comments_controller.rb:283] ;n:each, t:NO, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.CallInstr(	comments[13.4 10.13 ] %self[13.7 10.21 3.7 3.13 3.14 3.20 6.2 6.5 6.6 6.9 2.0 ] ) 
CLOSURE BEGIN: %self[13.7,10.21,3.7,3.13,3.14,3.20,6.2,6.5,6.6,6.9,2.0,] c[] 
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:9, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 2		
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_1_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		c = recv_pre_reqd_arg()		--org.jruby.ir.instructions.ReceivePreReqdArgInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 3:
	Vars Live on Entry:  0 2		
	Vars Live on Exit:  0 2		
	outgoing edges:4, 5, 7, 
	Instructions:
		line_num(;n: 284)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_3 = get_field(%self ;name: @votes)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].votes 
		%cl_1_4 = call_0o(c ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	c[2.2 ] ) 
		%cl_1_5 = call_1o(%cl_1_3, %cl_1_4 ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_1_3[3.1 ] %cl_1_4[3.2 ] ) 
		b_false(CL1_LBL_0:19, %cl_1_5)		--org.jruby.ir.instructions.BFalseInstr(	%cl_1_5[3.3 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  10		
	Vars Live on Exit:  0 2		
	outgoing edges:6, 7, 
	Instructions:
		line_num(;n: 285)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_6 = get_field(%self ;name: @votes)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].votes 
		%cl_1_7 = call_0o(c ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	c[2.2 ] ) 
		%cl_1_8 = call_1o(%cl_1_6, %cl_1_7 ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_1_6[4.1 ] %cl_1_7[4.2 ] ) 
		attr_assign(c, %cl_1_8 ;n:current_vote=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	c[4.2 2.2 ] %cl_1_8[4.3 ] ) #<c>#	-- [PUT:c].current_vote 
		jump(CL1_LBL_1:21)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 5:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:9, 
	Instructions:
		return(nil)		--org.jruby.ir.instructions.ReturnInstr(	) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit:  10		
	outgoing edges:9, 
	Instructions:
		return(%cl_1_8)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_8[4.3 ] ) 
PRINT info for BB 7:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:9, 
	Instructions:
		%cl_1_9 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_1_10 = runtime_helper(%cl_1_9 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_1_9[7.0 ] ) 
		return(%cl_1_10)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_10[7.1 ] ) 
PRINT info for BB 9:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:
CLOSURE END
		jump(LBL_6:115)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 14:
	Vars Live on Entry:  0 38 41 48 50		
	Vars Live on Exit:  0 38 41 48 50		
	outgoing edges:15, 
	Instructions:
		%v_61 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 15:
	Vars Live on Entry:  38 41 48 50		
	Vars Live on Exit:  0 38 41 48 50		
	outgoing edges:16, 
	Instructions:
		line_num(;n: 301)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_62 = get_field(%self ;name: @threads)		--org.jruby.ir.instructions.GetFieldInstr(	%self[13.7 10.21 3.7 3.13 3.14 3.20 6.2 6.5 6.6 6.9 2.0 ] %self[10.21 2.0 ] ) #<%self>#	-- [GET:%self].threads 
		%v_63 = call(%v_62, %self:CLOSURE threads_CLOSURE_2[./lobsters/merged_controllers/comments_controller.rb:301] ;n:each, t:NO, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.CallInstr(	%v_62[15.1 ] %self[13.7 10.21 3.7 3.13 3.14 3.20 6.2 6.5 6.6 6.9 2.0 ] ) 
CLOSURE BEGIN: thread[] subtree[] comment[] %self[13.7,10.21,3.7,3.13,3.14,3.20,6.2,6.5,6.6,6.9,2.0,] ancestors[] 
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:124, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 2		
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_2_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		thread = recv_pre_reqd_arg()		--org.jruby.ir.instructions.ReceivePreReqdArgInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 3:
	Vars Live on Entry:  0 8 10		
	Vars Live on Exit:  0 2		
	outgoing edges:4, 122, 
	Instructions:
		line_num(;n: 302)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_3 = call(thread, :'parent_comment_id' ;n:group_by, t:NO, cl:true(org.jruby.ir.operands.Symbol))		--org.jruby.ir.instructions.CallInstr(	thread[2.2 ] ) 
		comments_by_parent = copy(%cl_2_3)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_3[3.1 ] ) 
		line_num(;n: 303)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_4 = call_1o(%cl_2_3, nil ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_2_3[3.1 ] ) 
		subtree = copy(%cl_2_4)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_4[3.4 ] ) 
		line_num(;n: 304)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_5 = copy(Array:[])		--org.jruby.ir.instructions.CopyInstr(	) 
		ancestors = copy(%cl_2_5)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_5[3.7 ] ) 
		line_num(;n: 305)		--org.jruby.ir.instructions.LineNumberInstr(	) 
PRINT info for BB 4:
	Vars Live on Entry:  0 8 10		
	Vars Live on Exit:  0 8 10		
	outgoing edges:5, 120, 
	Instructions:
		b_false(CL2_LBL_0:392, subtree)		--org.jruby.ir.instructions.BFalseInstr(	subtree[3.5 114.2 ] ) 
PRINT info for BB 5:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10		
	outgoing edges:6, 114, 122, 
	Instructions:
		thread_poll()		--org.jruby.ir.instructions.ThreadPollInstr(	) 
		line_num(;n: 306)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_7 = call_0o(subtree ;n:shift, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	subtree[3.5 114.2 ] ) 
		comment = copy(%cl_2_7)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_7[5.2 ] ) 
		b_false(CL2_LBL_1:378, %cl_2_7)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_7[5.2 ] ) 
PRINT info for BB 6:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:7, 8, 122, 
	Instructions:
		line_num(;n: 307)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_8 = call_0o(comment ;n:short_id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		line_num(;n: 308)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_9 = call_0o(comment ;n:short_id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[6.1 5.3 ] ) 
		line_num(;n: 309)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_10 = call_0o(comment ;n:persisted?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[6.1 6.3 5.3 ] ) 
		b_false(CL2_LBL_3:35, %cl_2_10)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_10[6.5 ] ) 
PRINT info for BB 7:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:9, 122, 
	Instructions:
		%cl_2_11 = call_0o(comment ;n:short_id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		jump(CL2_LBL_4:37)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 8:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:9, 
	Instructions:
		%cl_2_11 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 9:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:10, 14, 122, 
	Instructions:
		line_num(;n: 310)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_12 = call_0o(comment ;n:current_vote, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		b_false(CL2_LBL_5:52, %cl_2_12)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_12[9.1 ] ) 
PRINT info for BB 10:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:11, 12, 122, 
	Instructions:
		%cl_2_13 = call_0o(comment ;n:current_vote, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_14 = call_1o(%cl_2_13, :'vote' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_2_13[10.0 ] ) 
		%cl_2_15 = call_1f(%cl_2_14, Fixnum:1 ;n:==, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%cl_2_14[10.1 ] ) 
		b_false(CL2_LBL_7:47, %cl_2_15)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_15[10.2 ] ) 
PRINT info for BB 11:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:13, 
	Instructions:
		%cl_2_16 = copy("upvoted")		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_8:50)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 12:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:13, 
	Instructions:
		%cl_2_17 = copy("downvoted")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_16 = copy(%cl_2_17)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_17[12.0 ] ) 
PRINT info for BB 13:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:15, 
	Instructions:
		jump(CL2_LBL_6:55)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 14:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:15, 
	Instructions:
		%cl_2_18 = copy("")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_16 = copy(%cl_2_18)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_18[14.0 ] ) 
PRINT info for BB 15:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:16, 17, 122, 
	Instructions:
		line_num(;n: 312)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_19 = call_0o(comment ;n:highlighted, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		b_false(CL2_LBL_9:61, %cl_2_19)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_19[15.1 ] ) 
PRINT info for BB 16:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:18, 
	Instructions:
		%cl_2_20 = copy("highlighted")		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_10:64)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 17:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:18, 
	Instructions:
		%cl_2_21 = copy("")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_20 = copy(%cl_2_21)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_21[17.0 ] ) 
PRINT info for BB 18:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:19, 20, 122, 
	Instructions:
		line_num(;n: 313)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_22 = call_0o(comment ;n:score, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_23 = call_1f(%cl_2_22, Fixnum:0 ;n:<=, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%cl_2_22[18.1 ] %cl_2_22[18.1 ] ) #<%cl_2_22># 
		b_false(CL2_LBL_11:71, %cl_2_23)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_23[18.2 ] ) 
PRINT info for BB 19:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:21, 
	Instructions:
		%cl_2_24 = copy("negative")		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_12:74)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 20:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:21, 
	Instructions:
		%cl_2_25 = copy("")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_24 = copy(%cl_2_25)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_25[20.0 ] ) 
PRINT info for BB 21:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:22, 23, 122, 
	Instructions:
		line_num(;n: 314)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_26 = call_0o(comment ;n:score, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_27 = call_1f(%cl_2_26, Fixnum:-1 ;n:<=, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%cl_2_26[21.1 ] %cl_2_26[21.1 ] ) #<%cl_2_26># 
		b_false(CL2_LBL_13:81, %cl_2_27)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_27[21.2 ] ) 
PRINT info for BB 22:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:24, 
	Instructions:
		%cl_2_28 = copy("negative_1")		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_14:84)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 23:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:24, 
	Instructions:
		%cl_2_29 = copy("")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_28 = copy(%cl_2_29)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_29[23.0 ] ) 
PRINT info for BB 24:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:25, 26, 122, 
	Instructions:
		line_num(;n: 315)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_30 = call_0o(comment ;n:score, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_31 = call_1f(%cl_2_30, Fixnum:-3 ;n:<=, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%cl_2_30[24.1 ] %cl_2_30[24.1 ] ) #<%cl_2_30># 
		b_false(CL2_LBL_15:91, %cl_2_31)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_31[24.2 ] ) 
PRINT info for BB 25:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:27, 
	Instructions:
		%cl_2_32 = copy("negative_3")		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_16:94)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 26:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:27, 
	Instructions:
		%cl_2_33 = copy("")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_32 = copy(%cl_2_33)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_33[26.0 ] ) 
PRINT info for BB 27:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:28, 29, 122, 
	Instructions:
		line_num(;n: 316)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_34 = call_0o(comment ;n:score, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_35 = call_1f(%cl_2_34, Fixnum:-5 ;n:<=, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%cl_2_34[27.1 ] %cl_2_34[27.1 ] ) #<%cl_2_34># 
		b_false(CL2_LBL_17:101, %cl_2_35)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_35[27.2 ] ) 
PRINT info for BB 28:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:30, 
	Instructions:
		%cl_2_36 = copy("negative_5")		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_18:104)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 29:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:30, 
	Instructions:
		%cl_2_37 = copy("")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_36 = copy(%cl_2_37)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_37[29.0 ] ) 
PRINT info for BB 30:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:31, 40, 122, 
	Instructions:
		line_num(;n: 317)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_38 = call_0o(comment ;n:is_gone?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_39 = call_0o(%cl_2_38 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_2_38[30.1 ] ) 
		b_false(CL2_LBL_19:141, %cl_2_39)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_39[30.2 ] ) 
PRINT info for BB 31:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:32, 33, 
	Instructions:
		line_num(;n: 318)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		line_num(;n: 319)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_40 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		b_false(CL2_LBL_21:115, %cl_2_40)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_40[31.2 ] ) 
PRINT info for BB 32:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:34, 
	Instructions:
		%cl_2_41 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_22:123)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 33:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:34, 122, 
	Instructions:
		line_num(;n: 320)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_42 = copy("")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_43 = call_0o(%self ;n:login_path, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%cl_2_44 = copy("upvoter")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_45 = copy({:'class'=>%cl_2_44})		--org.jruby.ir.instructions.CopyInstr(	%cl_2_44[33.3 ] ) 
		%cl_2_46 = call(%self, %cl_2_42, %cl_2_43, %cl_2_45 ;n:link_to, t:FU, cl:false)		--org.jruby.ir.instructions.CallInstr(	%self[33.2 2.0 ] %cl_2_42[33.1 ] %cl_2_43[33.2 ] %cl_2_45[33.4 ] ) 
		%cl_2_41 = copy(%cl_2_46)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_46[33.5 ] ) 
PRINT info for BB 34:
	Vars Live on Entry:  0 8 10 12 53		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:35, 36, 122, 
	Instructions:
		line_num(;n: 322)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_47 = call_0o(comment ;n:score, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		line_num(;n: 323)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_48 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		b_false(CL2_LBL_25:132, %cl_2_48)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_48[34.3 ] ) 
PRINT info for BB 35:
	Vars Live on Entry:  0 8 10 12 53		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:36, 122, 
	Instructions:
		%cl_2_49 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%cl_2_50 = call_1o(%cl_2_49, comment ;n:can_downvote?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_2_49[35.0 ] comment[5.3 ] ) 
		%cl_2_48 = copy(%cl_2_50)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_50[35.1 ] ) 
PRINT info for BB 36:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12 53		
	outgoing edges:37, 38, 
	Instructions:
		b_false(CL2_LBL_23:136, %cl_2_48)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_48[35.2 34.3 ] ) 
PRINT info for BB 37:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:39, 
	Instructions:
		%cl_2_51 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_24:138)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 38:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:39, 
	Instructions:
		%cl_2_51 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 39:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:41, 
	Instructions:
		%cl_2_52 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_20:143)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 40:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:41, 
	Instructions:
		%cl_2_52 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 41:
	Vars Live on Entry:  0 8 10 12 60		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:42, 43, 122, 
	Instructions:
		line_num(;n: 327)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_53 = call_0o(comment ;n:short_id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		line_num(;n: 328)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_54 = call_0o(comment ;n:short_id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[41.1 5.3 ] ) 
		line_num(;n: 329)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_55 = runtime_helper(%self, "was_merged", false ;method: IS_DEFINED_METHOD)		--org.jruby.ir.instructions.RuntimeHelperCall(	%self[2.0 ] ) 
		b_false(CL2_LBL_28:153, %cl_2_55)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_55[41.5 ] ) 
PRINT info for BB 42:
	Vars Live on Entry:  0 8 10 12 60		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:43, 122, 
	Instructions:
		%cl_2_56 = call_0o(%self ;n:was_merged, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%cl_2_55 = copy(%cl_2_56)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_56[42.0 ] ) 
PRINT info for BB 43:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12 60		
	outgoing edges:44, 45, 
	Instructions:
		b_false(CL2_LBL_26:157, %cl_2_55)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_55[42.1 41.5 ] ) 
PRINT info for BB 44:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:46, 
	Instructions:
		%cl_2_57 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_27:159)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 45:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:46, 
	Instructions:
		%cl_2_57 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 46:
	Vars Live on Entry:  0 8 10 12 63		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:47, 48, 
	Instructions:
		line_num(;n: 331)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_58 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		b_false(CL2_LBL_31:166, %cl_2_58)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_58[46.1 ] ) 
PRINT info for BB 47:
	Vars Live on Entry:  0 8 10 12 63		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:48, 122, 
	Instructions:
		%cl_2_59 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%cl_2_60 = call_0o(%cl_2_59 ;n:show_avatars?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_2_59[47.0 ] ) 
		%cl_2_58 = copy(%cl_2_60)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_60[47.1 ] ) 
PRINT info for BB 48:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12 63		
	outgoing edges:49, 50, 
	Instructions:
		b_false(CL2_LBL_29:175, %cl_2_58)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_58[47.2 46.1 ] ) 
PRINT info for BB 49:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:51, 122, 
	Instructions:
		line_num(;n: 332)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_61 = call_0o(comment ;n:user, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_62 = call_0o(%cl_2_61 ;n:username, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_2_61[49.1 ] ) 
		line_num(;n: 333)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_63 = call_0o(comment ;n:user, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[49.1 5.3 ] ) 
		%cl_2_64 = call_1f(%cl_2_63, Fixnum:16 ;n:avatar_url, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%cl_2_63[49.4 ] ) 
		jump(CL2_LBL_30:177)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 50:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:51, 
	Instructions:
		%cl_2_64 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 51:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:52, 53, 122, 
	Instructions:
		line_num(;n: 335)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_65 = call_0o(comment ;n:user, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_66 = call_0o(%cl_2_65 ;n:username, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_2_65[51.1 ] ) 
		line_num(;n: 336)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_67 = call_0o(comment ;n:html_class_for_user, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[51.1 5.3 ] ) 
		line_num(;n: 338)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_68 = call_0o(comment ;n:user, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[51.1 51.4 5.3 ] ) 
		%cl_2_69 = call_0o(%cl_2_68 ;n:username, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_2_68[51.6 ] ) 
		line_num(;n: 339)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_70 = call_0o(comment ;n:hat, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[51.1 51.4 51.6 5.3 ] ) 
		b_false(CL2_LBL_32:193, %cl_2_70)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_70[51.9 ] ) 
PRINT info for BB 52:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:54, 122, 
	Instructions:
		line_num(;n: 340)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_71 = call_0o(comment ;n:hat, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_72 = call_0o(%cl_2_71 ;n:to_html_label, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_2_71[52.1 ] ) 
		jump(CL2_LBL_33:195)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 53:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:54, 
	Instructions:
		%cl_2_72 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 54:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:55, 56, 122, 
	Instructions:
		line_num(;n: 342)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_73 = call_0o(comment ;n:previewing, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		b_false(CL2_LBL_34:201, %cl_2_73)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_73[54.1 ] ) 
PRINT info for BB 55:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:66, 
	Instructions:
		%cl_2_74 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_35:230)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 56:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:57, 58, 122, 
	Instructions:
		line_num(;n: 344)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_75 = call_0o(comment ;n:has_been_edited?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		b_false(CL2_LBL_36:207, %cl_2_75)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_75[56.1 ] ) 
PRINT info for BB 57:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:62, 
	Instructions:
		%cl_2_76 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_37:217)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 58:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:59, 60, 122, 
	Instructions:
		line_num(;n: 345)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_77 = call_0o(comment ;n:is_from_email?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		b_false(CL2_LBL_38:213, %cl_2_77)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_77[58.1 ] ) 
PRINT info for BB 59:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:61, 
	Instructions:
		%cl_2_78 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_39:215)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 60:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:61, 
	Instructions:
		%cl_2_78 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 61:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:62, 
	Instructions:
		%cl_2_76 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 62:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:63, 64, 122, 
	Instructions:
		line_num(;n: 347)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_79 = call_0o(comment ;n:has_been_edited?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		b_false(CL2_LBL_40:223, %cl_2_79)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_79[62.1 ] ) 
PRINT info for BB 63:
	Vars Live on Entry:  0 8 10 12 85		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:65, 122, 
	Instructions:
		%cl_2_80 = call_0o(comment ;n:updated_at, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		jump(CL2_LBL_41:226)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 64:
	Vars Live on Entry:  0 8 10 12 85		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:65, 122, 
	Instructions:
		%cl_2_81 = call_0o(comment ;n:created_at, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_80 = copy(%cl_2_81)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_81[64.0 ] ) 
PRINT info for BB 65:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12 85		
	outgoing edges:66, 122, 
	Instructions:
		%cl_2_82 = copy({:'strip_about'=>true})		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_83 = call(%self, %cl_2_80, %cl_2_82 ;n:time_ago_in_words_label, t:FU, cl:false)		--org.jruby.ir.instructions.CallInstr(	%self[2.0 ] %cl_2_80[64.1 63.0 ] %cl_2_82[65.0 ] ) 
		%cl_2_74 = copy(%cl_2_83)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_83[65.1 ] ) 
PRINT info for BB 66:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:67, 104, 122, 
	Instructions:
		line_num(;n: 350)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_84 = call_0o(comment ;n:previewing, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_85 = call_0o(%cl_2_84 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_2_84[66.1 ] ) 
		b_false(CL2_LBL_42:345, %cl_2_85)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_85[66.2 ] ) 
PRINT info for BB 67:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:68, 69, 122, 
	Instructions:
		line_num(;n: 351)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_86 = call_0o(comment ;n:url, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		line_num(;n: 352)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_87 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%cl_2_88 = call_1o(comment, %cl_2_87 ;n:is_editable_by_user?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	comment[67.1 5.3 ] %cl_2_87[67.3 ] ) 
		b_false(CL2_LBL_44:243, %cl_2_88)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_88[67.4 ] ) 
PRINT info for BB 68:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:70, 
	Instructions:
		%cl_2_89 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_45:245)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 69:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:70, 
	Instructions:
		%cl_2_89 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 70:
	Vars Live on Entry:  0 8 10 12 95		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:71, 72, 122, 
	Instructions:
		line_num(;n: 354)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_90 = call_0o(comment ;n:is_gone?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		b_false(CL2_LBL_48:252, %cl_2_90)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_90[70.1 ] ) 
PRINT info for BB 71:
	Vars Live on Entry:  0 8 10 12 95		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:72, 122, 
	Instructions:
		%cl_2_91 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%cl_2_92 = call_1o(comment, %cl_2_91 ;n:is_undeletable_by_user?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	comment[5.3 ] %cl_2_91[71.0 ] ) 
		%cl_2_90 = copy(%cl_2_92)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_92[71.1 ] ) 
PRINT info for BB 72:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12 95		
	outgoing edges:73, 74, 
	Instructions:
		b_false(CL2_LBL_46:256, %cl_2_90)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_90[71.2 70.1 ] ) 
PRINT info for BB 73:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:80, 
	Instructions:
		%cl_2_93 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_47:272)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 74:
	Vars Live on Entry:  0 8 10 12 100		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:75, 76, 122, 
	Instructions:
		line_num(;n: 355)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_94 = call_0o(comment ;n:is_gone?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_95 = call_0o(%cl_2_94 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_2_94[74.1 ] ) 
		b_false(CL2_LBL_51:264, %cl_2_95)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_95[74.2 ] ) 
PRINT info for BB 75:
	Vars Live on Entry:  0 8 10 12 100		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:76, 122, 
	Instructions:
		%cl_2_96 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%cl_2_97 = call_1o(comment, %cl_2_96 ;n:is_deletable_by_user?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	comment[5.3 ] %cl_2_96[75.0 ] ) 
		%cl_2_95 = copy(%cl_2_97)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_97[75.1 ] ) 
PRINT info for BB 76:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12 100		
	outgoing edges:77, 78, 
	Instructions:
		b_false(CL2_LBL_49:268, %cl_2_95)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_95[75.2 74.2 ] ) 
PRINT info for BB 77:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:79, 
	Instructions:
		%cl_2_98 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_50:270)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 78:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:79, 
	Instructions:
		%cl_2_98 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 79:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:80, 
	Instructions:
		%cl_2_93 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 80:
	Vars Live on Entry:  0 8 10 12 104		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:81, 82, 
	Instructions:
		line_num(;n: 357)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_99 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		b_false(CL2_LBL_55:280, %cl_2_99)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_99[80.1 ] ) 
PRINT info for BB 81:
	Vars Live on Entry:  0 8 10 12 104		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:82, 122, 
	Instructions:
		%cl_2_100 = call_0o(comment ;n:story, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_101 = call_0o(%cl_2_100 ;n:is_gone?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_2_100[81.0 ] ) 
		%cl_2_102 = call_0o(%cl_2_101 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_2_101[81.1 ] ) 
		%cl_2_99 = copy(%cl_2_102)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_102[81.2 ] ) 
PRINT info for BB 82:
	Vars Live on Entry:  0 8 10 12 104		
	Vars Live on Exit:  0 8 10 12 104		
	outgoing edges:83, 84, 
	Instructions:
		b_false(CL2_LBL_54:285, %cl_2_99)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_99[81.3 80.1 ] ) 
PRINT info for BB 83:
	Vars Live on Entry:  0 8 10 12 104		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:84, 122, 
	Instructions:
		%cl_2_103 = call_0o(comment ;n:is_gone?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_104 = call_0o(%cl_2_103 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_2_103[83.0 ] ) 
		%cl_2_99 = copy(%cl_2_104)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_104[83.1 ] ) 
PRINT info for BB 84:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12 104		
	outgoing edges:85, 86, 
	Instructions:
		b_false(CL2_LBL_52:289, %cl_2_99)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_99[83.2 81.3 80.1 ] ) 
PRINT info for BB 85:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:87, 
	Instructions:
		%cl_2_105 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_53:291)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 86:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:87, 
	Instructions:
		%cl_2_105 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 87:
	Vars Live on Entry:  0 8 10 12 112		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:88, 93, 122, 
	Instructions:
		line_num(;n: 359)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_106 = call_0o(comment ;n:downvotes, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_107 = call_1f(%cl_2_106, Fixnum:0 ;n:>, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%cl_2_106[87.1 ] ) 
		b_false(CL2_LBL_58:312, %cl_2_107)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_107[87.2 ] ) 
PRINT info for BB 88:
	Vars Live on Entry:  0 8 10 12 114		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:89, 90, 122, 
	Instructions:
		%cl_2_108 = call_0o(comment ;n:score, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_109 = call_1f(%cl_2_108, Fixnum:0 ;n:<=, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%cl_2_108[88.0 ] %cl_2_108[88.0 ] ) #<%cl_2_108># 
		b_false(CL2_LBL_60:304, %cl_2_109)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_109[88.1 ] ) 
PRINT info for BB 89:
	Vars Live on Entry:  0 8 10 12 114		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:90, 122, 
	Instructions:
		%cl_2_110 = call_0o(comment ;n:user_id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_111 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%cl_2_112 = call_1o(%cl_2_111, :'id' ;n:try, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_2_111[89.1 ] ) 
		%cl_2_113 = call_1o(%cl_2_110, %cl_2_112 ;n:==, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_2_110[89.0 ] %cl_2_112[89.2 ] ) 
		%cl_2_109 = copy(%cl_2_113)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_113[89.3 ] ) 
PRINT info for BB 90:
	Vars Live on Entry:  0 8 10 12 114		
	Vars Live on Exit:  0 8 10 12 114		
	outgoing edges:91, 92, 
	Instructions:
		b_true(CL2_LBL_59:310, %cl_2_109)		--org.jruby.ir.instructions.BTrueInstr(	%cl_2_109[89.4 88.1 ] ) 
PRINT info for BB 91:
	Vars Live on Entry:  0 8 10 12 114		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:92, 122, 
	Instructions:
		%cl_2_114 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%cl_2_115 = copy("is_moderator?")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_116 = call_1o(%cl_2_114, %cl_2_115 ;n:try, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_2_114[91.0 ] %cl_2_115[91.1 ] ) 
		%cl_2_109 = copy(%cl_2_116)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_116[91.2 ] ) 
PRINT info for BB 92:
	Vars Live on Entry:  0 8 10 12 112		
	Vars Live on Exit:  0 8 10 12 114		
	outgoing edges:93, 
	Instructions:
		%cl_2_107 = copy(%cl_2_109)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_109[91.3 89.4 88.1 ] ) 
PRINT info for BB 93:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12 112		
	outgoing edges:94, 95, 
	Instructions:
		b_false(CL2_LBL_56:318, %cl_2_107)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_107[92.0 87.2 ] ) 
PRINT info for BB 94:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:103, 122, 
	Instructions:
		line_num(;n: 362)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_117 = call_0o(comment ;n:vote_summary, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_118 = call_0o(%cl_2_117 ;n:downcase, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_2_117[94.1 ] ) 
		jump(CL2_LBL_57:343)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 95:
	Vars Live on Entry:  0 8 10 12 124		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:96, 97, 122, 
	Instructions:
		line_num(;n: 363)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_119 = call_0o(comment ;n:current_vote, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		b_false(CL2_LBL_63:326, %cl_2_119)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_119[95.1 ] ) 
PRINT info for BB 96:
	Vars Live on Entry:  0 8 10 12 124		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:97, 122, 
	Instructions:
		%cl_2_120 = call_0o(comment ;n:current_vote, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_121 = call_1o(%cl_2_120, :'vote' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_2_120[96.0 ] ) 
		%cl_2_122 = call_1f(%cl_2_121, Fixnum:-1 ;n:==, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%cl_2_121[96.1 ] ) 
		%cl_2_119 = copy(%cl_2_122)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_122[96.2 ] ) 
PRINT info for BB 97:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12 124		
	outgoing edges:98, 101, 
	Instructions:
		b_false(CL2_LBL_61:339, %cl_2_119)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_119[96.3 95.1 ] ) 
PRINT info for BB 98:
	Vars Live on Entry:  0 8 10 12 128 129		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:99, 100, 122, 
	Instructions:
		line_num(;n: 364)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_123 = search_const(scope<2> ;name: Vote, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%cl_2_124 = inheritance_search_const(%cl_2_123 ;name: COMMENT_REASONS, no_priv: true)		--org.jruby.ir.instructions.InheritanceSearchConstInstr(	%cl_2_123[98.1 ] ) 
		bne(CL2_LBL_64:333, %cl_2_124, %undefined)		--org.jruby.ir.instructions.BNEInstr(	%cl_2_124[98.2 ] ) 
PRINT info for BB 99:
	Vars Live on Entry:  0 8 10 12 129		
	Vars Live on Exit:  0 8 10 12 128		
	outgoing edges:100, 122, 
	Instructions:
		%cl_2_124 = const_missing(%cl_2_123, :'COMMENT_REASONS' ;n:const_missing, t:FU, cl:false, missing: COMMENT_REASONS)		--org.jruby.ir.instructions.ConstMissingInstr(	%cl_2_123[98.1 ] ) 
PRINT info for BB 100:
	Vars Live on Entry:  0 8 10 12 133		
	Vars Live on Exit:  0 8 10 12 129		
	outgoing edges:102, 122, 
	Instructions:
		%cl_2_125 = call_0o(comment ;n:current_vote, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_126 = call_1o(%cl_2_125, :'reason' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_2_125[100.0 ] ) 
		%cl_2_127 = call_1o(%cl_2_124, %cl_2_126 ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_2_124[99.0 98.2 ] %cl_2_126[100.1 ] ) 
		%cl_2_128 = call_0o(%cl_2_127 ;n:downcase, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_2_127[100.2 ] ) 
		jump(CL2_LBL_62:341)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 101:
	Vars Live on Entry:  0 8 10 12 133		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:102, 
	Instructions:
		%cl_2_128 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 102:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12 133		
	outgoing edges:103, 
	Instructions:
		%cl_2_118 = copy(%cl_2_128)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_128[101.0 100.3 ] ) 
PRINT info for BB 103:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:105, 
	Instructions:
		jump(CL2_LBL_43:347)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 104:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:105, 
	Instructions:
		%cl_2_118 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 105:
	Vars Live on Entry:  0 8 10 12 134		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:106, 107, 122, 
	Instructions:
		line_num(;n: 367)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_129 = runtime_helper(%self, "show_story", false ;method: IS_DEFINED_METHOD)		--org.jruby.ir.instructions.RuntimeHelperCall(	%self[2.0 ] ) 
		b_false(CL2_LBL_67:353, %cl_2_129)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_129[105.1 ] ) 
PRINT info for BB 106:
	Vars Live on Entry:  0 8 10 12 134		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:107, 122, 
	Instructions:
		%cl_2_130 = call_0o(%self ;n:show_story, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%cl_2_129 = copy(%cl_2_130)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_130[106.0 ] ) 
PRINT info for BB 107:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12 134		
	outgoing edges:108, 109, 
	Instructions:
		b_false(CL2_LBL_65:362, %cl_2_129)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_129[106.1 105.1 ] ) 
PRINT info for BB 108:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:110, 122, 
	Instructions:
		line_num(;n: 368)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_131 = call_0o(comment ;n:story, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_132 = call_0o(%cl_2_131 ;n:comments_path, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_2_131[108.1 ] ) 
		line_num(;n: 369)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_133 = call_0o(comment ;n:story, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[108.1 5.3 ] ) 
		%cl_2_134 = call_0o(%cl_2_133 ;n:title, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_2_133[108.4 ] ) 
		jump(CL2_LBL_66:364)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 109:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:110, 
	Instructions:
		%cl_2_134 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 110:
	Vars Live on Entry:  0 8 10 12		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:111, 112, 122, 
	Instructions:
		line_num(;n: 372)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_135 = call_0o(comment ;n:is_gone?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		b_false(CL2_LBL_68:371, %cl_2_135)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_135[110.1 ] ) 
PRINT info for BB 111:
	Vars Live on Entry:  0 8 10		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:113, 122, 
	Instructions:
		line_num(;n: 373)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_136 = call_0o(comment ;n:gone_text, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		jump(CL2_LBL_69:376)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 112:
	Vars Live on Entry:  0 8 10		
	Vars Live on Exit:  0 8 10 12		
	outgoing edges:113, 122, 
	Instructions:
		line_num(;n: 375)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_137 = call_0o(comment ;n:markeddown_comment, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.3 ] ) 
		%cl_2_138 = call_1o(%self, %cl_2_137 ;n:raw, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %cl_2_137[112.1 ] ) 
		%cl_2_136 = copy(%cl_2_138)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_138[112.2 ] ) 
PRINT info for BB 113:
	Vars Live on Entry:  0 8 10		
	Vars Live on Exit:  0 8 10		
	outgoing edges:118, 
	Instructions:
		jump(CL2_LBL_2:389)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 114:
	Vars Live on Entry:  0 8 10		
	Vars Live on Exit:  0 10		
	outgoing edges:115, 116, 122, 
	Instructions:
		line_num(;n: 378)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_139 = call_0o(ancestors ;n:pop, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	ancestors[3.8 ] ) 
		subtree = copy(%cl_2_139)		--org.jruby.ir.instructions.CopyInstr(	%cl_2_139[114.1 ] ) 
		b_false(CL2_LBL_70:385, %cl_2_139)		--org.jruby.ir.instructions.BFalseInstr(	%cl_2_139[114.1 ] ) 
PRINT info for BB 115:
	Vars Live on Entry:  0 8 10		
	Vars Live on Exit:  0 8 10		
	outgoing edges:117, 
	Instructions:
		%cl_2_140 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL2_LBL_71:387)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 116:
	Vars Live on Entry:  0 8 10		
	Vars Live on Exit:  0 8 10		
	outgoing edges:117, 
	Instructions:
		%cl_2_140 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 117:
	Vars Live on Entry:  0 8 10		
	Vars Live on Exit:  0 8 10		
	outgoing edges:118, 
	Instructions:
		%cl_2_136 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 118:
	Vars Live on Entry:  0 8 10		
	Vars Live on Exit:  0 8 10		
	outgoing edges:4, 
	Instructions:
		jump(_LOOP_BEGIN_0:18)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 120:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:124, 
	Instructions:
		return(nil)		--org.jruby.ir.instructions.ReturnInstr(	) 
PRINT info for BB 122:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:124, 
	Instructions:
		%cl_2_141 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_2_142 = runtime_helper(%cl_2_141 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_2_141[122.0 ] ) 
		return(%cl_2_142)		--org.jruby.ir.instructions.ReturnInstr(	%cl_2_142[122.1 ] ) 
PRINT info for BB 124:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:
CLOSURE END
		return(%v_63)		--org.jruby.ir.instructions.ReturnInstr(	%v_63[15.2 ] ) 
PRINT info for BB 16:
	Vars Live on Entry:  38 41 48 50		
	Vars Live on Exit:  38 41 48 50		
	outgoing edges:
	Instructions:

SET IRMethod, name = preview
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:3, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 1, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		comment = recv_pre_reqd_arg()		--org.jruby.ir.instructions.ReceivePreReqdArgInstr(	) 
		line_num(;n: 389)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		attr_assign(comment, true ;n:previewing=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[2.5 ] ) #<comment>#	-- [PUT:comment].previewing 
		line_num(;n: 390)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		attr_assign(comment, false ;n:is_deleted=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[2.5 2.7 ] ) #<comment>#	-- [PUT:comment].is_deleted 
		line_num(;n: 392)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = copy("comments/commentbox")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_4 = copy("text/html")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_5 = copy({:'comment'=>comment, :'show_comment'=>comment})		--org.jruby.ir.instructions.CopyInstr(	comment[2.5 2.7 2.9 ] comment[2.5 2.7 2.9 ] ) 
		%v_6 = copy({:'partial'=>%v_3, :'layout'=>false, :'content_type'=>%v_4, :'locals'=>%v_5})		--org.jruby.ir.instructions.CopyInstr(	%v_3[2.11 ] %v_4[2.12 ] %v_5[2.13 ] ) 
		%v_7 = call_1o(%self, %v_6 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_6[2.14 ] ) 
		return(%v_7)		--org.jruby.ir.instructions.ReturnInstr(	%v_7[2.15 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = find_comment
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:8, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 10 11		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 398)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = search_const(scope<1> ;name: Comment, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_4 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_5 = call_1o(%v_4, :'id' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_4[2.7 ] ) 
		%v_6 = copy({:'short_id'=>%v_5})		--org.jruby.ir.instructions.CopyInstr(	%v_5[2.8 ] ) 
		%v_7 = call_1o(%v_3, %v_6 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_3[2.6 ] %v_6[2.9 ] ) 
		%v_8 = call_0o(%v_7 ;n:first, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_7[2.10 ] ) 
		comment = copy(%v_8)		--org.jruby.ir.instructions.CopyInstr(	%v_8[2.11 ] ) 
		line_num(;n: 399)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_9 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 2.7 ] %self[2.0 2.7 ] ) #<%self>#	-- [GET:%self].user 
		b_false(LBL_2:18, %v_9)		--org.jruby.ir.instructions.BFalseInstr(	%v_9[2.14 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 10 11		
	Vars Live on Exit:  0 10		
	outgoing edges:4, 
	Instructions:
		%v_9 = copy(comment)		--org.jruby.ir.instructions.CopyInstr(	comment[2.12 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0 10		
	Vars Live on Exit:  0 10 11		
	outgoing edges:5, 6, 
	Instructions:
		b_false(LBL_0:31, %v_9)		--org.jruby.ir.instructions.BFalseInstr(	%v_9[3.0 2.14 ] ) 
PRINT info for BB 5:
	Vars Live on Entry:  10		
	Vars Live on Exit:  0 10		
	outgoing edges:7, 
	Instructions:
		line_num(;n: 400)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_10 = search_const(scope<1> ;name: Vote, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_11 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_12 = call_0o(%v_11 ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_11[5.2 ] ) 
		%v_13 = call_0o(comment ;n:story_id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[2.12 ] ) 
		%v_14 = call_0o(comment ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	comment[5.4 2.12 ] ) 
		%v_15 = copy({:'user_id'=>%v_12, :'story_id'=>%v_13, :'comment_id'=>%v_14})		--org.jruby.ir.instructions.CopyInstr(	%v_12[5.3 ] %v_13[5.4 ] %v_14[5.5 ] ) 
		%v_16 = call_1o(%v_10, %v_15 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_10[5.1 ] %v_15[5.6 ] ) 
		%v_17 = call_0o(%v_16 ;n:first, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_16[5.7 ] ) 
		attr_assign(comment, %v_17 ;n:current_vote=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	comment[5.4 5.5 2.12 ] %v_17[5.8 ] ) #<comment>#	-- [PUT:comment].current_vote 
		jump(LBL_1:33)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 6:
	Vars Live on Entry:  10		
	Vars Live on Exit:  10		
	outgoing edges:7, 
	Instructions:
		%v_17 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 7:
	Vars Live on Entry: 
	Vars Live on Exit:  10		
	outgoing edges:8, 
	Instructions:
		line_num(;n: 404)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		return(comment)		--org.jruby.ir.instructions.ReturnInstr(	comment[5.9 2.12 ] ) 
PRINT info for BB 8:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

