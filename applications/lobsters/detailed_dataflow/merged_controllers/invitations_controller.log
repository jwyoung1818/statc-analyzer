SET IRMethod, name = build
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 5)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = search_const(scope<1> ;name: Rails, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_4 = call_0o(%v_3 ;n:application, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		%v_5 = call_0o(%v_4 ;n:allow_invitation_requests?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_4[2.7 ] ) 
		b_false(LBL_0:16, %v_5)		--org.jruby.ir.instructions.BFalseInstr(	%v_5[2.8 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:6, 
	Instructions:
		line_num(;n: 6)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_6 = search_const(scope<1> ;name: InvitationRequest, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_7 = call_0o(%v_6 ;n:new, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_6[3.1 ] ) 
		put_field(%self, %v_7 ;name: @invitation_request)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 ] %v_7[3.2 ] ) #<%self>#	-- [PUT:%self].invitation_request 
		line_num(;n: 11)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_12 = get_field(%self ;name: @invitation_request)		--org.jruby.ir.instructions.GetFieldInstr(	%self[3.3 2.0 ] %self[3.3 2.0 ] ) #<%self>#	-- [GET:%self].invitation_request 
		%v_13 = call_0o(%self ;n:create_invitation_by_request_path, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[3.3 2.0 ] ) 
		%v_14 = copy({:'url'=>%v_13})		--org.jruby.ir.instructions.CopyInstr(	%v_13[3.6 ] ) 
		%v_15 = call(%self, %v_12, %v_14, %self:CLOSURE build_CLOSURE_1[./lobsters/merged_controllers/invitations_controller.rb:12] ;n:form_for, t:FU, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.CallInstr(	%self[3.3 3.6 2.0 ] %v_12[3.5 ] %v_14[3.7 ] %self[3.3 3.6 2.0 ] ) 
CLOSURE BEGIN: f[] %self[3.3,3.6,2.0,] 
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 2		
	Vars Live on Exit: 
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_1_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		f = recv_pre_reqd_arg()		--org.jruby.ir.instructions.ReceivePreReqdArgInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0 2		
	outgoing edges:4, 6, 
	Instructions:
		line_num(;n: 13)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_3 = copy("Name:")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_4 = call(f, :'name', %cl_1_3 ;n:label, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	f[2.2 ] %cl_1_3[3.1 ] ) 
		line_num(;n: 14)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_5 = copy({:'size'=>Fixnum:30})		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_6 = call(f, :'name', %cl_1_5 ;n:text_field, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	f[3.2 2.2 ] %cl_1_5[3.4 ] ) 
		line_num(;n: 15)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_7 = copy("E-mail Address:")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_8 = call(f, :'email', %cl_1_7 ;n:label, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	f[3.2 3.5 2.2 ] %cl_1_7[3.7 ] ) 
		line_num(;n: 16)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_9 = copy({:'size'=>Fixnum:30})		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_10 = call(f, :'email', %cl_1_9 ;n:text_field, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	f[3.2 3.5 3.8 2.2 ] %cl_1_9[3.10 ] ) 
		line_num(;n: 17)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_11 = copy("URL:")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_12 = call(f, :'memo', %cl_1_11 ;n:label, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	f[3.2 3.5 3.8 3.11 2.2 ] %cl_1_11[3.13 ] ) 
		line_num(;n: 18)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_13 = copy({:'size'=>Fixnum:30})		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_14 = call(f, :'memo', %cl_1_13 ;n:text_field, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	f[3.2 3.5 3.8 3.11 3.14 2.2 ] %cl_1_13[3.16 ] ) 
		line_num(;n: 19)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_15 = copy("Request Invitation")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_16 = call_1o(%self, %cl_1_15 ;n:submit_tag, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %cl_1_15[3.19 ] ) 
		return(%cl_1_16)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_16[3.20 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 
	Instructions:
		%cl_1_17 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_1_18 = runtime_helper(%cl_1_17 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_1_17[4.0 ] ) 
		return(%cl_1_18)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_18[4.1 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:
CLOSURE END
		return(%v_15)		--org.jruby.ir.instructions.ReturnInstr(	%v_15[3.8 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:6, 
	Instructions:
		line_num(;n: 8)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_8 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_9 = copy("Public invitation requests are not allowed.")		--org.jruby.ir.instructions.CopyInstr(	) 
		attr_assign(%v_8, :'error', %v_9 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_8[4.1 ] %v_9[4.2 ] ) #<%v_8>#	-- [PUT:%v_8].[] 
		line_num(;n: 9)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_10 = copy("/login")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_11 = call_1o(%self, %v_10 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[4.1 2.0 ] %v_10[4.5 ] ) 
		return(%v_11)		--org.jruby.ir.instructions.ReturnInstr(	%v_11[4.6 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = index
PRINT info for BB 1:
	Vars Live on Entry:  10		
	Vars Live on Exit:  10		
	outgoing edges:12, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0		
	Vars Live on Exit:  10		
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 26)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = search_const(scope<1> ;name: InvitationRequest, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_4 = copy({:'is_verified'=>true})		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_5 = call_1o(%v_3, %v_4 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_3[2.6 ] %v_4[2.7 ] ) 
		put_field(%self, %v_5 ;name: @invitation_requests)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 ] %v_5[2.8 ] ) #<%self>#	-- [PUT:%self].invitation_requests 
		line_num(;n: 27)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_6 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 2.9 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_7 = call_0o(%v_6 ;n:is_moderator?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_6[2.11 ] ) 
		b_false(LBL_0:17, %v_7)		--org.jruby.ir.instructions.BFalseInstr(	%v_7[2.12 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:5, 
	Instructions:
		%v_8 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(LBL_1:19)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 4:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:5, 
	Instructions:
		%v_8 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 5:
	Vars Live on Entry:  0 10		
	Vars Live on Exit:  0		
	outgoing edges:6, 10, 
	Instructions:
		line_num(;n: 29)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		bit = copy(Fixnum:0)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 30)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_9 = get_field(%self ;name: @invitation_requests)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 2.9 ] %self[2.0 2.9 ] ) #<%self>#	-- [GET:%self].invitation_requests 
		%v_10 = call(%v_9, %self:CLOSURE index_CLOSURE_1[./lobsters/merged_controllers/invitations_controller.rb:30] ;n:each, t:NO, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.CallInstr(	%v_9[5.3 ] %self[2.0 2.9 ] ) 
CLOSURE BEGIN: ir[] %self[2.0,2.9,] bit[5.1,] 
PRINT info for BB 1:
	Vars Live on Entry:  2 21		
	Vars Live on Exit:  2 21		
	outgoing edges:15, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 2 21		
	Vars Live on Exit:  21		
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_1_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		ir = recv_pre_reqd_arg()		--org.jruby.ir.instructions.ReceivePreReqdArgInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 3:
	Vars Live on Entry:  0 2 21		
	Vars Live on Exit:  0 2 21		
	outgoing edges:4, 5, 13, 
	Instructions:
		line_num(;n: 31)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		line_num(;n: 32)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_3 = call_0o(ir ;n:created_at, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	ir[2.2 ] ) 
		%cl_1_4 = copy("%Y-%m-%d %H:%M:%S")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_5 = call_1o(%cl_1_3, %cl_1_4 ;n:strftime, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_1_3[3.2 ] %cl_1_4[3.3 ] ) 
		line_num(;n: 33)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_6 = call_0o(ir ;n:name, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	ir[3.2 2.2 ] ) 
		line_num(;n: 34)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_7 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%cl_1_8 = call_0o(%cl_1_7 ;n:is_moderator?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_7[3.8 ] ) 
		b_false(CL1_LBL_0:22, %cl_1_8)		--org.jruby.ir.instructions.BFalseInstr(	%cl_1_8[3.9 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0 2 21		
	Vars Live on Exit:  0 2 21		
	outgoing edges:6, 13, 
	Instructions:
		line_num(;n: 35)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_9 = call_0o(ir ;n:email, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	ir[2.2 ] ) 
		jump(CL1_LBL_1:24)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 5:
	Vars Live on Entry:  0 2 21		
	Vars Live on Exit:  0 2 21		
	outgoing edges:6, 
	Instructions:
		%cl_1_9 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 6:
	Vars Live on Entry:  0 2 21		
	Vars Live on Exit:  0 2 21		
	outgoing edges:7, 8, 13, 
	Instructions:
		line_num(;n: 37)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_10 = call_0o(ir ;n:markeddown_memo, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	ir[2.2 ] ) 
		%cl_1_11 = call_1o(%self, %cl_1_10 ;n:raw, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %cl_1_10[6.1 ] ) 
		line_num(;n: 38)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_12 = call_0o(%self ;n:send_invitation_for_request_path, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[6.2 2.0 ] ) 
		%cl_1_13 = call_1ob(%self, %cl_1_12, %self:CLOSURE index_CLOSURE_1_CLOSURE_2[./lobsters/merged_controllers/invitations_controller.rb:38] ;n:form_tag, t:FU, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.specialized.OneOperandArgBlockCallInstr(	%self[6.2 6.4 2.0 ] %cl_1_12[6.4 ] %self[6.2 6.4 2.0 ] ) 
CLOSURE BEGIN: ir[6.1,2.2,] %self[6.2,6.4,2.0,] 
PRINT info for BB 1:
	Vars Live on Entry:  6		
	Vars Live on Exit:  6		
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 6		
	Vars Live on Exit:  6		
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_2_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0 6		
	outgoing edges:4, 6, 
	Instructions:
		line_num(;n: 39)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_3 = copy("code")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_4 = call_0o(ir ;n:code, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	ir[] ) 
		%cl_2_5 = call(%self, %cl_2_3, %cl_2_4 ;n:hidden_field_tag, t:FU, cl:false)		--org.jruby.ir.instructions.CallInstr(	%self[2.0 ] %cl_2_3[3.1 ] %cl_2_4[3.2 ] ) 
		line_num(;n: 40)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_2_6 = copy("Send Invitation")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_7 = copy("Are ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_8 = copy("you sure you want to invite this person and remove this request?")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_2_9 = call_1o(%cl_2_7, %cl_2_8 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_2_7[3.6 ] %cl_2_8[3.7 ] ) 
		%cl_2_10 = copy({:'confirm'=>%cl_2_9})		--org.jruby.ir.instructions.CopyInstr(	%cl_2_9[3.8 ] ) 
		%cl_2_11 = copy({:'data'=>%cl_2_10})		--org.jruby.ir.instructions.CopyInstr(	%cl_2_10[3.9 ] ) 
		%cl_2_12 = call(%self, %cl_2_6, %cl_2_11 ;n:submit_tag, t:FU, cl:false)		--org.jruby.ir.instructions.CallInstr(	%self[3.3 2.0 ] %cl_2_6[3.5 ] %cl_2_11[3.10 ] ) 
		return(%cl_2_12)		--org.jruby.ir.instructions.ReturnInstr(	%cl_2_12[3.11 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 
	Instructions:
		%cl_2_13 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_2_14 = runtime_helper(%cl_2_13 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_2_13[4.0 ] ) 
		return(%cl_2_14)		--org.jruby.ir.instructions.ReturnInstr(	%cl_2_14[4.1 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:
CLOSURE END
		line_num(;n: 43)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_14 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[6.2 6.4 2.0 ] %self[6.2 6.4 2.0 ] ) #<%self>#	-- [GET:%self].user 
		%cl_1_15 = call_0o(%cl_1_14 ;n:is_moderator?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_14[6.7 ] ) 
		b_false(CL1_LBL_2:39, %cl_1_15)		--org.jruby.ir.instructions.BFalseInstr(	%cl_1_15[6.8 ] ) 
PRINT info for BB 7:
	Vars Live on Entry:  2 21		
	Vars Live on Exit:  0 2 21		
	outgoing edges:9, 13, 
	Instructions:
		line_num(;n: 44)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_16 = call_0o(%self ;n:delete_invitation_request_path, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%cl_1_17 = call_1ob(%self, %cl_1_16, %self:CLOSURE index_CLOSURE_1_CLOSURE_3[./lobsters/merged_controllers/invitations_controller.rb:44] ;n:form_tag, t:FU, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.specialized.OneOperandArgBlockCallInstr(	%self[7.1 2.0 ] %cl_1_16[7.1 ] %self[7.1 2.0 ] ) 
CLOSURE BEGIN: ir[2.2,] %self[7.1,2.0,] 
PRINT info for BB 1:
	Vars Live on Entry:  6		
	Vars Live on Exit:  6		
	outgoing edges:6, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 6		
	Vars Live on Exit:  6		
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_3_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0 6		
	outgoing edges:4, 6, 
	Instructions:
		line_num(;n: 45)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_3_3 = copy("code")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_3_4 = call_0o(ir ;n:code, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	ir[] ) 
		%cl_3_5 = call(%self, %cl_3_3, %cl_3_4 ;n:hidden_field_tag, t:FU, cl:false)		--org.jruby.ir.instructions.CallInstr(	%self[2.0 ] %cl_3_3[3.1 ] %cl_3_4[3.2 ] ) 
		line_num(;n: 46)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_3_6 = copy("Delete")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_3_7 = copy("Are you sure ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_3_8 = copy("you want to delete this request?")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_3_9 = call_1o(%cl_3_7, %cl_3_8 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_3_7[3.6 ] %cl_3_8[3.7 ] ) 
		%cl_3_10 = copy({:'confirm'=>%cl_3_9})		--org.jruby.ir.instructions.CopyInstr(	%cl_3_9[3.8 ] ) 
		%cl_3_11 = copy({:'data'=>%cl_3_10})		--org.jruby.ir.instructions.CopyInstr(	%cl_3_10[3.9 ] ) 
		%cl_3_12 = call(%self, %cl_3_6, %cl_3_11 ;n:submit_tag, t:FU, cl:false)		--org.jruby.ir.instructions.CallInstr(	%self[3.3 2.0 ] %cl_3_6[3.5 ] %cl_3_11[3.10 ] ) 
		return(%cl_3_12)		--org.jruby.ir.instructions.ReturnInstr(	%cl_3_12[3.11 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:6, 
	Instructions:
		%cl_3_13 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_3_14 = runtime_helper(%cl_3_13 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_3_13[4.0 ] ) 
		return(%cl_3_14)		--org.jruby.ir.instructions.ReturnInstr(	%cl_3_14[4.1 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:
CLOSURE END
		jump(CL1_LBL_3:41)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 8:
	Vars Live on Entry:  2 21		
	Vars Live on Exit:  2 21		
	outgoing edges:9, 
	Instructions:
		%cl_1_17 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 9:
	Vars Live on Entry:  2 21		
	Vars Live on Exit:  2 21		
	outgoing edges:10, 11, 13, 
	Instructions:
		line_num(;n: 50)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_18 = call_1f(bit, Fixnum:1 ;n:==, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	bit[] ) 
		b_false(CL1_LBL_4:47, %cl_1_18)		--org.jruby.ir.instructions.BFalseInstr(	%cl_1_18[9.1 ] ) 
PRINT info for BB 10:
	Vars Live on Entry:  2 22		
	Vars Live on Exit:  2		
	outgoing edges:12, 
	Instructions:
		%cl_1_19 = copy(Fixnum:0)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL1_LBL_5:49)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 11:
	Vars Live on Entry:  2 22		
	Vars Live on Exit:  2		
	outgoing edges:12, 
	Instructions:
		%cl_1_19 = copy(Fixnum:1)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 12:
	Vars Live on Entry:  2 21		
	Vars Live on Exit:  2 22		
	outgoing edges:15, 
	Instructions:
		bit = copy(%cl_1_19)		--org.jruby.ir.instructions.CopyInstr(	%cl_1_19[11.0 10.0 ] ) 
		return(%cl_1_19)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_19[11.0 10.0 ] ) 
PRINT info for BB 13:
	Vars Live on Entry:  2 21		
	Vars Live on Exit:  2 21		
	outgoing edges:15, 
	Instructions:
		%cl_1_20 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_1_21 = runtime_helper(%cl_1_20 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_1_20[13.0 ] ) 
		return(%cl_1_21)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_21[13.1 ] ) 
PRINT info for BB 15:
	Vars Live on Entry:  2 21		
	Vars Live on Exit:  2 21		
	outgoing edges:
	Instructions:
CLOSURE END
		line_num(;n: 52)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_11 = get_field(%self ;name: @invitation_requests)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 2.9 ] %self[2.0 2.9 ] ) #<%self>#	-- [GET:%self].invitation_requests 
		%v_12 = call_0o(%v_11 ;n:count, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_11[5.6 ] ) 
		%v_13 = call_1f(%v_12, Fixnum:0 ;n:==, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%v_12[5.7 ] ) 
		b_false(LBL_2:40, %v_13)		--org.jruby.ir.instructions.BFalseInstr(	%v_13[5.8 ] ) 
PRINT info for BB 6:
	Vars Live on Entry:  10		
	Vars Live on Exit:  0 10		
	outgoing edges:7, 8, 
	Instructions:
		line_num(;n: 53)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_14 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 2.9 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_15 = call_0o(%v_14 ;n:is_moderator?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_14[6.1 ] ) 
		b_false(LBL_4:36, %v_15)		--org.jruby.ir.instructions.BFalseInstr(	%v_15[6.2 ] ) 
PRINT info for BB 7:
	Vars Live on Entry:  10 18		
	Vars Live on Exit:  10		
	outgoing edges:9, 
	Instructions:
		%v_16 = copy(Fixnum:5)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(LBL_5:38)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 8:
	Vars Live on Entry:  10 18		
	Vars Live on Exit:  10		
	outgoing edges:9, 
	Instructions:
		%v_16 = copy(Fixnum:4)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 9:
	Vars Live on Entry:  10		
	Vars Live on Exit:  10 18		
	outgoing edges:12, 
	Instructions:
		return(%v_16)		--org.jruby.ir.instructions.ReturnInstr(	%v_16[8.0 7.0 ] ) 
PRINT info for BB 10:
	Vars Live on Entry:  10		
	Vars Live on Exit:  10		
	outgoing edges:12, 
	Instructions:
		return(nil)		--org.jruby.ir.instructions.ReturnInstr(	) 
PRINT info for BB 12:
	Vars Live on Entry:  10		
	Vars Live on Exit:  10		
	outgoing edges:
	Instructions:

SET IRMethod, name = confirm_email
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:7, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 11		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 60)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = search_const(scope<1> ;name: InvitationRequest, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_4 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_5 = call_1o(%v_4, :'code' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_4[2.7 ] ) 
		%v_6 = call_0o(%v_5 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_5[2.8 ] ) 
		%v_7 = copy({:'code'=>%v_6})		--org.jruby.ir.instructions.CopyInstr(	%v_6[2.9 ] ) 
		%v_8 = call_1o(%v_3, %v_7 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_3[2.6 ] %v_7[2.10 ] ) 
		%v_9 = call_0o(%v_8 ;n:first, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_8[2.11 ] ) 
		ir = copy(%v_9)		--org.jruby.ir.instructions.CopyInstr(	%v_9[2.12 ] ) 
		%v_10 = copy(%v_9)		--org.jruby.ir.instructions.CopyInstr(	%v_9[2.12 ] ) 
		%v_11 = call_0o(%v_9 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_9[2.12 ] ) 
		b_false(LBL_0:26, %v_11)		--org.jruby.ir.instructions.BFalseInstr(	%v_11[2.15 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:7, 
	Instructions:
		line_num(;n: 61)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_12 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_13 = copy("Invalid or expired invitation request")		--org.jruby.ir.instructions.CopyInstr(	) 
		attr_assign(%v_12, :'error', %v_13 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_12[3.1 ] %v_13[3.2 ] ) #<%v_12>#	-- [PUT:%v_12].[] 
		line_num(;n: 62)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_14 = copy("/invitations/request")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_15 = call_1o(%self, %v_14 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[3.1 2.0 ] %v_14[3.5 ] ) 
		return(%v_15)		--org.jruby.ir.instructions.ReturnInstr(	%v_15[3.6 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit:  0 11		
	outgoing edges:7, 
	Instructions:
		%v_16 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 65)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		attr_assign(ir, true ;n:is_verified=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	ir[2.13 ] ) #<ir>#	-- [PUT:ir].is_verified 
		line_num(;n: 66)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_17 = call_0o(ir ;n:save!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	ir[4.2 2.13 ] ) 
		line_num(;n: 68)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_18 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_19 = copy("Your invitation request has been validated and ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_20 = copy("will now be shown to other logged-in users.")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_21 = call_1o(%v_19, %v_20 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_19[4.7 ] %v_20[4.8 ] ) 
		attr_assign(%v_18, :'success', %v_21 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_18[4.6 ] %v_21[4.9 ] ) #<%v_18>#	-- [PUT:%v_18].[] 
		line_num(;n: 70)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_22 = copy("/invitations/request")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_23 = call_1o(%self, %v_22 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[4.6 2.0 ] %v_22[4.12 ] ) 
		return(%v_23)		--org.jruby.ir.instructions.ReturnInstr(	%v_23[4.13 ] ) 
PRINT info for BB 7:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = create
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:15, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 6 13		
	Vars Live on Exit: 
	outgoing edges:4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 75)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = search_const(scope<1> ;name: Invitation, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_4 = call_0o(%v_3 ;n:new, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		i = copy(%v_4)		--org.jruby.ir.instructions.CopyInstr(	%v_4[2.7 ] ) 
		line_num(;n: 76)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_5 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_6 = call_0o(%v_5 ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_5[2.10 ] ) 
		attr_assign(i, %v_6 ;n:user_id=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	i[2.8 ] %v_6[2.11 ] ) #<i>#	-- [PUT:i].user_id 
		line_num(;n: 77)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_7 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_8 = call_1o(%v_7, :'email' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_7[2.14 ] ) 
		attr_assign(i, %v_8 ;n:email=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	i[2.8 2.12 ] %v_8[2.15 ] ) #<i>#	-- [PUT:i].email 
		line_num(;n: 78)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_9 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 2.14 ] ) 
		%v_10 = call_1o(%v_9, :'memo' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_9[2.18 ] ) 
		attr_assign(i, %v_10 ;n:memo=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	i[2.8 2.12 2.16 ] %v_10[2.19 ] ) #<i>#	-- [PUT:i].memo 
		line_num(;n: 80)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_11 = get_global_var($!)		--org.jruby.ir.instructions.GetGlobalVariableInstr(	) 
PRINT info for BB 4:
	Vars Live on Entry:  0 13		
	Vars Live on Exit:  0 6 13		
	outgoing edges:5, 6, 
	Instructions:
		toggle_backtrace(;true)		--org.jruby.ir.instructions.ToggleBacktraceInstr(	) 
		line_num(;n: 81)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_14 = call_0o(i ;n:save!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	i[2.8 2.12 2.16 2.20 ] ) 
		line_num(;n: 82)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_15 = call_0o(i ;n:send_email, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	i[4.2 2.8 2.12 2.16 2.20 ] ) 
		line_num(;n: 83)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_16 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_17 = copy("Successfully e-mailed invitation to ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_18 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[4.6 2.0 ] ) 
		%v_19 = call_1o(%v_18, :'email' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_18[4.8 ] ) 
		%v_20 = call_0o(%v_19 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_19[4.9 ] ) 
		%v_21 = call_1o(%v_17, %v_20 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_17[4.7 ] %v_20[4.10 ] ) 
		%v_22 = copy(".")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_23 = call_1o(%v_21, %v_22 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_21[4.11 ] %v_22[4.12 ] ) 
		attr_assign(%v_16, :'success', %v_23 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_16[4.6 ] %v_23[4.13 ] ) #<%v_16>#	-- [PUT:%v_16].[] 
		%v_13 = copy(%v_23)		--org.jruby.ir.instructions.CopyInstr(	%v_23[4.13 ] ) 
		put_global_var($!, %v_11)		--org.jruby.ir.instructions.PutGlobalVarInstr(	%v_11[2.22 ] ) 
PRINT info for BB 5:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:11, 
	Instructions:
		jump(LBL_2:74)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 6:
	Vars Live on Entry:  0 13 25		
	Vars Live on Exit:  0 13		
	outgoing edges:7, 8, 10, 
	Instructions:
		%v_24 = recv_ruby_exc()		--org.jruby.ir.instructions.ReceiveRubyExceptionInstr(	) 
		%v_25 = rescue_eqq(StandardError, %v_24)		--org.jruby.ir.instructions.RescueEQQInstr(	%v_24[6.0 ] ) 
		b_true(LBL_8:56, %v_25)		--org.jruby.ir.instructions.BTrueInstr(	%v_25[6.1 ] ) 
PRINT info for BB 7:
	Vars Live on Entry:  13		
	Vars Live on Exit:  13 25		
	outgoing edges:10, 15, 
	Instructions:
		throw(%v_24)		--org.jruby.ir.instructions.ThrowExceptionInstr(	%v_24[6.0 ] ) 
PRINT info for BB 8:
	Vars Live on Entry:  0 13		
	Vars Live on Exit:  0 13		
	outgoing edges:9, 10, 
	Instructions:
		line_num(;n: 86)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_26 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_27 = copy("Could not send invitation, verify the e-mail ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_28 = copy("address is valid.")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_29 = call_1o(%v_27, %v_28 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_27[8.2 ] %v_28[8.3 ] ) 
		attr_assign(%v_26, :'error', %v_29 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_26[8.1 ] %v_29[8.4 ] ) #<%v_26>#	-- [PUT:%v_26].[] 
		%v_13 = copy(%v_29)		--org.jruby.ir.instructions.CopyInstr(	%v_29[8.4 ] ) 
		put_global_var($!, %v_11)		--org.jruby.ir.instructions.PutGlobalVarInstr(	%v_11[2.22 ] ) 
PRINT info for BB 9:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:11, 
	Instructions:
		jump(LBL_2:74)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 10:
	Vars Live on Entry: 
	Vars Live on Exit:  13		
	outgoing edges:15, 
	Instructions:
		%v_30 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%v_31 = runtime_helper(%v_30, %v_11 ;method: RESTORE_EXCEPTION_VAR)		--org.jruby.ir.instructions.RuntimeHelperCall(	%v_30[10.0 ] %v_11[2.22 ] ) 
		throw(%v_30)		--org.jruby.ir.instructions.ThrowExceptionInstr(	%v_30[10.0 ] ) 
PRINT info for BB 11:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:12, 13, 
	Instructions:
		line_num(;n: 90)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_32 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_33 = call_1o(%v_32, :'return_home' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_32[11.1 ] ) 
		b_false(LBL_10:83, %v_33)		--org.jruby.ir.instructions.BFalseInstr(	%v_33[11.2 ] ) 
PRINT info for BB 12:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:15, 
	Instructions:
		line_num(;n: 91)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_34 = copy("/")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_35 = call_1o(%self, %v_34 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_34[12.1 ] ) 
		return(%v_35)		--org.jruby.ir.instructions.ReturnInstr(	%v_35[12.2 ] ) 
PRINT info for BB 13:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:15, 
	Instructions:
		line_num(;n: 93)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_37 = copy("/settings")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_38 = call_1o(%self, %v_37 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_37[13.1 ] ) 
		return(%v_38)		--org.jruby.ir.instructions.ReturnInstr(	%v_38[13.2 ] ) 
PRINT info for BB 15:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = create_by_request
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:9, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0		
	Vars Live on Exit: 
	outgoing edges:3, 7, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 99)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = search_const(scope<1> ;name: Rails, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_4 = call_0o(%v_3 ;n:application, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		%v_5 = call_0o(%v_4 ;n:allow_invitation_requests?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_4[2.7 ] ) 
		b_false(LBL_0:49, %v_5)		--org.jruby.ir.instructions.BFalseInstr(	%v_5[2.8 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0		
	Vars Live on Exit:  0		
	outgoing edges:4, 5, 
	Instructions:
		line_num(;n: 100)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_6 = search_const(scope<1> ;name: InvitationRequest, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_7 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_8 = call_1o(%v_7, :'invitation_request' ;n:require, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_7[3.2 ] ) 
		%v_9 = call(%v_8, :'name', :'email', :'memo' ;n:permit, t:NO, cl:false)		--org.jruby.ir.instructions.CallInstr(	%v_8[3.3 ] ) 
		%v_10 = call_1o(%v_6, %v_9 ;n:new, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_6[3.1 ] %v_9[3.4 ] ) 
		put_field(%self, %v_10 ;name: @invitation_request)		--org.jruby.ir.instructions.PutFieldInstr(	%self[3.2 2.0 ] %v_10[3.5 ] ) #<%self>#	-- [PUT:%self].invitation_request 
		line_num(;n: 103)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_11 = get_field(%self ;name: @invitation_request)		--org.jruby.ir.instructions.GetFieldInstr(	%self[3.2 3.6 2.0 ] %self[3.2 3.6 2.0 ] ) #<%self>#	-- [GET:%self].invitation_request 
		%v_12 = call_0o(%self ;n:request, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[3.2 3.6 2.0 ] ) 
		%v_13 = call_0o(%v_12 ;n:remote_ip, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_12[3.9 ] ) 
		attr_assign(%v_11, %v_13 ;n:ip_address=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	%v_11[3.8 ] %v_13[3.10 ] ) #<%v_11>#	-- [PUT:%v_11].ip_address 
		line_num(;n: 105)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_14 = get_field(%self ;name: @invitation_request)		--org.jruby.ir.instructions.GetFieldInstr(	%self[3.2 3.6 3.9 2.0 ] %self[3.2 3.6 3.9 2.0 ] ) #<%self>#	-- [GET:%self].invitation_request 
		%v_15 = call_0o(%v_14 ;n:save, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_14[3.13 ] ) 
		b_false(LBL_2:42, %v_15)		--org.jruby.ir.instructions.BFalseInstr(	%v_15[3.14 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:9, 
	Instructions:
		line_num(;n: 106)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_16 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[3.6 2.0 ] ) 
		%v_17 = copy("You have been e-mailed a confirmation to ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_18 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[4.1 3.6 2.0 ] ) 
		%v_19 = call_1o(%v_18, :'invitation_request' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_18[4.3 ] ) 
		%v_20 = call_1o(%v_19, :'email' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_19[4.4 ] ) 
		%v_21 = call_0o(%v_20 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_20[4.5 ] ) 
		%v_22 = call_1o(%v_17, %v_21 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_17[4.2 ] %v_21[4.6 ] ) 
		%v_23 = copy(".")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_24 = call_1o(%v_22, %v_23 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_22[4.7 ] %v_23[4.8 ] ) 
		attr_assign(%v_16, :'success', %v_24 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_16[4.1 ] %v_24[4.9 ] ) #<%v_16>#	-- [PUT:%v_16].[] 
		line_num(;n: 108)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_25 = copy("/invitations/request")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_26 = call_1o(%self, %v_25 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[4.1 4.3 3.6 2.0 ] %v_25[4.12 ] ) 
		return(%v_26)		--org.jruby.ir.instructions.ReturnInstr(	%v_26[4.13 ] ) 
PRINT info for BB 5:
	Vars Live on Entry:  30		
	Vars Live on Exit:  0		
	outgoing edges:8, 
	Instructions:
		line_num(;n: 110)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_28 = copy({:'action'=>:'build'})		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_29 = call_1o(%self, %v_28 ;n:render, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[3.6 2.0 ] %v_28[5.1 ] ) 
		%v_27 = copy(%v_29)		--org.jruby.ir.instructions.CopyInstr(	%v_29[5.2 ] ) 
		jump(LBL_1:54)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 7:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:9, 
	Instructions:
		line_num(;n: 113)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_30 = copy("/login")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_31 = call_1o(%self, %v_30 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_30[7.1 ] ) 
		return(%v_31)		--org.jruby.ir.instructions.ReturnInstr(	%v_31[7.2 ] ) 
PRINT info for BB 8:
	Vars Live on Entry: 
	Vars Live on Exit:  30		
	outgoing edges:9, 
	Instructions:
		return(%v_27)		--org.jruby.ir.instructions.ReturnInstr(	%v_27[5.3 ] ) 
PRINT info for BB 9:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = send_for_request
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:7, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 11		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 119)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = search_const(scope<1> ;name: InvitationRequest, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_4 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_5 = call_1o(%v_4, :'code' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_4[2.7 ] ) 
		%v_6 = call_0o(%v_5 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_5[2.8 ] ) 
		%v_7 = copy({:'code'=>%v_6})		--org.jruby.ir.instructions.CopyInstr(	%v_6[2.9 ] ) 
		%v_8 = call_1o(%v_3, %v_7 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_3[2.6 ] %v_7[2.10 ] ) 
		%v_9 = call_0o(%v_8 ;n:first, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_8[2.11 ] ) 
		ir = copy(%v_9)		--org.jruby.ir.instructions.CopyInstr(	%v_9[2.12 ] ) 
		%v_10 = copy(%v_9)		--org.jruby.ir.instructions.CopyInstr(	%v_9[2.12 ] ) 
		%v_11 = call_0o(%v_9 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_9[2.12 ] ) 
		b_false(LBL_0:26, %v_11)		--org.jruby.ir.instructions.BFalseInstr(	%v_11[2.15 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:7, 
	Instructions:
		line_num(;n: 120)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_12 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_13 = copy("Invalid or expired invitation request")		--org.jruby.ir.instructions.CopyInstr(	) 
		attr_assign(%v_12, :'error', %v_13 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_12[3.1 ] %v_13[3.2 ] ) #<%v_12>#	-- [PUT:%v_12].[] 
		line_num(;n: 121)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_14 = copy("/invitations")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_15 = call_1o(%self, %v_14 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[3.1 2.0 ] %v_14[3.5 ] ) 
		return(%v_15)		--org.jruby.ir.instructions.ReturnInstr(	%v_15[3.6 ] ) 
PRINT info for BB 4:
	Vars Live on Entry: 
	Vars Live on Exit:  0 11		
	outgoing edges:7, 
	Instructions:
		%v_16 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 124)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_17 = search_const(scope<1> ;name: Invitation, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_18 = call_0o(%v_17 ;n:new, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_17[4.2 ] ) 
		i = copy(%v_18)		--org.jruby.ir.instructions.CopyInstr(	%v_18[4.3 ] ) 
		line_num(;n: 125)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_19 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_20 = call_0o(%v_19 ;n:id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_19[4.6 ] ) 
		attr_assign(i, %v_20 ;n:user_id=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	i[4.4 ] %v_20[4.7 ] ) #<i>#	-- [PUT:i].user_id 
		line_num(;n: 126)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_21 = call_0o(ir ;n:email, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	ir[2.13 ] ) 
		attr_assign(i, %v_21 ;n:email=, t:UN, cl:false)		--org.jruby.ir.instructions.specialized.OneArgOperandAttrAssignInstr(	i[4.4 4.8 ] %v_21[4.10 ] ) #<i>#	-- [PUT:i].email 
		line_num(;n: 128)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_22 = call_0o(i ;n:save!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	i[4.4 4.8 4.11 ] ) 
		line_num(;n: 129)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_23 = call_0o(i ;n:send_email, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	i[4.4 4.8 4.11 4.13 ] ) 
		line_num(;n: 130)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_24 = call_0o(ir ;n:destroy!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	ir[4.10 2.13 ] ) 
		line_num(;n: 131)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_25 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_26 = copy("Successfully e-mailed invitation to ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_27 = call_0o(ir ;n:name, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	ir[4.10 4.17 2.13 ] ) 
		%v_28 = call_0o(%v_27 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_27[4.21 ] ) 
		%v_29 = call_1o(%v_26, %v_28 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_26[4.20 ] %v_28[4.22 ] ) 
		%v_30 = copy(".")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_31 = call_1o(%v_29, %v_30 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_29[4.23 ] %v_30[4.24 ] ) 
		attr_assign(%v_25, :'success', %v_31 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_25[4.19 ] %v_31[4.25 ] ) #<%v_25>#	-- [PUT:%v_25].[] 
		line_num(;n: 134)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_32 = copy("/invitations")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_33 = call_1o(%self, %v_32 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[4.19 2.0 ] %v_32[4.28 ] ) 
		return(%v_33)		--org.jruby.ir.instructions.ReturnInstr(	%v_33[4.29 ] ) 
PRINT info for BB 7:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

SET IRMethod, name = delete_request
PRINT info for BB 1:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:10, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0		
	Vars Live on Exit: 
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 139)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = get_field(%self ;name: @user)		--org.jruby.ir.instructions.GetFieldInstr(	%self[2.0 ] %self[2.0 ] ) #<%self>#	-- [GET:%self].user 
		%v_4 = call_0o(%v_3 ;n:is_moderator?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_3[2.6 ] ) 
		%v_5 = call_0o(%v_4 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_4[2.7 ] ) 
		b_false(LBL_0:15, %v_5)		--org.jruby.ir.instructions.BFalseInstr(	%v_5[2.8 ] ) 
PRINT info for BB 3:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:10, 
	Instructions:
		line_num(;n: 140)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_6 = copy("/invitations")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_7 = call_1o(%self, %v_6 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[2.0 ] %v_6[3.1 ] ) 
		return(%v_7)		--org.jruby.ir.instructions.ReturnInstr(	%v_7[3.2 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  0 17		
	Vars Live on Exit:  0		
	outgoing edges:6, 7, 
	Instructions:
		%v_8 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 143)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_9 = search_const(scope<1> ;name: InvitationRequest, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_10 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_11 = call_1o(%v_10, :'code' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_10[4.3 ] ) 
		%v_12 = call_0o(%v_11 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_11[4.4 ] ) 
		%v_13 = copy({:'code'=>%v_12})		--org.jruby.ir.instructions.CopyInstr(	%v_12[4.5 ] ) 
		%v_14 = call_1o(%v_9, %v_13 ;n:where, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_9[4.2 ] %v_13[4.6 ] ) 
		%v_15 = call_0o(%v_14 ;n:first, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_14[4.7 ] ) 
		ir = copy(%v_15)		--org.jruby.ir.instructions.CopyInstr(	%v_15[4.8 ] ) 
		%v_16 = copy(%v_15)		--org.jruby.ir.instructions.CopyInstr(	%v_15[4.8 ] ) 
		%v_17 = call_0o(%v_15 ;n:!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_15[4.8 ] ) 
		b_false(LBL_2:38, %v_17)		--org.jruby.ir.instructions.BFalseInstr(	%v_17[4.11 ] ) 
PRINT info for BB 6:
	Vars Live on Entry: 
	Vars Live on Exit:  0		
	outgoing edges:10, 
	Instructions:
		line_num(;n: 144)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_18 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_19 = copy("Invalid or expired invitation request")		--org.jruby.ir.instructions.CopyInstr(	) 
		attr_assign(%v_18, :'error', %v_19 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_18[6.1 ] %v_19[6.2 ] ) #<%v_18>#	-- [PUT:%v_18].[] 
		line_num(;n: 145)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_20 = copy("/invitations")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_21 = call_1o(%self, %v_20 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[6.1 2.0 ] %v_20[6.5 ] ) 
		return(%v_21)		--org.jruby.ir.instructions.ReturnInstr(	%v_21[6.6 ] ) 
PRINT info for BB 7:
	Vars Live on Entry: 
	Vars Live on Exit:  0 17		
	outgoing edges:10, 
	Instructions:
		%v_22 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 148)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_23 = call_0o(ir ;n:destroy!, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	ir[4.9 ] ) 
		line_num(;n: 149)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_24 = call_0o(%self ;n:flash, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 ] ) 
		%v_25 = copy("Successfully deleted invitation request from ")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_26 = call_0o(ir ;n:name, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	ir[7.2 4.9 ] ) 
		%v_27 = call_0o(%v_26 ;n:to_s, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_26[7.6 ] ) 
		%v_28 = call_1o(%v_25, %v_27 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_25[7.5 ] %v_27[7.7 ] ) 
		%v_29 = copy(".")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_30 = call_1o(%v_28, %v_29 ;n:<<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_28[7.8 ] %v_29[7.9 ] ) 
		attr_assign(%v_24, :'success', %v_30 ;n:[]=, t:UN, cl:false)		--org.jruby.ir.instructions.AttrAssignInstr(	%v_24[7.4 ] %v_30[7.10 ] ) #<%v_24>#	-- [PUT:%v_24].[] 
		line_num(;n: 152)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_31 = copy("/invitations")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_32 = call_1o(%self, %v_31 ;n:redirect_to, t:FU, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%self[7.4 2.0 ] %v_31[7.13 ] ) 
		return(%v_32)		--org.jruby.ir.instructions.ReturnInstr(	%v_32[7.14 ] ) 
PRINT info for BB 10:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:

