SET IRMethod, name = index
PRINT info for BB 1:
	Vars Live on Entry:  29		
	Vars Live on Exit:  29		
	outgoing edges:23, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  0 29		
	Vars Live on Exit:  29		
	outgoing edges:3, 4, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%v_0 = load_implicit_closure()		--org.jruby.ir.instructions.LoadImplicitClosureInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		check_arity(;req: 0, opt: 0, *r: false, kw: false)		--org.jruby.ir.instructions.CheckArityInstr(	) 
		line_num(;n: 2)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_3 = copy("Moderation Log")		--org.jruby.ir.instructions.CopyInstr(	) 
		put_field(%self, %v_3 ;name: @title)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 ] %v_3[2.6 ] ) #<%self>#	-- [PUT:%self].title 
		line_num(;n: 4)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_4 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 2.7 ] ) 
		%v_5 = call_1o(%v_4, :'page' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_4[2.9 ] ) 
		b_false(LBL_0:17, %v_5)		--org.jruby.ir.instructions.BFalseInstr(	%v_5[2.10 ] ) 
PRINT info for BB 3:
	Vars Live on Entry:  0 9 29		
	Vars Live on Exit:  0 29		
	outgoing edges:5, 
	Instructions:
		%v_6 = call_0o(%self ;n:params, t:VA, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%self[2.0 2.7 ] ) 
		%v_7 = call_1o(%v_6, :'page' ;n:[], t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_6[3.0 ] ) 
		%v_8 = call_0o(%v_7 ;n:to_i, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_7[3.1 ] ) 
		jump(LBL_1:19)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 4:
	Vars Live on Entry:  0 9 29		
	Vars Live on Exit:  0 29		
	outgoing edges:5, 
	Instructions:
		%v_8 = copy(Fixnum:0)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 5:
	Vars Live on Entry:  0 29		
	Vars Live on Exit:  0 9 29		
	outgoing edges:6, 7, 
	Instructions:
		put_field(%self, %v_8 ;name: @page)		--org.jruby.ir.instructions.PutFieldInstr(	%self[2.0 2.7 ] %v_8[4.0 3.2 ] ) #<%self>#	-- [PUT:%self].page 
		line_num(;n: 5)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_9 = search_const(scope<1> ;name: Moderation, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_10 = call_0o(%v_9 ;n:count, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_9[5.2 ] ) 
		%v_11 = call_1f(%v_10, Fixnum:50 ;n:/, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%v_10[5.3 ] ) 
		%v_12 = call_0o(%v_11 ;n:ceil, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%v_11[5.4 ] ) 
		put_field(%self, %v_12 ;name: @pages)		--org.jruby.ir.instructions.PutFieldInstr(	%self[5.0 2.0 2.7 ] %v_12[5.5 ] ) #<%self>#	-- [PUT:%self].pages 
		line_num(;n: 7)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_13 = get_field(%self ;name: @page)		--org.jruby.ir.instructions.GetFieldInstr(	%self[5.0 5.6 2.0 2.7 ] %self[5.0 2.0 ] ) #<%self>#	-- [GET:%self].page 
		%v_14 = call_1f(%v_13, Fixnum:1 ;n:<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%v_13[5.8 ] ) 
		b_false(LBL_2:35, %v_14)		--org.jruby.ir.instructions.BFalseInstr(	%v_14[5.9 ] ) 
PRINT info for BB 6:
	Vars Live on Entry:  0 29		
	Vars Live on Exit:  0 29		
	outgoing edges:11, 
	Instructions:
		line_num(;n: 8)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		put_field(%self, Fixnum:1 ;name: @page)		--org.jruby.ir.instructions.PutFieldInstr(	%self[5.0 5.6 2.0 2.7 ] ) #<%self>#	-- [PUT:%self].page 
		%v_15 = copy(Fixnum:1)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(LBL_3:49)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 7:
	Vars Live on Entry:  0 29		
	Vars Live on Exit:  0 29		
	outgoing edges:8, 9, 
	Instructions:
		line_num(;n: 9)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_16 = get_field(%self ;name: @page)		--org.jruby.ir.instructions.GetFieldInstr(	%self[5.0 5.6 2.0 2.7 ] %self[5.0 2.0 ] ) #<%self>#	-- [GET:%self].page 
		%v_17 = get_field(%self ;name: @pages)		--org.jruby.ir.instructions.GetFieldInstr(	%self[5.0 5.6 2.0 2.7 ] %self[5.6 2.0 ] ) #<%self>#	-- [GET:%self].pages 
		%v_18 = call_1o(%v_16, %v_17 ;n:>, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_16[7.1 ] %v_17[7.2 ] ) 
		b_false(LBL_4:45, %v_18)		--org.jruby.ir.instructions.BFalseInstr(	%v_18[7.3 ] ) 
PRINT info for BB 8:
	Vars Live on Entry:  0 20 29		
	Vars Live on Exit:  0 29		
	outgoing edges:10, 
	Instructions:
		line_num(;n: 10)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_19 = get_field(%self ;name: @pages)		--org.jruby.ir.instructions.GetFieldInstr(	%self[5.0 5.6 2.0 2.7 ] %self[5.6 2.0 ] ) #<%self>#	-- [GET:%self].pages 
		put_field(%self, %v_19 ;name: @page)		--org.jruby.ir.instructions.PutFieldInstr(	%self[5.0 5.6 2.0 2.7 ] %v_19[8.1 ] ) #<%self>#	-- [PUT:%self].page 
		jump(LBL_5:47)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 9:
	Vars Live on Entry:  0 20 29		
	Vars Live on Exit:  0 29		
	outgoing edges:10, 
	Instructions:
		%v_19 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 10:
	Vars Live on Entry:  0 29		
	Vars Live on Exit:  0 20 29		
	outgoing edges:11, 
	Instructions:
		%v_15 = copy(%v_19)		--org.jruby.ir.instructions.CopyInstr(	%v_19[9.0 8.1 ] ) 
PRINT info for BB 11:
	Vars Live on Entry:  0 29		
	Vars Live on Exit:  0 29		
	outgoing edges:12, 13, 
	Instructions:
		line_num(;n: 13)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_20 = search_const(scope<1> ;name: Moderation, no_priv: false)		--org.jruby.ir.instructions.SearchConstInstr(	) 
		%v_21 = copy("id desc")		--org.jruby.ir.instructions.CopyInstr(	) 
		%v_22 = call_1o(%v_20, %v_21 ;n:order, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_20[11.1 ] %v_21[11.2 ] ) 
		%v_23 = call_1f(%v_22, Fixnum:50 ;n:limit, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%v_22[11.3 ] ) 
		%v_24 = get_field(%self ;name: @page)		--org.jruby.ir.instructions.GetFieldInstr(	%self[6.1 8.2 5.0 5.6 2.0 2.7 ] %self[6.1 8.2 5.0 2.0 ] ) #<%self>#	-- [GET:%self].page 
		%v_25 = call_1f(%v_24, Fixnum:1 ;n:-, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%v_24[11.5 ] ) 
		%v_26 = call_1f(%v_25, Fixnum:50 ;n:*, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%v_25[11.6 ] ) 
		%v_27 = call_1o(%v_23, %v_26 ;n:offset, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_23[11.4 ] %v_26[11.7 ] ) 
		put_field(%self, %v_27 ;name: @moderations)		--org.jruby.ir.instructions.PutFieldInstr(	%self[6.1 8.2 5.0 5.6 2.0 2.7 ] %v_27[11.8 ] ) #<%self>#	-- [PUT:%self].moderations 
		line_num(;n: 15)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		bit = copy(Fixnum:0)		--org.jruby.ir.instructions.CopyInstr(	) 
		line_num(;n: 16)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_28 = get_field(%self ;name: @moderations)		--org.jruby.ir.instructions.GetFieldInstr(	%self[11.9 6.1 8.2 5.0 5.6 2.0 2.7 ] %self[11.9 2.0 ] ) #<%self>#	-- [GET:%self].moderations 
		%v_29 = call(%v_28, %self:CLOSURE index_CLOSURE_1[./lobsters/merged_controllers/moderations_controller.rb:16] ;n:each, t:NO, cl:true(org.jruby.ir.operands.WrappedIRClosure))		--org.jruby.ir.instructions.CallInstr(	%v_28[11.13 ] %self[11.9 6.1 8.2 5.0 5.6 2.0 2.7 ] ) 
CLOSURE BEGIN: mod[] bit[11.11,] 
PRINT info for BB 1:
	Vars Live on Entry:  42		
	Vars Live on Exit:  42		
	outgoing edges:33, 2, 
	Instructions:
PRINT info for BB 2:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  42		
	outgoing edges:3, 
	Instructions:
		%self = recv_self()		--org.jruby.ir.instructions.ReceiveSelfInstr(	) 
		%cl_1_0 = load_frame_closure()		--org.jruby.ir.instructions.LoadFrameClosureInstr(	) 
		mod = recv_pre_reqd_arg()		--org.jruby.ir.instructions.ReceivePreReqdArgInstr(	) 
		%current_scope = copy(scope<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
		%current_module = copy(module<0>)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 3:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  2 42		
	outgoing edges:4, 5, 31, 
	Instructions:
		line_num(;n: 17)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		line_num(;n: 18)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_3 = call_0o(mod ;n:created_at, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[2.2 ] ) 
		%cl_1_4 = copy("%Y-%m-%d %H:%M:%S")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_5 = call_1o(%cl_1_3, %cl_1_4 ;n:strftime, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_1_3[3.2 ] %cl_1_4[3.3 ] ) 
		line_num(;n: 19)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_6 = call_0o(mod ;n:moderator, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[3.2 2.2 ] ) 
		b_false(CL1_LBL_0:23, %cl_1_6)		--org.jruby.ir.instructions.BFalseInstr(	%cl_1_6[3.6 ] ) 
PRINT info for BB 4:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  2 42		
	outgoing edges:9, 31, 
	Instructions:
		line_num(;n: 20)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_7 = call_0o(mod ;n:moderator, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[2.2 ] ) 
		%cl_1_8 = call_1o(%cl_1_7, :'username' ;n:try, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_1_7[4.1 ] ) 
		line_num(;n: 22)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_9 = call_0o(mod ;n:moderator, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[4.1 2.2 ] ) 
		%cl_1_10 = call_1o(%cl_1_9, :'username' ;n:try, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%cl_1_9[4.4 ] ) 
		jump(CL1_LBL_1:33)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 5:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  2 42		
	outgoing edges:6, 7, 31, 
	Instructions:
		line_num(;n: 23)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_11 = call_0o(mod ;n:is_from_suggestions?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[2.2 ] ) 
		b_false(CL1_LBL_2:29, %cl_1_11)		--org.jruby.ir.instructions.BFalseInstr(	%cl_1_11[5.1 ] ) 
PRINT info for BB 6:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  2 42		
	outgoing edges:8, 
	Instructions:
		%cl_1_12 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL1_LBL_3:31)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 7:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  2 42		
	outgoing edges:8, 
	Instructions:
		%cl_1_12 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 8:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  2 42		
	outgoing edges:9, 
	Instructions:
		%cl_1_10 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 9:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  2 42		
	outgoing edges:10, 11, 31, 
	Instructions:
		line_num(;n: 25)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_13 = call_0o(mod ;n:story, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[2.2 ] ) 
		b_false(CL1_LBL_4:44, %cl_1_13)		--org.jruby.ir.instructions.BFalseInstr(	%cl_1_13[9.1 ] ) 
PRINT info for BB 10:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  2 42		
	outgoing edges:21, 31, 
	Instructions:
		line_num(;n: 26)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_14 = call_0o(mod ;n:story, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[2.2 ] ) 
		%cl_1_15 = call_0o(%cl_1_14 ;n:comments_path, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_14[10.1 ] ) 
		line_num(;n: 27)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_16 = call_0o(mod ;n:story, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[10.1 2.2 ] ) 
		%cl_1_17 = call_0o(%cl_1_16 ;n:title, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_16[10.4 ] ) 
		jump(CL1_LBL_5:82)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 11:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  2 42		
	outgoing edges:12, 13, 31, 
	Instructions:
		line_num(;n: 29)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_18 = call_0o(mod ;n:comment, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[2.2 ] ) 
		b_false(CL1_LBL_6:56, %cl_1_18)		--org.jruby.ir.instructions.BFalseInstr(	%cl_1_18[11.1 ] ) 
PRINT info for BB 12:
	Vars Live on Entry:  2 25 42		
	Vars Live on Exit:  2 42		
	outgoing edges:20, 31, 
	Instructions:
		line_num(;n: 30)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_19 = call_0o(mod ;n:comment, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[2.2 ] ) 
		%cl_1_20 = call_0o(%cl_1_19 ;n:url, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_19[12.1 ] ) 
		line_num(;n: 32)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_21 = call_0o(mod ;n:comment, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[12.1 2.2 ] ) 
		%cl_1_22 = call_0o(%cl_1_21 ;n:story, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_21[12.4 ] ) 
		%cl_1_23 = call_0o(%cl_1_22 ;n:title, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_22[12.5 ] ) 
		jump(CL1_LBL_7:80)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 13:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  2 42		
	outgoing edges:14, 18, 31, 
	Instructions:
		line_num(;n: 33)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_24 = call_0o(mod ;n:user_id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[2.2 ] ) 
		b_false(CL1_LBL_8:76, %cl_1_24)		--org.jruby.ir.instructions.BFalseInstr(	%cl_1_24[13.1 ] ) 
PRINT info for BB 14:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  2 42		
	outgoing edges:15, 16, 31, 
	Instructions:
		line_num(;n: 34)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_25 = call_0o(mod ;n:user, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[2.2 ] ) 
		b_false(CL1_LBL_10:70, %cl_1_25)		--org.jruby.ir.instructions.BFalseInstr(	%cl_1_25[14.1 ] ) 
PRINT info for BB 15:
	Vars Live on Entry:  2 31 42		
	Vars Live on Exit:  2 42		
	outgoing edges:17, 31, 
	Instructions:
		line_num(;n: 35)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_26 = call_0o(mod ;n:user, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[2.2 ] ) 
		%cl_1_27 = call_0o(%cl_1_26 ;n:username, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_26[15.1 ] ) 
		line_num(;n: 36)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_28 = call_0o(mod ;n:user, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[15.1 2.2 ] ) 
		%cl_1_29 = call_0o(%cl_1_28 ;n:username, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_28[15.4 ] ) 
		jump(CL1_LBL_11:74)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 16:
	Vars Live on Entry:  2 31 42		
	Vars Live on Exit:  2 42		
	outgoing edges:17, 31, 
	Instructions:
		line_num(;n: 38)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_30 = call_0o(mod ;n:user_id, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[2.2 ] ) 
		%cl_1_29 = copy(%cl_1_30)		--org.jruby.ir.instructions.CopyInstr(	%cl_1_30[16.1 ] ) 
PRINT info for BB 17:
	Vars Live on Entry:  2 31 42		
	Vars Live on Exit:  2 31 42		
	outgoing edges:19, 
	Instructions:
		jump(CL1_LBL_9:78)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 18:
	Vars Live on Entry:  2 31 42		
	Vars Live on Exit:  2 42		
	outgoing edges:19, 
	Instructions:
		%cl_1_29 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 19:
	Vars Live on Entry:  2 25 42		
	Vars Live on Exit:  2 31 42		
	outgoing edges:20, 
	Instructions:
		%cl_1_23 = copy(%cl_1_29)		--org.jruby.ir.instructions.CopyInstr(	%cl_1_29[18.0 16.2 15.5 ] ) 
PRINT info for BB 20:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  2 25 42		
	outgoing edges:21, 
	Instructions:
		%cl_1_17 = copy(%cl_1_23)		--org.jruby.ir.instructions.CopyInstr(	%cl_1_23[19.0 12.6 ] ) 
PRINT info for BB 21:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  2 42		
	outgoing edges:22, 23, 31, 
	Instructions:
		line_num(;n: 41)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		line_num(;n: 42)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_31 = call_0o(mod ;n:reason, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[2.2 ] ) 
		%cl_1_32 = call_0o(%cl_1_31 ;n:present?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_31[21.2 ] ) 
		b_false(CL1_LBL_12:90, %cl_1_32)		--org.jruby.ir.instructions.BFalseInstr(	%cl_1_32[21.3 ] ) 
PRINT info for BB 22:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  2 42		
	outgoing edges:24, 
	Instructions:
		%cl_1_33 = copy("nobottom")		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL1_LBL_13:93)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 23:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  2 42		
	outgoing edges:24, 
	Instructions:
		%cl_1_34 = copy("")		--org.jruby.ir.instructions.CopyInstr(	) 
		%cl_1_33 = copy(%cl_1_34)		--org.jruby.ir.instructions.CopyInstr(	%cl_1_34[23.0 ] ) 
PRINT info for BB 24:
	Vars Live on Entry:  2 42		
	Vars Live on Exit:  2 42		
	outgoing edges:25, 26, 31, 
	Instructions:
		line_num(;n: 43)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_35 = call_0o(mod ;n:action, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[2.2 ] ) 
		line_num(;n: 44)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_36 = call_0o(mod ;n:reason, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[24.1 2.2 ] ) 
		%cl_1_37 = call_0o(%cl_1_36 ;n:present?, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	%cl_1_36[24.3 ] ) 
		b_false(CL1_LBL_14:104, %cl_1_37)		--org.jruby.ir.instructions.BFalseInstr(	%cl_1_37[24.4 ] ) 
PRINT info for BB 25:
	Vars Live on Entry:  42		
	Vars Live on Exit:  2 42		
	outgoing edges:27, 31, 
	Instructions:
		line_num(;n: 45)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		line_num(;n: 46)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_38 = call_0o(mod ;n:reason, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr(	mod[2.2 ] ) 
		jump(CL1_LBL_15:106)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 26:
	Vars Live on Entry:  42		
	Vars Live on Exit:  42		
	outgoing edges:27, 
	Instructions:
		%cl_1_38 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 27:
	Vars Live on Entry: 
	Vars Live on Exit:  42		
	outgoing edges:28, 29, 31, 
	Instructions:
		line_num(;n: 48)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%cl_1_39 = call_1f(bit, Fixnum:1 ;n:==, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	bit[] ) 
		b_false(CL1_LBL_16:112, %cl_1_39)		--org.jruby.ir.instructions.BFalseInstr(	%cl_1_39[27.1 ] ) 
PRINT info for BB 28:
	Vars Live on Entry:  43		
	Vars Live on Exit: 
	outgoing edges:30, 
	Instructions:
		%cl_1_40 = copy(Fixnum:0)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(CL1_LBL_17:114)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 29:
	Vars Live on Entry:  43		
	Vars Live on Exit: 
	outgoing edges:30, 
	Instructions:
		%cl_1_40 = copy(Fixnum:1)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 30:
	Vars Live on Entry: 
	Vars Live on Exit:  43		
	outgoing edges:33, 
	Instructions:
		bit = copy(%cl_1_40)		--org.jruby.ir.instructions.CopyInstr(	%cl_1_40[29.0 28.0 ] ) 
		return(%cl_1_40)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_40[29.0 28.0 ] ) 
PRINT info for BB 31:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:33, 
	Instructions:
		%cl_1_41 = recv_jruby_exc()		--org.jruby.ir.instructions.ReceiveJRubyExceptionInstr(	) 
		%cl_1_42 = runtime_helper(%cl_1_41 ;method: HANDLE_BREAK_AND_RETURNS_IN_LAMBDA)		--org.jruby.ir.instructions.RuntimeHelperCall(	%cl_1_41[31.0 ] ) 
		return(%cl_1_42)		--org.jruby.ir.instructions.ReturnInstr(	%cl_1_42[31.1 ] ) 
PRINT info for BB 33:
	Vars Live on Entry: 
	Vars Live on Exit: 
	outgoing edges:
	Instructions:
CLOSURE END
		line_num(;n: 50)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_30 = get_field(%self ;name: @page)		--org.jruby.ir.instructions.GetFieldInstr(	%self[11.9 6.1 8.2 5.0 5.6 2.0 2.7 ] %self[6.1 8.2 5.0 2.0 ] ) #<%self>#	-- [GET:%self].page 
		%v_31 = call_1f(%v_30, Fixnum:1 ;n:>, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%v_30[11.16 ] ) 
		b_false(LBL_6:76, %v_31)		--org.jruby.ir.instructions.BFalseInstr(	%v_31[11.17 ] ) 
PRINT info for BB 12:
	Vars Live on Entry:  0 29		
	Vars Live on Exit:  0 29		
	outgoing edges:14, 
	Instructions:
		line_num(;n: 51)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_32 = get_field(%self ;name: @page)		--org.jruby.ir.instructions.GetFieldInstr(	%self[11.9 6.1 8.2 5.0 5.6 2.0 2.7 ] %self[6.1 8.2 5.0 2.0 ] ) #<%self>#	-- [GET:%self].page 
		%v_33 = call_1f(%v_32, Fixnum:1 ;n:-, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%v_32[12.1 ] ) 
		line_num(;n: 52)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_34 = get_field(%self ;name: @page)		--org.jruby.ir.instructions.GetFieldInstr(	%self[11.9 6.1 8.2 5.0 5.6 2.0 2.7 ] %self[6.1 8.2 5.0 2.0 ] ) #<%self>#	-- [GET:%self].page 
		%v_35 = call_1f(%v_34, Fixnum:1 ;n:-, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%v_34[12.4 ] ) 
		jump(LBL_7:78)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 13:
	Vars Live on Entry:  0 29		
	Vars Live on Exit:  0 29		
	outgoing edges:14, 
	Instructions:
		%v_35 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 14:
	Vars Live on Entry:  0 29 39		
	Vars Live on Exit:  0 29		
	outgoing edges:15, 16, 
	Instructions:
		line_num(;n: 54)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_36 = get_field(%self ;name: @pages)		--org.jruby.ir.instructions.GetFieldInstr(	%self[11.9 6.1 8.2 5.0 5.6 2.0 2.7 ] %self[5.6 2.0 ] ) #<%self>#	-- [GET:%self].pages 
		%v_37 = call_1f(%v_36, Fixnum:1 ;n:>, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%v_36[14.1 ] ) 
		b_false(LBL_10:87, %v_37)		--org.jruby.ir.instructions.BFalseInstr(	%v_37[14.2 ] ) 
PRINT info for BB 15:
	Vars Live on Entry:  0 29 39		
	Vars Live on Exit:  0 29		
	outgoing edges:16, 
	Instructions:
		%v_38 = get_field(%self ;name: @page)		--org.jruby.ir.instructions.GetFieldInstr(	%self[11.9 6.1 8.2 5.0 5.6 2.0 2.7 ] %self[6.1 8.2 5.0 2.0 ] ) #<%self>#	-- [GET:%self].page 
		%v_39 = get_field(%self ;name: @pages)		--org.jruby.ir.instructions.GetFieldInstr(	%self[11.9 6.1 8.2 5.0 5.6 2.0 2.7 ] %self[5.6 2.0 ] ) #<%self>#	-- [GET:%self].pages 
		%v_40 = call_1o(%v_38, %v_39 ;n:<, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr(	%v_38[15.0 ] %v_39[15.1 ] ) 
		%v_37 = copy(%v_40)		--org.jruby.ir.instructions.CopyInstr(	%v_40[15.2 ] ) 
PRINT info for BB 16:
	Vars Live on Entry:  0 29		
	Vars Live on Exit:  0 29 39		
	outgoing edges:17, 21, 
	Instructions:
		b_false(LBL_8:105, %v_37)		--org.jruby.ir.instructions.BFalseInstr(	%v_37[15.3 14.2 ] ) 
PRINT info for BB 17:
	Vars Live on Entry:  0 29		
	Vars Live on Exit:  0 29		
	outgoing edges:18, 19, 
	Instructions:
		line_num(;n: 55)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_41 = get_field(%self ;name: @page)		--org.jruby.ir.instructions.GetFieldInstr(	%self[11.9 6.1 8.2 5.0 5.6 2.0 2.7 ] %self[6.1 8.2 5.0 2.0 ] ) #<%self>#	-- [GET:%self].page 
		%v_42 = call_1f(%v_41, Fixnum:1 ;n:>, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%v_41[17.1 ] ) 
		b_false(LBL_11:95, %v_42)		--org.jruby.ir.instructions.BFalseInstr(	%v_42[17.2 ] ) 
PRINT info for BB 18:
	Vars Live on Entry:  0 29		
	Vars Live on Exit:  0 29		
	outgoing edges:20, 
	Instructions:
		%v_43 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
		jump(LBL_12:97)		--org.jruby.ir.instructions.JumpInstr(	) 
PRINT info for BB 19:
	Vars Live on Entry:  0 29		
	Vars Live on Exit:  0 29		
	outgoing edges:20, 
	Instructions:
		%v_43 = copy(nil)		--org.jruby.ir.instructions.CopyInstr(	) 
PRINT info for BB 20:
	Vars Live on Entry:  29		
	Vars Live on Exit:  0 29		
	outgoing edges:23, 
	Instructions:
		line_num(;n: 57)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_44 = get_field(%self ;name: @page)		--org.jruby.ir.instructions.GetFieldInstr(	%self[11.9 6.1 8.2 5.0 5.6 2.0 2.7 ] %self[6.1 8.2 5.0 2.0 ] ) #<%self>#	-- [GET:%self].page 
		%v_45 = call_1f(%v_44, Fixnum:1 ;n:+, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%v_44[20.1 ] ) 
		line_num(;n: 58)		--org.jruby.ir.instructions.LineNumberInstr(	) 
		%v_46 = get_field(%self ;name: @page)		--org.jruby.ir.instructions.GetFieldInstr(	%self[11.9 6.1 8.2 5.0 5.6 2.0 2.7 ] %self[6.1 8.2 5.0 2.0 ] ) #<%self>#	-- [GET:%self].page 
		%v_47 = call_1f(%v_46, Fixnum:1 ;n:+, t:NO, cl:false)		--org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr(	%v_46[20.4 ] ) 
		return(%v_47)		--org.jruby.ir.instructions.ReturnInstr(	%v_47[20.5 ] ) 
PRINT info for BB 21:
	Vars Live on Entry:  29		
	Vars Live on Exit:  29		
	outgoing edges:23, 
	Instructions:
		return(nil)		--org.jruby.ir.instructions.ReturnInstr(	) 
PRINT info for BB 23:
	Vars Live on Entry:  29		
	Vars Live on Exit:  29		
	outgoing edges:
	Instructions:

