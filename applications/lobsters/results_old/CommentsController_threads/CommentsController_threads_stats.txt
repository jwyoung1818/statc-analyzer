User.where <User,SELECT>
User.where(:session_token => session[:u].to_s).first <,SELECT>
+FIELD+ User.deleted_at (datetime)
+FIELD+ User.banned_at (datetime)
+FIELD+ User.id (integer)
+FIELD+ User.username (string)
Keystore.transaction <Keystore,TXN>
self.lock <Keystore,TRANSACTION> (c)
self.lock(true).where <Keystore,SELECT> (c)
kv.save! <Keystore,INSERT> (c)
+FIELD+ Keystore.key (string)
self.where <Keystore,SELECT> (c)
+FIELD+ Keystore.value (integer)
traffic_kv.save! <Keystore,INSERT> (c)
date_kv.save! <Keystore,INSERT> (c)
User.where <User,SELECT>
User.where(:rss_token => params[:token].to_s).first <,SELECT>
User.where <User,SELECT>
User.where(:username => params[:user]).first! <,SELECT>
+FIELD+ User.username (string)
+FIELD+ User.username (string)
Comment.where <Comment,SELECT>
Comment.where(      :thread_id => thread_ids    ).includes <,SELECT>
+FIELD+ User.id (integer)
+FIELD+ User.id (integer)
+FIELD+ User.id (integer)
comments.map(&:story_id).uniq <,SELECT>
Vote.where(      :user_id => user_id, :story_id => story_id    ).where <,SELECT>
Vote.where(      :user_id => user_id, :story_id => story_id    ).where <,SELECT>
+FIELD+ Vote.comment_id (integer)
+FIELD+ Vote.vote (integer)
+FIELD+ Vote.reason (string)
+FIELD+ Comment.id (integer)
+FIELD+ Comment.id (integer)

query in total: 18
query in view: 0
query in closure: 6
read queries: 13
write queries: 3
