User where <User,SELECT>
TBLREADRECORD  User [2,0,0,3]
TBLWRITERECORD  User [0,0,0] Fields  []
User where( session_token => session[ u] to_s) first <,SELECT>
self lock(true) where( key => key) first <Keystore,SELECT> (c)
self lock(true) where <Keystore,SELECT> (c)
self lock <Keystore,TRANSACTION> (c)
TBLWRITERECORD  Keystore [0,0,1] Fields  []
key where <Keystore,SELECT> (c)
kv save! <Keystore,INSERT> (c)
TBLWRITERECORD  Keystore [0,0,1] Fields  []
traffic_kv save! <Keystore,INSERT> (c)
TBLWRITERECORD  Keystore [0,0,1] Fields  [value,]
date_kv save! <Keystore,INSERT> (c)
TBLWRITERECORD  Keystore [0,0,1] Fields  [value,]
User where <User,SELECT>
TBLREADRECORD  User [2,0,0,0]
TBLWRITERECORD  User [0,1,0] Fields  []
User where( username => params[ username]) first! <,SELECT>
self where( key => key) first try <Keystore,SELECT> (v) (c)
self where( key => key) first <Keystore,SELECT> (v) (c)
self where <Keystore,SELECT> (v) (c)
TBLREADRECORD  Keystore [0,0,0,0]
TBLWRITERECORD  Keystore [0,0,2] Fields  []
self where <Tag,SELECT> (v) (c)
TBLREADRECORD  Tag [0,0,0,0]
TBLWRITERECORD  Tag [0,0,0] Fields  []
Tag active joins(       stories    ) where <,SELECT> (v) (c)
Tag active joins(       stories    ) where(       stories => {  user_id => self id }    ) group <,GROUP> (v) (c)
Tag active joins(       stories    ) where(       stories => {  user_id => self id }    ) group(      Tag arel_table[ id]    ) order <,SELECT> (v) (c)
Tag active joins(       stories    ) where(       stories => {  user_id => self id }    ) group(      Tag arel_table[ id]    ) order(      'COUNT(*) desc'    ) first <,SELECT> (v) (c)
self votes joins( story,  comment) where <User,SELECT> (v) (c)
self votes joins( story,  comment)       where("comments user_id <> votes user_id AND " <<        "stories user_id <> votes user_id") order <User,SELECT> (v) (c)
v comment user try <User,SELECT> (v) (c)
TBLREADRECORD  User [0,0,0,0]
TBLWRITERECORD  User [1,0,0] Fields  []
v comment user try <User,SELECT> (v) (c)
TBLREADRECORD  User [0,0,0,0]
TBLWRITERECORD  User [1,0,0] Fields  []
v story user try <User,SELECT> (v) (c)
TBLREADRECORD  User [0,0,0,0]
TBLWRITERECORD  User [1,0,0] Fields  []
v story user try <User,SELECT> (v) (c)
TBLREADRECORD  User [0,0,1,0]
TBLWRITERECORD  User [1,0,0] Fields  []

STATS query in total  25
STATS query total on single path: 23
STATS read query on single path: 19
STATS write query on single path: 4
STATS query in view  14
STATS query in closure  21
STATS branch depend on query result  11
STATS branch total  38
STATS read queries  21
STATS read to read query  4
STATS read to write query  0
STATS read to view  7
STATS read to branch  6
STATS materialized query  2
STATS write queries  25
STATS write from user input  1
STATS write from other queries  10
STATS write from const  17
