 render :partial => "stories/listdetail",
    :locals => { :story => @story, :single_story => true } 
 if @story.markeddown_description.present? 
 raw @story.markeddown_description 
 end 
 if @story.is_unavailable && @story.story_cache.present? 

    time_ago_in_words_label(@story.unavailable_at) 
 simple_format(@story.story_cache) 
 end 
 if !@story.previewing 
 if !@story.is_gone? && !@story.previewing 
 render "comments/commentbox", :comment => @comment 
 end 
 comments_by_parent = @comments.group_by(&:parent_comment_id) 
 subtree = comments_by_parent[nil] 
 ancestors = [] 
 while subtree 
 if (comment = subtree.shift) 
 render "comments/comment", :comment => comment,
          :show_story => (comment.story_id != @story.id),
          :was_merged => (comment.story_id != @story.id) 
 if (children = comments_by_parent[comment.id]) 
 ancestors << subtree 
 subtree = children 
 else 
 end 
 elsif (subtree = ancestors.pop) 
 end 
 end 
 end 
