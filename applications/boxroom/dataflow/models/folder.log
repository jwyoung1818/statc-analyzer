SET IRMethod, name = copy
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: def_target_folder RECEIVEARG 
		 6: def_originally_copied_folder 
		 7: originally_copied_folder[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_originally_copied_folder 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_3 %self->dup %self[2.0,] 
		 2: def_new_folder %v_3[4.1,] 
		 3: 
		 4: ATTRASSIGN %v_3->is_copied_folder %v_3[4.1,] 
		 5: 
		 6: ATTRASSIGN new_folder->parent new_folder[4.2,] target_folder[2.5,] 
		 7: 
		 8: def_%v_4 new_folder->save! new_folder[4.2,4.6,] 
		 9: 
		 10: def_%v_5 originally_copied_folder->nil? originally_copied_folder[3.0,2.6,] 
		 11: BRANCH %v_5[4.10,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: def_originally_copied_folder new_folder[4.2,4.6,] 
		 1: def_%v_6 new_folder[4.2,4.6,] 
		 2: 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: def_%v_6 
BB 7
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_7 %self->permissions %self[2.0,] 
		 2: def_%v_8 %v_7->each %v_7[7.1,] %self[7.1,2.0,] 
CLOSURE BEGIN: permission[] new_folder[4.2,4.6,] new_permission[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: def_permission RECEIVEARG 
		 3: def_%current_scope 
		 4: def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_3 permission->dup permission[2.2,] 
		 2: def_new_permission %cl_1_3[3.1,] 
		 3: 
		 4: ATTRASSIGN %cl_1_3->folder %cl_1_3[3.1,] new_folder[] 
		 5: 
		 6: def_%cl_1_4 new_permission->save! new_permission[3.2,] 
		 7: RETURN %cl_1_4[3.6,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 3: 
		 4: def_%v_9 %self->user_files %self[7.1,2.0,] 
		 5: def_%v_10 %v_9->each %v_9[7.4,] %self[7.1,7.4,2.0,] 
CLOSURE BEGIN: file[] new_folder[4.2,4.6,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: def_file RECEIVEARG 
		 3: def_%current_scope 
		 4: def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_2_3 file->copy file[2.2,] new_folder[] 
		 2: RETURN %cl_2_3[3.1,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_4 
		 1: def_%cl_2_5 %cl_2_4[4.0,] 
		 2: RETURN %cl_2_5[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 6: 
		 7: def_%v_11 %self->children %self[7.1,7.4,2.0,] 
		 8: def_%v_12 %v_11->each %v_11[7.7,] %self[7.1,7.4,7.7,2.0,] 
CLOSURE BEGIN: folder[] originally_copied_folder[5.0,3.0,2.6,] new_folder[4.2,4.6,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_3_0 
		 2: def_folder RECEIVEARG 
		 3: def_%current_scope 
		 4: def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_3_3 folder[2.2,] originally_copied_folder[] 
		 2: BRANCH %cl_3_3[3.1,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_3_4 
		 1: RETURN %cl_3_4[4.0,] 
BB 5
	outgoing: 7 9 
	datadep: 
	instructions:
		 0: def_%cl_3_5 folder->copy folder[2.2,] new_folder[] originally_copied_folder[] 
		 1: RETURN %cl_3_5[5.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_3_6 
		 1: def_%cl_3_7 %cl_3_6[7.0,] 
		 2: RETURN %cl_3_7[7.1,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 9: 
		 10: RETURN new_folder[4.2,4.6,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = move
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: def_target_folder RECEIVEARG 
		 6: 
		 7: def_%v_3 target_folder[2.5,] %self[2.0,] 
		 8: BRANCH %v_3[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%v_4 %self->parent_of? %self[2.0,] target_folder[2.5,] 
		 1: def_%v_3 %v_4[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_5 
		 2: def_%v_6 %self->raise %self[2.0,] %v_5[5.1,] 
		 3: RETURN %v_6[5.2,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->parent %self[2.0,] target_folder[2.5,] 
		 2: 
		 3: def_%v_7 %self->save! %self[6.1,] 
		 4: RETURN %v_7[6.3,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = copy_permissions_to_children
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: def_permissions_to_copy RECEIVEARG 
		 6: 
		 7: def_%v_3 permissions_to_copy->each permissions_to_copy[2.5,] %self[2.0,] 
CLOSURE BEGIN: permission[] %self[2.0,] attributes[] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: def_permission RECEIVEARG 
		 3: def_%current_scope 
		 4: def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_3 permission->attributes permission[2.2,] 
		 2: def_%cl_1_4 
		 3: def_%cl_1_5 
		 4: def_%cl_1_6 
		 5: def_%cl_1_7 %cl_1_3->except %cl_1_3[3.1,] %cl_1_4[3.2,] %cl_1_5[3.3,] %cl_1_6[3.4,] 
		 6: def_attributes %cl_1_7[3.5,] 
		 7: 
		 8: def_%cl_1_8 (Permission) 
		 9: def_%cl_1_9 %self->children %self[2.0,] 
		 10: def_%cl_1_10 permission->group_id permission[3.1,2.2,] 
		 11: def_%cl_1_11 %cl_1_9[3.9,] %cl_1_10[3.10,] 
		 12: def_%cl_1_12 %cl_1_8->where %cl_1_8[3.8,] %cl_1_11[3.11,] 
		 13: def_%cl_1_13 %cl_1_12->update_all %cl_1_12[3.12,] attributes[3.6,] 
		 14: RETURN %cl_1_13[3.13,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_14 
		 1: def_%cl_1_15 %cl_1_14[4.0,] 
		 2: RETURN %cl_1_15[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 8: 
		 9: def_%v_4 %self->children %self[2.0,] 
		 10: def_%v_5 %v_4->each %v_4[2.9,] %self[2.0,2.9,] 
CLOSURE BEGIN: child[] permissions_to_copy[2.5,2.7,] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: def_child RECEIVEARG 
		 3: def_%current_scope 
		 4: def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_2_3 child->has_children? child[2.2,] 
		 2: BRANCH %cl_2_3[3.1,] 
BB 4
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: def_%cl_2_4 child->copy_permissions_to_children child[2.2,] permissions_to_copy[] 
		 1: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %cl_2_4[4.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_2_5 
		 1: def_%cl_2_6 %cl_2_5[7.0,] 
		 2: RETURN %cl_2_6[7.1,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 11: RETURN %v_5[2.10,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = parent_of?
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: def_folder RECEIVEARG 
		 6: 
		 7: def_%v_3 %self->children %self[2.0,] 
		 8: def_%v_4 %v_3->each %v_3[2.7,] %self[2.0,2.7,] 
CLOSURE BEGIN: child[] folder[2.5,] 
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: def_child RECEIVEARG 
		 3: def_%current_scope 
		 4: def_%current_module 
BB 3
	outgoing: 4 5 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_3 child[2.2,] folder[] 
		 2: BRANCH %cl_1_3[3.1,] 
BB 4
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: 
		 1: 
		 2: 
BB 5
	outgoing: 6 8 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_5 child->parent_of? child[2.2,] folder[] 
		 2: 
		 3: %cl_1_5[5.1,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[6.0,] 
		 2: RETURN %cl_1_7[6.1,] 
BB 8
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 9: 
		 10: RETURN 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%v_5 
		 1: def_%v_6 %v_5[4.0,] 
		 2: RETURN %v_6[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = is_root?
BB 1
	outgoing: 5 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: 
		 6: def_%v_3 %self->parent %self[2.0,] 
		 7: def_%v_4 %v_3->nil? %v_3[2.6,] 
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 5 
	datadep: 
	instructions:
		 0: def_%v_5 %self->new_record? %self[2.0,] 
		 1: def_%v_6 %v_5->! %v_5[3.0,] 
		 2: RETURN %v_6[3.1,] 
BB 4
	outgoing: 5 
	datadep: 
	instructions:
		 0: RETURN %v_4[2.7,] 
BB 5
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = has_children?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: 
		 6: def_%v_3 %self->children %self[2.0,] 
		 7: def_%v_4 %v_3->count %v_3[2.6,] 
		 8: def_%v_5 %v_4[2.7,] 
		 9: RETURN %v_5[2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = root
BB 1
	outgoing: 7 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: 
		 6: def_%v_4 %self[2.0,] 
		 7: def_%v_3 %v_4[2.6,] 
		 8: %v_4[2.6,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%v_5 %self[2.0,] @root_folder[] 
		 1: def_%v_3 %v_5[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.7,] 
BB 5
	outgoing: 7 
	datadep: 
	instructions:
		 0: def_%v_6 
		 1: def_%v_7 %self->find_by_name_and_parent_id %self[2.0,] %v_6[5.0,] 
		 2: ATTRASSIGN %self->@root_folder %self[5.1,2.0,] %v_7[5.1,] @root_folder[3.0,] 
		 3: RETURN %v_7[5.1,] 
BB 6
	outgoing: 7 
	datadep: 
	instructions:
		 0: RETURN %v_5[3.0,] 
BB 7
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = check_for_parent
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: 
		 6: def_%v_3 %self->parent %self[2.0,] 
		 7: def_%v_4 %v_3->nil? %v_3[2.6,] 
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: def_%v_5 %self->name %self[2.0,] 
		 1: def_%v_6 
		 2: def_%v_7 %v_5[3.0,] %v_6[3.1,] 
		 3: def_%v_4 %v_7[3.2,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_4[3.3,2.7,] 
BB 5
	outgoing: 8 
	datadep: 
	instructions:
		 0: def_%v_8 
		 1: def_%v_9 %self->raise %self[2.0,] %v_8[5.0,] 
		 2: RETURN %v_9[5.1,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: RETURN 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = create_permissions
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: 
		 6: def_%v_3 %self->is_root? %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%v_4 
		 1: RETURN %v_4[3.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%v_5 %self->parent %self[2.0,] 
		 2: def_%v_6 %v_5->permissions %v_5[4.1,] 
		 3: def_%v_7 %v_6->each %v_6[4.2,] %self[4.1,2.0,] 
CLOSURE BEGIN: %self[4.1,2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: def_permission RECEIVEARG 
		 3: def_%current_scope 
		 4: def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_1_3 (Permission) 
		 2: def_%cl_1_4 %cl_1_3->create! %cl_1_3[3.1,] %self[2.0,] 
CLOSURE BEGIN: permission[2.2,] p[] %self[2.0,] 
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_2_0 
		 2: def_p RECEIVEARG 
		 3: def_%current_scope 
		 4: def_%current_module 
BB 3
	outgoing: 4 6 
	datadep: 
	instructions:
		 0: 
		 1: def_%cl_2_3 permission->group permission[] 
		 2: ATTRASSIGN p->group p[2.2,] %cl_2_3[3.1,] 
		 3: 
		 4: ATTRASSIGN p->folder p[3.2,] %self[2.0,] 
		 5: 
		 6: def_%cl_2_4 permission->can_create permission[3.1,] 
		 7: ATTRASSIGN p->can_create p[3.2,3.4,] %cl_2_4[3.6,] 
		 8: 
		 9: def_%cl_2_5 permission->can_read permission[3.1,3.6,] 
		 10: ATTRASSIGN p->can_read p[3.2,3.4,3.7,] %cl_2_5[3.9,] 
		 11: 
		 12: def_%cl_2_6 permission->can_update permission[3.1,3.6,3.9,] 
		 13: ATTRASSIGN p->can_update p[3.2,3.4,3.7,3.10,] %cl_2_6[3.12,] 
		 14: 
		 15: def_%cl_2_7 permission->can_delete permission[3.1,3.6,3.9,3.12,] 
		 16: ATTRASSIGN p->can_delete p[3.2,3.4,3.7,3.10,3.13,] %cl_2_7[3.15,] 
		 17: RETURN %cl_2_7[3.15,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_2_8 
		 1: def_%cl_2_9 %cl_2_8[4.0,] 
		 2: RETURN %cl_2_9[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 3: RETURN %cl_1_4[3.2,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%cl_1_5 
		 1: def_%cl_1_6 %cl_1_5[4.0,] 
		 2: RETURN %cl_1_6[4.1,] 
BB 6
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 4: RETURN %v_7[4.3,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = dont_destroy_root_folder
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: def_%current_scope 
		 3: def_%current_module 
		 4: 
		 5: 
		 6: def_%v_3 %self->is_root? %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%v_4 
		 1: def_%v_5 %self->raise %self[2.0,] %v_4[3.0,] 
		 2: RETURN %v_5[3.1,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN 
BB 6
	outgoing: 
	datadep: 
	instructions:

