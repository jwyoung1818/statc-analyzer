SET IRMethod, name = can_create
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_folder 
		 6: 
		 7: COPY def_has_permission 
		 8: 
		 9: (Permission) def_%v_3 
		 10: %self->groups def_%v_4 %self[2.0,] 
		 11: folder->id def_%v_5 folder[2.5,] 
		 12: COPY def_%v_6 %v_4[2.10,] %v_5[2.11,] 
		 13: %v_3->where def_%v_7 %v_3[2.9,] %v_6[2.12,] 
BB 4
	outgoing: 6 5 
	datadep: 
	instructions:
		 0: %v_7->each def_%v_8 %v_7[2.13,] %self[2.0,] 
CLOSURE BEGIN: permission[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_permission 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY def_%cl_1_3 
		 2: permission->send def_%cl_1_4 permission[2.2,] %cl_1_3[3.1,] 
		 3: COPY def_has_permission %cl_1_4[3.2,] 
		 4: 
		 5: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[7.0,] 
		 2: RETURN %cl_1_7[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 1: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: def_%v_9 
		 1: def_%v_8 %v_9[5.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: RETURN has_permission[2.7,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%v_10 
		 1: def_%v_11 %v_10[7.0,] 
		 2: RETURN %v_11[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = can_read
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_folder 
		 6: 
		 7: COPY def_has_permission 
		 8: 
		 9: (Permission) def_%v_3 
		 10: %self->groups def_%v_4 %self[2.0,] 
		 11: folder->id def_%v_5 folder[2.5,] 
		 12: COPY def_%v_6 %v_4[2.10,] %v_5[2.11,] 
		 13: %v_3->where def_%v_7 %v_3[2.9,] %v_6[2.12,] 
BB 4
	outgoing: 6 5 
	datadep: 
	instructions:
		 0: %v_7->each def_%v_8 %v_7[2.13,] %self[2.0,] 
CLOSURE BEGIN: permission[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_permission 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY def_%cl_1_3 
		 2: permission->send def_%cl_1_4 permission[2.2,] %cl_1_3[3.1,] 
		 3: COPY def_has_permission %cl_1_4[3.2,] 
		 4: 
		 5: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[7.0,] 
		 2: RETURN %cl_1_7[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 1: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: def_%v_9 
		 1: def_%v_8 %v_9[5.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: RETURN has_permission[2.7,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%v_10 
		 1: def_%v_11 %v_10[7.0,] 
		 2: RETURN %v_11[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = can_update
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_folder 
		 6: 
		 7: COPY def_has_permission 
		 8: 
		 9: (Permission) def_%v_3 
		 10: %self->groups def_%v_4 %self[2.0,] 
		 11: folder->id def_%v_5 folder[2.5,] 
		 12: COPY def_%v_6 %v_4[2.10,] %v_5[2.11,] 
		 13: %v_3->where def_%v_7 %v_3[2.9,] %v_6[2.12,] 
BB 4
	outgoing: 6 5 
	datadep: 
	instructions:
		 0: %v_7->each def_%v_8 %v_7[2.13,] %self[2.0,] 
CLOSURE BEGIN: permission[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_permission 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY def_%cl_1_3 
		 2: permission->send def_%cl_1_4 permission[2.2,] %cl_1_3[3.1,] 
		 3: COPY def_has_permission %cl_1_4[3.2,] 
		 4: 
		 5: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[7.0,] 
		 2: RETURN %cl_1_7[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 1: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: def_%v_9 
		 1: def_%v_8 %v_9[5.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: RETURN has_permission[2.7,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%v_10 
		 1: def_%v_11 %v_10[7.0,] 
		 2: RETURN %v_11[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = can_delete
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 4 7 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_folder 
		 6: 
		 7: COPY def_has_permission 
		 8: 
		 9: (Permission) def_%v_3 
		 10: %self->groups def_%v_4 %self[2.0,] 
		 11: folder->id def_%v_5 folder[2.5,] 
		 12: COPY def_%v_6 %v_4[2.10,] %v_5[2.11,] 
		 13: %v_3->where def_%v_7 %v_3[2.9,] %v_6[2.12,] 
BB 4
	outgoing: 6 5 
	datadep: 
	instructions:
		 0: %v_7->each def_%v_8 %v_7[2.13,] %self[2.0,] 
CLOSURE BEGIN: permission[] 
BB 1
	outgoing: 9 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%cl_1_0 
		 2: RECEIVEARG def_permission 
		 3: COPY def_%current_scope 
		 4: COPY def_%current_module 
BB 3
	outgoing: 4 5 7 
	datadep: 
	instructions:
		 0: 
		 1: COPY def_%cl_1_3 
		 2: permission->send def_%cl_1_4 permission[2.2,] %cl_1_3[3.1,] 
		 3: COPY def_has_permission %cl_1_4[3.2,] 
		 4: 
		 5: BRANCH %cl_1_4[3.2,] 
BB 4
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
BB 5
	outgoing: 9 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%cl_1_6 
		 1: def_%cl_1_7 %cl_1_6[7.0,] 
		 2: RETURN %cl_1_7[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:
CLOSURE END
		 1: 
BB 5
	outgoing: 6 7 
	datadep: 
	instructions:
		 0: def_%v_9 
		 1: def_%v_8 %v_9[5.0,] 
BB 6
	outgoing: 9 
	datadep: 
	instructions:
		 0: 
		 1: RETURN has_permission[2.7,] %self[2.0,] 
BB 7
	outgoing: 9 
	datadep: 
	instructions:
		 0: def_%v_10 
		 1: def_%v_11 %v_10[7.0,] 
		 2: RETURN %v_11[7.1,] %self[2.0,] 
BB 9
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = password
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: def_%v_3 %self[2.0,] 
		 7: RETURN %v_3[2.6,] %self[2.0,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = password=
BB 1
	outgoing: 8 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_new_password 
		 6: 
		 7: ATTRASSIGN %self->@password %self[2.0,] new_password[2.5,] 
		 8: 
		 9: def_%v_3 %self[2.0,2.7,] 
		 10: %v_3->blank? def_%v_4 %v_3[2.9,] 
		 11: BRANCH %v_4[2.10,] 
BB 3
	outgoing: 8 
	datadep: 
	instructions:
		 0: COPY def_%v_5 
		 1: RETURN %v_5[3.0,] %self[2.0,2.7,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: 
		 1: (SecureRandom) def_%v_6 
		 2: def_%v_7 %v_6[4.1,] 
		 3: ATTRASSIGN %self->password_salt %self[2.0,2.7,] %v_7[4.2,] 
		 4: 
		 5: (Digest) def_%v_8 
		 6: def_%v_9 %v_8[4.5,] 
		 7: %v_9[4.6,] 
BB 5
	outgoing: 6 
	datadep: 
	instructions:
		 0: def_%v_9 %v_8[4.5,] 
BB 6
	outgoing: 8 
	datadep: 
	instructions:
		 0: %self->password_salt def_%v_10 %self[4.3,2.0,2.7,] 
		 1: %self->password def_%v_11 %self[6.0,4.3,2.0,2.7,] 
		 2: def_%v_12 %v_10[6.0,] %v_11[6.1,] 
		 3: %v_9->hexdigest def_%v_13 %v_9[5.0,4.6,] %v_12[6.2,] 
		 4: ATTRASSIGN %self->hashed_password %self[6.0,6.1,4.3,2.0,2.7,] %v_13[6.3,] 
		 5: RETURN %v_13[6.3,] %self[6.0,6.1,6.4,4.3,2.0,2.7,] 
BB 8
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = member_of_admins?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->groups def_%v_3 %self[2.0,] 
		 7: %v_3->admins_group def_%v_4 %v_3[2.6,] 
		 8: %v_4->present? def_%v_5 %v_4[2.7,] 
		 9: RETURN %v_5[2.8,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = refresh_reset_password_token
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: (SecureRandom) def_%v_3 
		 7: %v_3->hex def_%v_4 %v_3[2.6,] 
		 8: ATTRASSIGN %self->reset_password_token %self[2.0,] %v_4[2.7,] 
		 9: 
		 10: def_%v_5 
		 11: %v_5->from_now def_%v_6 %v_5[2.10,] 
		 12: ATTRASSIGN %self->reset_password_token_expires_at %self[2.0,2.8,] %v_6[2.11,] 
		 13: 
		 14: ATTRASSIGN %self->dont_clear_reset_password_token %self[2.0,2.8,2.12,] 
		 15: 
		 16: COPY def_%v_7 
		 17: %self->save def_%v_8 %self[2.0,2.8,2.12,2.14,] %v_7[2.16,] 
		 18: RETURN %v_8[2.17,] %self[2.0,2.8,2.12,2.14,2.17,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = refresh_remember_token
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: (SecureRandom) def_%v_3 
		 7: def_%v_4 %v_3[2.6,] 
		 8: ATTRASSIGN %self->remember_token %self[2.0,] %v_4[2.7,] 
		 9: 
		 10: COPY def_%v_5 
		 11: %self->save def_%v_6 %self[2.0,2.8,] %v_5[2.10,] 
		 12: RETURN %v_6[2.11,] %self[2.0,2.8,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = forget_me
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: ATTRASSIGN %self->remember_token %self[2.0,] 
		 7: 
		 8: COPY def_%v_3 
		 9: %self->save def_%v_4 %self[2.0,2.6,] %v_3[2.8,] 
		 10: RETURN %v_4[2.9,] %self[2.0,2.6,2.9,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = name_is_blank?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 
		 7: %v_3->blank? def_%v_4 %v_3[2.6,] 
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = authenticate
BB 1
	outgoing: 16 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: RECEIVEARG def_name 
		 6: RECEIVEARG def_password 
		 7: 
		 8: name->blank? def_%v_3 name[2.5,] 
		 9: BRANCH %v_3[2.8,] 
BB 3
	outgoing: 4 
	datadep: 
	instructions:
		 0: password->blank? def_%v_4 password[2.6,] 
		 1: COPY def_%v_3 %v_4[3.0,] 
BB 4
	outgoing: 5 6 
	datadep: 
	instructions:
		 0: BRANCH %v_3[3.1,2.8,] 
BB 5
	outgoing: 16 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 8 10 
	datadep: 
	instructions:
		 0: COPY def_%v_5 
		 1: 
		 2: %self->find_by_name def_%v_6 %self[2.0,] name[2.5,] 
		 3: COPY def_user %v_6[6.2,] 
		 4: BRANCH %v_6[6.2,] 
BB 8
	outgoing: 16 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 10
	outgoing: 11 12 
	datadep: 
	instructions:
		 0: 
		 1: (Digest) def_%v_7 
		 2: def_%v_8 %v_7[10.1,] 
		 3: %v_8[10.2,] 
BB 11
	outgoing: 12 
	datadep: 
	instructions:
		 0: def_%v_8 %v_7[10.1,] 
BB 12
	outgoing: 13 14 
	datadep: 
	instructions:
		 0: user->password_salt def_%v_9 user[6.3,] 
		 1: def_%v_10 %v_9[12.0,] password[2.6,] 
		 2: %v_8->hexdigest def_%v_11 %v_8[11.0,10.2,] %v_10[12.1,] 
		 3: COPY def_hash %v_11[12.2,] 
		 4: 
		 5: user->hashed_password def_%v_12 user[12.0,6.3,] 
		 6: hash->== def_%v_13 hash[12.3,] %v_12[12.5,] 
		 7: BRANCH %v_13[12.6,] 
BB 13
	outgoing: 16 
	datadep: 
	instructions:
		 0: COPY def_%v_14 user[6.3,] 
		 1: RETURN %v_14[13.0,] %self[2.0,] 
BB 14
	outgoing: 16 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 16
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = no_admin_yet?
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->find_by_is_admin def_%v_3 %self[2.0,] 
		 7: %v_3->blank? def_%v_4 %v_3[2.6,] 
		 8: RETURN %v_4[2.7,] %self[2.0,2.6,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = set_signup_token
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: (SecureRandom) def_%v_3 
		 7: %v_3->hex def_%v_4 %v_3[2.6,] 
		 8: ATTRASSIGN %self->signup_token %self[2.0,] %v_4[2.7,] 
		 9: 
		 10: def_%v_5 
		 11: %v_5->from_now def_%v_6 %v_5[2.10,] 
		 12: ATTRASSIGN %self->signup_token_expires_at %self[2.0,2.8,] %v_6[2.11,] 
		 13: RETURN %v_6[2.11,] %self[2.0,2.8,2.12,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = clear_signup_token
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->name def_%v_3 %self[2.0,] 
		 7: %v_3->blank? def_%v_4 %v_3[2.6,] 
		 8: BRANCH %v_4[2.7,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY def_%v_5 
		 1: RETURN %v_5[3.0,] %self[2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: 
		 1: ATTRASSIGN %self->signup_token %self[2.0,] 
		 2: 
		 3: ATTRASSIGN %self->signup_token_expires_at %self[4.1,2.0,] 
		 4: RETURN %self[4.1,4.3,2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = clear_reset_password_token
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: ATTRASSIGN %self->reset_password_token %self[2.0,] 
		 7: 
		 8: ATTRASSIGN %self->reset_password_token_expires_at %self[2.0,2.6,] 
		 9: RETURN %self[2.0,2.6,2.8,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = create_root_folder_and_admins_group
BB 1
	outgoing: 3 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: (Folder) def_%v_3 
		 7: COPY def_%v_4 
		 8: COPY def_%v_5 %v_4[2.7,] 
		 9: %v_3->create def_%v_6 %v_3[2.6,] %v_5[2.8,] 
		 10: 
		 11: %self->groups def_%v_7 %self[2.0,] 
		 12: (Group) def_%v_8 
		 13: COPY def_%v_9 
		 14: COPY def_%v_10 %v_9[2.13,] 
		 15: %v_8->create def_%v_11 %v_8[2.12,] %v_10[2.14,] 
		 16: def_%v_12 %v_7[2.11,] %v_11[2.15,] 
		 17: RETURN %v_12[2.16,] %self[2.0,2.11,] 
BB 3
	outgoing: 
	datadep: 
	instructions:

SET IRMethod, name = dont_destroy_admin
BB 1
	outgoing: 6 2 
	datadep: 
	instructions:
BB 2
	outgoing: 3 4 
	datadep: 
	instructions:
		 0: def_%self 
		 1: def_%v_0 
		 2: COPY def_%current_scope 
		 3: COPY def_%current_module 
		 4: 
		 5: 
		 6: %self->is_admin def_%v_3 %self[2.0,] 
		 7: BRANCH %v_3[2.6,] 
BB 3
	outgoing: 6 
	datadep: 
	instructions:
		 0: COPY def_%v_4 
		 1: %self->raise def_%v_5 %self[2.0,] %v_4[3.0,] 
		 2: RETURN %v_5[3.1,] %self[3.1,2.0,] 
BB 4
	outgoing: 6 
	datadep: 
	instructions:
		 0: RETURN %self[2.0,] 
BB 6
	outgoing: 
	datadep: 
	instructions:

