app/new_controllers/aliases_controller.rb:	    format.xml  { render :xml => @alias }
app/new_controllers/aliases_controller.rb:	      format.xml  { render :xml => @alias, :status => :created, :location => @alias }
app/new_controllers/aliases_controller.rb:	      format.xml  { render :xml => @alias.errors, :status => :unprocessable_entity }
app/new_controllers/aliases_controller.rb:	      format.html { render :action => "edit" }
app/new_controllers/aliases_controller.rb:	      format.xml  { render :xml => @alias.errors, :status => :unprocessable_entity }
app/new_controllers/aliases_controller.rb:			render :text => a.address
app/new_controllers/aliases_controller.rb:			render :text => a.address
app/new_controllers/aliases_controller.rb:			render :text => "(hda)"
app/new_controllers/aliases_controller.rb:		render :text => a.address
app/new_controllers/debug_controller.rb:	      	render :json =>{:status=>'ok'}
app/new_controllers/debug_controller.rb:	      	render :json =>{:status=>'failed',:errors=> er.errors}
app/new_controllers/debug_controller.rb:	      	render :json =>{:status=>'failed',:errors=> er.errors}
app/new_controllers/hosts_controller.rb:	    format.xml  { render :xml => @host }
app/new_controllers/hosts_controller.rb:	      format.xml  { render :xml => @host, :status => :created, :location => @host }
app/new_controllers/hosts_controller.rb:	      format.xml  { render :xml => @host.errors, :status => :unprocessable_entity }
app/new_controllers/hosts_controller.rb:	      format.html { render :action => "edit" }
app/new_controllers/hosts_controller.rb:	      format.xml  { render :xml => @host.errors, :status => :unprocessable_entity }
app/new_controllers/hosts_controller.rb:			render :text => a.address
app/new_controllers/hosts_controller.rb:		render :text => a.address
app/new_controllers/hosts_controller.rb:			render :text => a.mac
app/new_controllers/hosts_controller.rb:		render :text => a.mac
app/new_controllers/share_controller.rb:		render :text => s.name
app/new_controllers/share_controller.rb:		render :text => extras
app/new_controllers/share_controller.rb:		render :text => s.path
app/new_controllers/share_controller.rb:		render :text => s.tags
app/new_controllers/share_controller.rb:		render :partial => 'share/list', :locals => { :shares => shares }
app/new_controllers/share_controller.rb:			render :text => "", :status => 403
app/new_controllers/share_controller.rb:			render :text => "", :status => 401
app/new_controllers/share_controller.rb:		render :partial => "share/body", :locals => { :shares => shares }
app/new_controllers/share_controller.rb:			render :partial => 'share/name_cannot_be_blank'
app/new_controllers/share_controller.rb:			render :partial => 'share/name_invalid'
app/new_controllers/share_controller.rb:			render :partial => 'share/name_not_available'
app/new_controllers/share_controller.rb:			render :partial => 'share/name_available'
app/new_controllers/share_controller.rb:			render :partial => 'share/path_cannot_be_blank'
app/new_controllers/share_controller.rb:			render :partial => 'share/path_invalid'
app/new_controllers/share_controller.rb:			render :partial => 'share/path_not_available'
app/new_controllers/share_controller.rb:			render :partial => 'share/path_available'
app/new_controllers/share_controller.rb:		render :partial => 'share/access', :locals => { :share => share }
app/new_controllers/share_controller.rb:		render :partial => 'share/access', :locals => { :share => share }
app/new_controllers/share_controller.rb:		render :partial => 'share/access', :locals => { :share => share }
app/new_controllers/share_controller.rb:				render :partial => 'share/access', :locals => { :share => share }
app/new_controllers/share_controller.rb:		render :partial => 'share/access', :locals => { :share => share }
app/new_controllers/share_controller.rb:				render :partial => 'share/access', :locals => { :share => share }
app/new_controllers/share_controller.rb:		render :partial => 'share/access', :locals => { :share => share }
app/new_controllers/share_controller.rb:		render :partial => 'share/access', :locals => { :share => share }
app/new_controllers/share_controller.rb:		render :partial => 'share/visible', :locals => { :share => share }
app/new_controllers/share_controller.rb:		render :partial => 'share/tags', :locals => { :share => share }
app/new_controllers/share_controller.rb:		render :partial => "share/settings_all"
app/new_controllers/share_controller.rb:		render :text => s.value
app/new_controllers/share_controller.rb:		render :partial => 'share/disk_pool_share', :locals => { :share => share }
app/new_controllers/share_controller.rb:		render :partial => 'share/disk_pool_share', :locals => { :share => share }
app/new_controllers/share_controller.rb:			render :partial => 'share/disk_pooling_partition_checkbox', :locals => { :checked => false, :path => path }
app/new_controllers/share_controller.rb:				render :partial => 'share/disk_pooling_partition_checkbox', :locals => { :checked => false, :path => path }
app/new_controllers/share_controller.rb:				render :partial => 'share/disk_pooling_partition_checkbox', :locals => { :checked => true, :path => path }
app/new_controllers/server_controller.rb: render :update do |page| page["server_status_#{uid}"].replace_html status_msg end 
app/new_controllers/server_controller.rb: render :update do |page| page["server_status_#{uid}"].replace_html status_msg end 
app/new_controllers/server_controller.rb: render :update do |page| page["server_status_#{uid}"].replace_html status_msg end 
app/new_controllers/server_controller.rb: render :update do |page| page["server_status_#{uid}"].replace_html status_msg end 
app/new_controllers/server_controller.rb: render :update do |page| page["server_status_#{uid}"].replace_html status_msg end 
app/new_controllers/server_controller.rb: render :update do |page| page["server_status_#{uid}"].replace_html status_msg end 
app/new_controllers/server_controller.rb: render :update do |page| page["server_status_#{uid}"].replace_html status_msg end 
app/new_controllers/server_controller.rb: render :update do |page| page["server_status_#{uid}"].replace_html status_msg end 
app/new_controllers/server_controller.rb: render :update do |page| page["server_status_#{uid}"].replace_html status_msg end 
app/new_controllers/server_controller.rb: render :update do |page| page["server_status_#{uid}"].replace_html status_msg end 
app/new_controllers/server_controller.rb: render :update do |page| page["server_status_#{uid}"].replace_html status_msg end 
app/new_controllers/server_controller.rb: render :update do |page| page["server_status_#{uid}"].replace_html status_msg end 
