app/new_controllers/articles_controller.rb:      format.html { render_paginated_index }
app/new_controllers/articles_controller.rb:        render_articles_feed('atom')
app/new_controllers/articles_controller.rb:        render_articles_feed('rss')
app/new_controllers/articles_controller.rb: render article 
app/new_controllers/articles_controller.rb: render 'articles/article_links', article: article 
app/new_controllers/articles_controller.rb: render @article 
app/new_controllers/articles_controller.rb: render @article.published_comments 
app/new_controllers/articles_controller.rb:    render text: TextFilter.find(params[:id]).commenthelp
app/new_controllers/articles_controller.rb:      format.html { render "articles/#{@article.post_type}" }
app/new_controllers/articles_controller.rb:      format.atom { render_feedback_feed('atom') }
app/new_controllers/articles_controller.rb:      format.rss { render_feedback_feed('rss') }
app/new_controllers/articles_controller.rb:      format.xml { render_feedback_feed('atom') }
app/new_controllers/articles_controller.rb:  def render_articles_feed(format)
app/new_controllers/articles_controller.rb:      render "index_#{format}_feed", layout: false
app/new_controllers/articles_controller.rb:  def render_feedback_feed(format)
app/new_controllers/articles_controller.rb:    render "feedback_#{format}_feed", layout: false
app/new_controllers/articles_controller.rb:  def render_paginated_index
app/new_controllers/articles_controller.rb: render article 
app/new_controllers/articles_controller.rb: render 'articles/article_links', article: article 
app/new_controllers/text_controller.rb:    render text: this_blog.humans
app/new_controllers/text_controller.rb:    render text: this_blog.robots
app/new_controllers/comments_controller.rb:      format.js { render partial }
app/new_controllers/comments_controller.rb:    return render text: 'Comments are closed' if @article.comments_closed?
app/new_controllers/comments_controller.rb:      render nothing: true
app/new_controllers/xml_controller.rb:      return render(text: 'Unsupported format', status: 404) unless @format
app/new_controllers/xml_controller.rb:      return render(text: 'Unsupported feed type', status: 404)
app/new_controllers/xml_controller.rb:    render 'rsd', formats: [:rsd], handlers: [:builder]
app/new_controllers/trackbacks_controller.rb:      format.xml { render 'trackback', formats: [:xml], handlers: [:builder] }
app/new_controllers/trackbacks_controller.rb:      format.html { render nothing: true }
app/new_controllers/authors_controller.rb:      format.rss { render_feed 'rss' }
app/new_controllers/authors_controller.rb:      format.atom { render_feed 'atom' }
app/new_controllers/authors_controller.rb:  def render_feed(format)
app/new_controllers/authors_controller.rb:    render "show_#{format}_feed", layout: false
app/new_controllers/feedback_controller.rb:          render text: 'this space left blank'
app/new_controllers/feedback_controller.rb:      format.atom { render_feed 'atom', feedbacks }
app/new_controllers/feedback_controller.rb:      format.rss { render_feed 'rss', feedbacks }
app/new_controllers/feedback_controller.rb:  def render_feed(format, collection)
app/new_controllers/feedback_controller.rb:    render "index_#{format}_feed"
app/new_controllers/theme_controller.rb:    render_theme_item(:stylesheets, params[:filename], 'text/css; charset=utf-8')
app/new_controllers/theme_controller.rb:    render_theme_item(:javascript, params[:filename], 'text/javascript; charset=utf-8')
app/new_controllers/theme_controller.rb:    render_theme_item(:images, params[:filename])
app/new_controllers/theme_controller.rb:    render_theme_item(:fonts, params[:filename])
app/new_controllers/theme_controller.rb:    render nothing: true, status: 404
app/new_controllers/theme_controller.rb:  def render_theme_item(type, file, mime = nil)
app/new_controllers/theme_controller.rb:    return (render text: 'Not Found', status: 404) unless File.exist? src
app/new_controllers/admin/sidebar_controller.rb:        # render partial _target for it
app/new_controllers/admin/sidebar_controller.rb:        render json: { html: render_to_string('admin/sidebar/_config.html.erb', layout: false) }
app/new_controllers/admin/settings_controller.rb:      render action_param
app/new_controllers/admin/content_controller.rb:    render json: @items
app/new_controllers/admin/textfilters_controller.rb:    render text: BlueCloth.new(@macro.help_text).to_html
app/new_controllers/admin/notes_controller.rb: render @notes 
app/new_controllers/admin/notes_controller.rb: render @notes 
app/new_controllers/tags_controller.rb:          render template_name(params[:id])
app/new_controllers/tags_controller.rb: render article 
app/new_controllers/tags_controller.rb: render 'articles/article_links', article: article 
app/new_controllers/tags_controller.rb: render article 
app/new_controllers/tags_controller.rb: render 'articles/article_links', article: article 
app/new_controllers/tags_controller.rb: render article 
app/new_controllers/tags_controller.rb: render 'articles/article_links', article: article 
