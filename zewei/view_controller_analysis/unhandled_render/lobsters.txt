app/new_controllers/users_controller.rb:      format.json { render :json => @showing_user }
app/new_controllers/comments_controller.rb:      return render :text => "can't find story", :status => 400
app/new_controllers/comments_controller.rb:        return render :json => { :error => "invalid parent comment",
app/new_controllers/comments_controller.rb:      return render :text => "can't find comment", :status => 400
app/new_controllers/comments_controller.rb:      return render :text => "can't find comment", :status => 400
app/new_controllers/comments_controller.rb:    render :json => comment.as_json
app/new_controllers/comments_controller.rb:      return render :text => "can't find comment", :status => 400
app/new_controllers/comments_controller.rb:      return render :text => "can't find comment", :status => 400
app/new_controllers/comments_controller.rb:      return render :text => "can't find comment", :status => 400
app/new_controllers/comments_controller.rb:      return render :text => "can't find comment", :status => 400
app/new_controllers/comments_controller.rb:      return render :text => "can't find comment", :status => 400
app/new_controllers/comments_controller.rb:      return render :text => "can't find comment", :status => 400
app/new_controllers/comments_controller.rb:      return render :text => "can't find comment", :status => 400
app/new_controllers/comments_controller.rb:    render :text => "ok"
app/new_controllers/comments_controller.rb:      return render :text => "can't find comment", :status => 400
app/new_controllers/comments_controller.rb:    render :text => "ok"
app/new_controllers/comments_controller.rb:      return render :text => "can't find comment", :status => 400
app/new_controllers/comments_controller.rb:      return render :text => "invalid reason", :status => 400
app/new_controllers/comments_controller.rb:      return render :text => "not permitted to downvote", :status => 400
app/new_controllers/comments_controller.rb:    render :text => "ok"
app/new_controllers/stories_controller.rb:    return render :json => s.fetched_attributes
app/new_controllers/stories_controller.rb:        render :json => @story.as_json(:with_comments => @comments)
app/new_controllers/stories_controller.rb:      return render :text => "can't find story", :status => 400
app/new_controllers/stories_controller.rb:    render :text => "ok"
app/new_controllers/stories_controller.rb:      return render :text => "can't find story", :status => 400
app/new_controllers/stories_controller.rb:    render :text => "ok"
app/new_controllers/stories_controller.rb:      return render :text => "can't find story", :status => 400
app/new_controllers/stories_controller.rb:      return render :text => "invalid reason", :status => 400
app/new_controllers/stories_controller.rb:      return render :text => "not permitted to downvote", :status => 400
app/new_controllers/stories_controller.rb:    render :text => "ok"
app/new_controllers/stories_controller.rb:      return render :text => "can't find story", :status => 400
app/new_controllers/stories_controller.rb:    render :text => "ok"
app/new_controllers/stories_controller.rb:      return render :text => "can't find story", :status => 400
app/new_controllers/stories_controller.rb:    render :text => "ok"
app/new_controllers/home_controller.rb:      render :action => "about"
app/new_controllers/home_controller.rb:#      render :text => "<div class=\"box wide\">" <<
app/new_controllers/home_controller.rb:      render :action => "privacy"
app/new_controllers/home_controller.rb: #     render :text => "<div class=\"box wide\">" <<
app/new_controllers/home_controller.rb:      format.json { render :json => @stories }
app/new_controllers/home_controller.rb:      format.json { render :json => @stories }
app/new_controllers/home_controller.rb:      format.json { render :json => @stories }
app/new_controllers/home_controller.rb:      format.json { render :json => @stories }
app/new_controllers/application_controller.rb:      render :text => "not logged in", :status => 400
app/new_controllers/tags_controller.rb:      format.json { render :json => @tags }
