<model>
	<method name="vote_thusly_on_story_or_comment_for_user_because">
		<query line="https://github.com/jcs/lobsters/blob/master/app/models/vote.rb#L83">
			<text>
			SELECT  `votes`.* FROM `votes`  WHERE `votes`.`user_id` = 2 AND `votes`.`story_id` = 1 AND `votes`.`comment_id` = 4  ORDER BY `votes`.`id` ASC LIMIT 1
			</text>
			<input>user_id</input>
			<input>comment_id</input>
			<input>story_id</input>
			<output>vote_id</output>
		</query>
		<condition name="vote.new_record">
			<query>
				<text>	
				INSERT INTO `votes` (`comment_id`, `story_id`, `user_id`, `vote`) VALUES (4, 1, 2, 1)
				</text>
				<input>user_id</input>
				<input>comment_id</input>
				<input>story_id</input>
			</query>
		</condition>
		<condition name="!vote.new_record">
			<condition name="vote==0">
				<query line="https://github.com/jcs/lobsters/blob/master/app/models/vote.rb#L99">
					<text>
					DELETE FROM `votes` WHERE `votes`.`id` = 5
					</text>
					<input>vote_id</input>
					<table>votes</table>
					<operation>DELETE</operation>
				</query>
			</condition>
			<query line="https://github.com/jcs/lobsters/blob/master/app/models/vote.rb#L118">
				<text>
				SELECT  `comments`.* FROM `comments`  WHERE `comments`.`id` = 3 LIMIT 1
				</text>
				<input>comment_id</input>
				<table>comments</table>
				<operation>SELECT</operation>
			</query>
			<call class="comments" class_type="model" function_name="give_upvote_or_downvote_and_recalculate_confidence">
				<feed>comment_id</feed>
			</call>
			<call class="story" class_type="model" function_name="recalculate_hotness">
				<feed>story_id</feed>
				<feed>user_id</feed>
			</call>
		</condition>
	</method>
	<method name="comment_votes_by_user_for_story_hash">
		<query line="https://github.com/jcs/lobsters/blob/master/app/models/vote.rb#L39">
			<text>
			SELECT `votes`.* FROM `votes`  WHERE `votes`.`user_id` = 1 AND `votes`.`story_id` = 4 AND (comment_id IS NOT NULL)
			</text>
			<input>story_id</input>
			<input>user_id</input>
		</query>
	</method>
</model>
